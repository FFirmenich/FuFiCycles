/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm09 = JSIL.DeclareAssembly("Fusee.Tutorial.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Tutorial");
JSIL.DeclareNamespace("Fusee.Tutorial.Core");
/* class Fusee.Tutorial.Core.Renderer */ 

(function Renderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0D.System.Collections.Generic.Dictionary$b2.Of($asm07.Fusee.Serialization.MeshComponent, $asm04.Fusee.Engine.Core.Mesh))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0D.System.Collections.Generic.Dictionary$b2.Of($asm0D.System.String, $asm03.Fusee.Engine.Common.ITexture))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0D.System.Collections.Generic.Dictionary$b2.Of($asm0D.System.String, $asm04.Fusee.Engine.Core.ShaderEffect))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.Fusee.Xene.CollapsingStateStack$b1.Of($asm06.Fusee.Math.Core.float4x4))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectPassDeclaration))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectPassDeclaration)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0D.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderStateSet)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm03.Fusee.Engine.Common.Cull)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectParameterDeclaration)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0D.System.Single)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffect)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0D.System.Collections.Generic.IEnumerable$b1.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm04.Fusee.Engine.Core.Mesh)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0D.System.Boolean)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm03.Fusee.Engine.Common.ITexture)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm07.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm0D.System.Int32)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0D.TypeRef("System.String"), $asm03.TypeRef("Fusee.Engine.Common.ITexture")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0D.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };


  function Renderer__ctor (rc) {
    this._meshes = $S00().Construct();
    this._textures = $S01().Construct();
    this._shaderEffects = $S02().Construct();
    this._model = new ($T04())(4);
    $T05().prototype._ctor.call(this);
    this.RC = rc;
    this.LookupTexture("Leaves.jpg");
    this.LookupTexture("Sphere.jpg");
    var arg_1FF_0 = this._shaderEffects;
    var expr_65 = JSIL.Array.New($T07(), 1);
    var effectPassDeclaration = new ($T07())();
    effectPassDeclaration.VS = $T09().Get$b1($T08())("VertexShader.vert");
    effectPassDeclaration.PS = $T09().Get$b1($T08())("PixelShader.frag");
    var expr_98 = new ($T0A())();
    expr_98.set_ZEnable(true);
    expr_98.set_CullMode($T0B().Counterclockwise);
    effectPassDeclaration.StateSet = expr_98;
    expr_65[0] = effectPassDeclaration.MemberwiseClone();
    var expr_B9 = JSIL.Array.New($T0D(), 7);
    var effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "albedo";
    effectParameterDeclaration.Value = $T0E().One.MemberwiseClone();
    expr_B9[0] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "shininess";
    effectParameterDeclaration.Value = $T0F().$Box(1);
    expr_B9[1] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "specfactor";
    effectParameterDeclaration.Value = $T0F().$Box(1);
    expr_B9[2] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "speccolor";
    effectParameterDeclaration.Value = $T0E().Zero.MemberwiseClone();
    expr_B9[3] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "ambientcolor";
    effectParameterDeclaration.Value = $T0E().Zero.MemberwiseClone();
    expr_B9[4] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "texture";
    effectParameterDeclaration.Value = (this._textures).get_Item("Leaves.jpg");
    expr_B9[5] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "texmix";
    effectParameterDeclaration.Value = $T0F().$Box(0);
    expr_B9[6] = effectParameterDeclaration.MemberwiseClone();
    arg_1FF_0.set_Item("effect1", new ($T10())(expr_65, $T11().$Cast(expr_B9)));
    var arg_3B0_0 = this._shaderEffects;
    var expr_216 = JSIL.Array.New($T07(), 1);
    effectPassDeclaration = new ($T07())();
    effectPassDeclaration.VS = $T09().Get$b1($T08())("VertexShader2.vert");
    effectPassDeclaration.PS = $T09().Get$b1($T08())("PixelShader2.frag");
    var expr_249 = new ($T0A())();
    expr_249.set_ZEnable(true);
    expr_249.set_CullMode($T0B().Counterclockwise);
    effectPassDeclaration.StateSet = expr_249;
    expr_216[0] = effectPassDeclaration.MemberwiseClone();
    var expr_26A = JSIL.Array.New($T0D(), 7);
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "albedo";
    effectParameterDeclaration.Value = $T0E().One.MemberwiseClone();
    expr_26A[0] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "shininess";
    effectParameterDeclaration.Value = $T0F().$Box(1);
    expr_26A[1] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "specfactor";
    effectParameterDeclaration.Value = $T0F().$Box(1);
    expr_26A[2] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "speccolor";
    effectParameterDeclaration.Value = $T0E().Zero.MemberwiseClone();
    expr_26A[3] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "ambientcolor";
    effectParameterDeclaration.Value = $T0E().Zero.MemberwiseClone();
    expr_26A[4] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "texture";
    effectParameterDeclaration.Value = (this._textures).get_Item("Sphere.jpg");
    expr_26A[5] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "texmix";
    effectParameterDeclaration.Value = $T0F().$Box(0);
    expr_26A[6] = effectParameterDeclaration.MemberwiseClone();
    arg_3B0_0.set_Item("effect2", new ($T10())(expr_216, $T11().$Cast(expr_26A)));
    ((this._shaderEffects).get_Item("effect1")).AttachToContext(this.RC);
    ((this._shaderEffects).get_Item("effect2")).AttachToContext(this.RC);
    this.ShaderEffect = (this._shaderEffects).get_Item("effect2");
  }; 

  function Renderer_InitState () {
    (this._model).Clear();
    (this._model).set_Tos($T12().Identity.MemberwiseClone());
  }; 

  function Renderer_LookupMesh (mc) {
    var mesh = new JSIL.BoxedVariable(null);
    var flag = !(this._meshes).TryGetValue(mc, /* ref */ mesh);
    if (flag) {
      var expr_1C = new ($T14())();
      expr_1C.set_Vertices(mc.Vertices);
      expr_1C.set_Normals(mc.Normals);
      expr_1C.set_UVs(mc.UVs);
      expr_1C.set_Triangles(mc.Triangles);
      mesh.set(expr_1C);
      (this._meshes).set_Item(mc, mesh.get());
    }
    return mesh.get();
  }; 

  function Renderer_LookupTexture (textureName) {
    var value = new JSIL.BoxedVariable(null);
    var imageData = $T09().Get$b1($T17())(textureName).MemberwiseClone();
    var flag = !(this._textures).TryGetValue(textureName, /* ref */ value);
    if (flag) {
      value.set((this.RC).CreateTexture(imageData.MemberwiseClone(), false));
      (this._textures).set_Item(textureName, value.get());
    }
    return imageData;
  }; 

  function Renderer_OnMaterial (material) {
    var hasDiffuse = material.get_HasDiffuse();
    if (hasDiffuse) {
      (this.ShaderEffect).SetEffectParam("albedo", material.Diffuse.Color.MemberwiseClone());
      var flag = (material.Diffuse.Texture == "Leaves.jpg");
      if (flag) {
        (this.ShaderEffect).SetEffectParam("texture", (this._textures).get_Item("Leaves.jpg"));
        (this.ShaderEffect).SetEffectParam("texmix", $T0F().$Box(1));
      } else {
        (this.ShaderEffect).SetEffectParam("texmix", $T0F().$Box(0));
      }
    } else {
      (this.ShaderEffect).SetEffectParam("albedo", $T0E().Zero.MemberwiseClone());
    }
    var hasSpecular = material.get_HasSpecular();
    if (hasSpecular) {
      (this.ShaderEffect).SetEffectParam("shininess", material.Specular.Shininess);
      (this.ShaderEffect).SetEffectParam("specfactor", material.Specular.Intensity);
      (this.ShaderEffect).SetEffectParam("speccolor", material.Specular.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("shininess", $T19().$Box(0));
      (this.ShaderEffect).SetEffectParam("specfactor", $T19().$Box(0));
      (this.ShaderEffect).SetEffectParam("speccolor", $T0E().Zero.MemberwiseClone());
    }
    var hasEmissive = material.get_HasEmissive();
    if (hasEmissive) {
      (this.ShaderEffect).SetEffectParam("ambientcolor", material.Emissive.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("ambientcolor", $T0E().Zero.MemberwiseClone());
    }
  }; 

  function Renderer_OnMesh (mesh) {
    var shaderEffect = new JSIL.BoxedVariable(null);
    (this.ShaderEffect).RenderMesh(this.LookupMesh(mesh));
    var flag = (this._shaderEffects).TryGetValue(this.SceneVisitor$CurrentNode$value.Name, /* ref */ shaderEffect);
    if (flag) {
      (shaderEffect.get()).RenderMesh(this.LookupMesh(mesh));
    } else {
      (this.ShaderEffect).RenderMesh(this.LookupMesh(mesh));
    }
  }; 

  function Renderer_OnTransform (xform) {
    this._model.Tos = $S03().CallStatic($T12(), "op_Multiply", null, this._model.Tos.MemberwiseClone(), $T1B().Matrix(xform).MemberwiseClone()).MemberwiseClone();
    (this.RC.ModelView = $S03().CallStatic($T12(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PopState () {
    (this._model).Pop();
    (this.RC.ModelView = $S03().CallStatic($T12(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PushState () {
    (this._model).Push();
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Xene.SceneVisitor"), 
      Name: "Fusee.Tutorial.Core.Renderer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.RenderContext")), 
      Renderer__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      Renderer_InitState
    );

    $.Method({Static:false, Public:false}, "LookupMesh", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.Mesh"), [$asm07.TypeRef("Fusee.Serialization.MeshComponent")]), 
      Renderer_LookupMesh
    );

    $.Method({Static:false, Public:false}, "LookupTexture", 
      new JSIL.MethodSignature($asm00.TypeRef("Fusee.Base.Common.ImageData"), [$.String]), 
      Renderer_LookupTexture
    );

    $.Method({Static:false, Public:false}, "OnMaterial", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MaterialComponent")), 
      Renderer_OnMaterial
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnMesh", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MeshComponent")), 
      Renderer_OnMesh
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnTransform", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.TransformComponent")), 
      Renderer_OnTransform
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      Renderer_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      Renderer_PushState
    );

    $.Field({Static:false, Public:true }, "ShaderEffect", $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect"));

    $.Field({Static:false, Public:true }, "RC", $asm04.TypeRef("Fusee.Engine.Core.RenderContext"));

    $.Field({Static:false, Public:true }, "View", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_meshes", $asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]));

    $.Field({Static:false, Public:false}, "_textures", $asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm03.TypeRef("Fusee.Engine.Common.ITexture")]));

    $.Field({Static:false, Public:true }, "_shaderEffects", $asm0D.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]));

    $.Field({Static:false, Public:false}, "_model", $asm0B.TypeRef("Fusee.Xene.CollapsingStateStack`1", [$asm06.TypeRef("Fusee.Math.Core.float4x4")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Tutorial */ 

(function Tutorial$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0D.System.Predicate$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Renderer)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0D.System.Collections.Generic.IEnumerable$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.Fusee.Math.Core.float4)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0D.System.Single)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0D.System.Boolean)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0D.System.Math)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm04.Fusee.Engine.Core.TouchDevice)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.Fusee.Math.Core.float2)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm03.Fusee.Engine.Common.TouchPoints)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0D.System.Double)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm06.Fusee.Math.Core.M)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm0D.TypeRef("System.Single")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float4"), [
        $asm0D.TypeRef("System.Single"), $asm0D.TypeRef("System.Single"), 
        $asm0D.TypeRef("System.Single"), $asm0D.TypeRef("System.Single")
      ]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float2"), [$asm06.TypeRef("Fusee.Math.Core.float2"), $asm0D.TypeRef("System.Single")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [$asm06.TypeRef("Fusee.Math.Core.float3"), $asm0D.TypeRef("System.Single")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm0D.TypeRef("System.Single"), $asm0D.TypeRef("System.Single"), 
        $asm0D.TypeRef("System.Single")
      ]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Single"), [$asm0D.TypeRef("System.Single")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Single"), [
        $asm0D.TypeRef("System.Single"), $asm0D.TypeRef("System.Single"), 
        $asm0D.TypeRef("System.Single")
      ]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function Tutorial__ctor () {
    this.aPressed = false;
    this.dPressed = false;
    $T00().prototype._ctor.call(this);
  }; 

  function Tutorial_Init () {
    var arg_5D_1 = null, arg_A4_1 = null, arg_EB_1 = null, arg_132_1 = null;
    this._scene = $T03().Get$b1($T02())("CycleLand.fus");
    this._sceneScale = $S00().CallStatic($T04(), "CreateScale", null, 0.04).MemberwiseClone();
    this._renderer = new ($T05())(this.RenderCanvas$RC$value);
    var arg_5D_0 = this._scene.Children;
    if ((arg_5D_1 = $T07().$l$g9__28_0) === null) {
      arg_5D_1 = $T07().$l$g9__28_0 = $T01().New($T07().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__28_0", $S01(), false, false));
    }
    var expr_67 = $S02().CallStatic($T09(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T0A(), "FindNodes", null, arg_5D_0, arg_5D_1));
    this._wuggyTransform = (
      (expr_67 !== null)
         ? $T0B().GetTransform(expr_67, 0)
         : null)
    ;
    var arg_A4_0 = this._scene.Children;
    if ((arg_A4_1 = $T07().$l$g9__28_1) === null) {
      arg_A4_1 = $T07().$l$g9__28_1 = $T01().New($T07().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__28_1", $S04(), false, false));
    }
    var expr_AE = $S02().CallStatic($T09(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T0A(), "FindNodes", null, arg_A4_0, arg_A4_1));
    this._wgyWheelBigR = (
      (expr_AE !== null)
         ? $T0B().GetTransform(expr_AE, 0)
         : null)
    ;
    var arg_EB_0 = this._scene.Children;
    if ((arg_EB_1 = $T07().$l$g9__28_2) === null) {
      arg_EB_1 = $T07().$l$g9__28_2 = $T01().New($T07().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__28_2", $S05(), false, false));
    }
    var expr_F5 = $S02().CallStatic($T09(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T0A(), "FindNodes", null, arg_EB_0, arg_EB_1));
    this._wgyWheelBigL = (
      (expr_F5 !== null)
         ? $T0B().GetTransform(expr_F5, 0)
         : null)
    ;
    var arg_132_0 = this._scene.Children;
    if ((arg_132_1 = $T07().$l$g9__28_3) === null) {
      arg_132_1 = $T07().$l$g9__28_3 = $T01().New($T07().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__28_3", $S06(), false, false));
    }
    var expr_13C = $S02().CallStatic($T09(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T0A(), "FindNodes", null, arg_132_0, arg_132_1));
    this._wgyWall = (
      (expr_13C !== null)
         ? $T0B().GetTransform(expr_13C, 0)
         : null)
    ;
    (this.RenderCanvas$RC$value.ClearColor = $S07().Construct(1, 1, 1, 1));
  }; 

  function Tutorial_NormRot (rot) {

    for (; +rot > 3.14159274; rot -= 6.28318548) {
    }

    for (; +rot < -3.14159274; rot += 6.28318548) {
    }
    return rot;
  }; 

  function Tutorial_RenderAFrame () {
    (this.RenderCanvas$RC$value).Clear($T0F().$Flags("Color", "Depth"));
    var flag = (+$T12().get_Keyboard().get_LeftRightAxis() !== 0) || 
    (+$T12().get_Keyboard().get_UpDownAxis() !== 0);
    if (flag) {
      this._keys = true;
    }
    var num = Math.fround($T13().Exp(-0.8 * +$T14().get_DeltaTime()));
    var twoPoint = $T12().get_Touch().get_TwoPoint();
    if (twoPoint) {
      if (!this._twoTouchRepeated) {
        this._twoTouchRepeated = true;
        $thisType._angleRollInit = +$T12().get_Touch().get_TwoPointAngle() - +$thisType._angleRoll;
        $thisType._offsetInit = $T16().op_Subtraction($T12().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offset);
      }
      $thisType._zoomVel = +$T12().get_Touch().get_TwoPointDistanceVel() * -0.01;
      $thisType._angleRoll = +$T12().get_Touch().get_TwoPointAngle() - +$thisType._angleRollInit;
      $thisType._offset = $T16().op_Subtraction($T12().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offsetInit);
    } else {
      this._twoTouchRepeated = false;
      $thisType._zoomVel = +$T12().get_Mouse().get_WheelVel() * -0.5;
      $thisType._angleRoll = +$thisType._angleRoll * (num * 0.8);
      $thisType._offset = $S08().CallStatic($T16(), "op_Multiply", null, $thisType._offset.MemberwiseClone(), num * 0.8);
    }
    var leftButton = $T12().get_Mouse().get_LeftButton();
    if (leftButton) {
      this._keys = false;
      $thisType._angleVelHorz = (-7 * +$T12().get_Mouse().get_XVel()) * 2E-06;
      $thisType._angleVelVert = (-7 * +$T12().get_Mouse().get_YVel()) * 2E-06;
    } else {
      var flag3 = $T12().get_Touch().GetTouchActive($T18().Touchpoint_0) && 
      !$T12().get_Touch().get_TwoPoint();
      if (flag3) {
        this._keys = false;
        var velocity = $T12().get_Touch().GetVelocity($T18().Touchpoint_0);
        $thisType._angleVelHorz = (-7 * +velocity.x) * 2E-06;
        $thisType._angleVelVert = (-7 * +velocity.y) * 2E-06;
      } else {
        var keys = this._keys;
        if (keys) {
          $thisType._angleVelHorz = (-7 * +$T12().get_Keyboard().get_LeftRightAxis()) * 0.002;
          $thisType._angleVelVert = (-7 * +$T12().get_Keyboard().get_UpDownAxis()) * 0.002;
        } else {
          $thisType._angleVelHorz = +$thisType._angleVelHorz * num;
          $thisType._angleVelVert = +$thisType._angleVelVert * num;
        }
      }
    }
    var num3 = +this._wuggyTransform.Rotation.y;
    var key = $T12().get_Keyboard().GetKey($T19().A);
    if (key) {
      if (!this.aPressed) {
        num3 -= 1.57079637;
      }
      this.aPressed = true;
    } else {
      this.aPressed = false;
    }
    var key2 = $T12().get_Keyboard().GetKey($T19().D);
    if (key2) {
      if (!this.dPressed) {
        num3 += 1.57079637;
      }
      this.dPressed = true;
    } else {
      this.dPressed = false;
    }
    num3 = +$thisType.NormRot(num3);
    var float = this._wuggyTransform.Translation.MemberwiseClone();
    float = $T1A().op_Addition(float.MemberwiseClone(), $S09().CallStatic($T1A(), "op_Multiply", null, $S0A().Construct(Math.fround(Math.sin(num3)), 0, Math.fround(Math.cos(num3))), 10));
    this._wuggyTransform.Rotation = $S0A().Construct(0, num3, 0);
    this._wuggyTransform.Translation = float.MemberwiseClone();
    this._wgyWheelBigR.Rotation = $T1A().op_Addition(this._wgyWheelBigR.Rotation.MemberwiseClone(), $S0A().Construct((10 * 0.008), 0, 0));
    this._wgyWheelBigL.Rotation = $T1A().op_Addition(this._wgyWheelBigL.Rotation.MemberwiseClone(), $S0A().Construct((10 * 0.008), 0, 0));
    this._wgyWall.Rotation = $S0A().Construct(0, num3, 0);
    var flag6 = (num3 < (1.57079637 + 0.1)) && 
    (num3 > (1.57079637 - 0.1));
    if (flag6) {
      this._wgyWall.Translation.x = +float.x - 200;
      this._wgyWall.Translation.z = +float.z;
    } else {
      var flag7 = (num3 > -0.1) && 
      (num3 < 0.1);
      if (flag7) {
        this._wgyWall.Translation.x = +float.x;
        this._wgyWall.Translation.z = +float.z - 200;
      } else {
        var flag8 = (num3 < (-1.57079637 + 0.1)) && 
        (num3 > (-1.57079637 - 0.1));
        if (flag8) {
          this._wgyWall.Translation.x = +float.x + 200;
          this._wgyWall.Translation.z = +float.z;
        } else {
          var flag9 = (num3 > (3.14159274 - 0.1)) && 
          (num3 < (3.14159274 + 0.1));
          if (flag9) {
            this._wgyWall.Translation.x = +float.x;
            this._wgyWall.Translation.z = +float.z + 200;
          }
        }
      }
    }
    this._wgyWall.Scale.z = +this._wgyWall.Scale.z - 0.05;
    this._wgyWall.Translation.z = +this._wgyWall.Translation.z + 5;
    $thisType._zoom = +$thisType._zoom + +$thisType._zoomVel;
    if (+$thisType._zoom < 80) {
      $thisType._zoom = 80;
    }
    if (+$thisType._zoom > 2000) {
      $thisType._zoom = 2000;
    }
    $thisType._angleHorz = +$thisType._angleHorz + +$thisType._angleVelHorz;
    $thisType._angleHorz = +$S0B().CallStatic($T1C(), "MinAngle", null, $thisType._angleHorz);
    $thisType._angleVert = +$thisType._angleVert + +$thisType._angleVelVert;
    $thisType._angleVert = +$S0C().CallStatic($T1C(), "Clamp", null, $thisType._angleVert, -1.57079637, 1.57079637);
    $thisType._angleRoll = +$S0B().CallStatic($T1C(), "MinAngle", null, $thisType._angleRoll);
    var right = $S0D().CallStatic($T04(), "op_Multiply", null, 
      $S0D().CallStatic($T04(), "op_Multiply", null, 
        $T04().CreateRotationZ($thisType._angleRoll).MemberwiseClone(), 
        $T04().CreateRotationX($thisType._angleVert).MemberwiseClone()
      ).MemberwiseClone(), 
      $T04().CreateRotationY($thisType._angleHorz).MemberwiseClone()
    ).MemberwiseClone();
    var left = $T04().LookAt(
      0, 
      20, 
      -$thisType._zoom, 
      0, 
      0, 
      0, 
      0, 
      1, 
      0
    );
    this._renderer.View = $S0D().CallStatic($T04(), "op_Multiply", null, $S0D().CallStatic($T04(), "op_Multiply", null, left.MemberwiseClone(), right.MemberwiseClone()).MemberwiseClone(), this._sceneScale.MemberwiseClone()).MemberwiseClone();
    var left2 = $T04().CreateTranslation(
      +(((2 * +$thisType._offset.x) / +(this.get_Width()))), 
      +(((-2 * +$thisType._offset.y) / +(this.get_Height()))), 
      0
    ).MemberwiseClone();
    (this.RenderCanvas$RC$value.Projection = $S0D().CallStatic($T04(), "op_Multiply", null, left2.MemberwiseClone(), this._projection.MemberwiseClone()).MemberwiseClone());
    $S0E().CallVirtual("Traverse", null, this._renderer, this._scene.Children);
    this.Present();
  }; 

  function Tutorial_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspect = +((+(this.get_Width()) / +(this.get_Height())));
    this._projection = $T04().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000).MemberwiseClone();
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Tutorial.Core.Tutorial", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Tutorial__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      Tutorial_Init
    );

    $.Method({Static:true , Public:true }, "NormRot", 
      new JSIL.MethodSignature($.Single, [$.Single]), 
      Tutorial_NormRot
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      Tutorial_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      Tutorial_Resize
    );

    $.Field({Static:true , Public:false}, "_angleHorz", $.Single, 1.04719758);

    $.Field({Static:true , Public:false}, "_angleVert", $.Single, -0.2617994);

    $.Field({Static:true , Public:false}, "_angleVelHorz", $.Single);

    $.Field({Static:true , Public:false}, "_angleVelVert", $.Single);

    $.Field({Static:true , Public:false}, "_angleRoll", $.Single);

    $.Field({Static:true , Public:false}, "_angleRollInit", $.Single);

    $.Field({Static:true , Public:false}, "_zoomVel", $.Single);

    $.Field({Static:true , Public:false}, "_zoom", $.Single);

    $.Field({Static:true , Public:false}, "_offset", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Field({Static:true , Public:false}, "_offsetInit", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Constant({Static:true , Public:false}, "RotationSpeed", $.Single, 7);

    $.Constant({Static:true , Public:false}, "Damping", $.Single, 0.8);

    $.Field({Static:false, Public:false}, "_scene", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneScale", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_projection", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_twoTouchRepeated", $.Boolean);

    $.Field({Static:false, Public:false}, "_keys", $.Boolean);

    $.Field({Static:false, Public:false}, "_wuggyTransform", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyWheelBigR", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyWheelBigL", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyWheelSmallR", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyWheelSmallL", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyNeckHi", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wgyWall", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_trees", $asm0D.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:false, Public:false}, "_renderer", $asm09.TypeRef("Fusee.Tutorial.Core.Renderer"));

    $.Field({Static:false, Public:false}, "aPressed", $.Boolean);

    $.Field({Static:false, Public:false}, "dPressed", $.Boolean);


    function Tutorial__cctor () {
      $thisType._offset = new $asm06.Fusee.Math.Core.float2();
      $thisType._offsetInit = new $asm06.Fusee.Math.Core.float2();
      $thisType._angleHorz = 1.04719758;
      $thisType._angleVert = -0.2617994;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Tutorial__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

/* class Fusee.Tutorial.Core.Tutorial+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0D.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lInit$gb__28_0 (c) {
    return c.Name == "bike";
  }; 

  function $l$gc_$lInit$gb__28_1 (c) {
    return c.Name == "wheelback";
  }; 

  function $l$gc_$lInit$gb__28_2 (c) {
    return c.Name == "wheelfront";
  }; 

  function $l$gc_$lInit$gb__28_3 (c) {
    return c.Name == "Wall";
  }; 

  JSIL.MakeType({
      BaseType: $asm0D.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Tutorial+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__28_0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__28_0
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__28_1", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__28_1
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__28_2", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__28_2
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__28_3", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__28_3
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__28_0", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__28_1", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__28_2", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__28_3", $asm0D.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

