/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm09 = JSIL.DeclareAssembly("Fusee.FuFiCycles.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.FuFiCycles");
JSIL.DeclareNamespace("Fusee.FuFiCycles.Core");
/* class Fusee.FuFiCycles.Core.Cycle */ 

(function Cycle$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.Fusee.FuFiCycles.Core.Cycle_$l$gc)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Diagnostics.Debug)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm09.Fusee.FuFiCycles.Core.InputKeys)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm07.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm09.Fusee.FuFiCycles.Core.Renderer)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm14.System.Exception)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm09.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm14.System.Math)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm14.System.Double)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize(System.Array.Of($asm14.System.Single, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm14.System.IndexOutOfRangeException)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm07.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm07.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm14.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.String")))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("Fusee.Serialization.SceneComponentContainer")]), null))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm07.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [$asm06.TypeRef("Fusee.Math.Core.float3"), $asm14.TypeRef("System.Single")]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function Cycle__ctor (id) {
    var arg_7B_1 = null, arg_CE_1 = null, arg_115_1 = null, arg_15C_1 = null;
    this._cycle = $T03().Get$b1($T02())("Cycle.fus");
    this._wall = $T03().Get$b1($T02())("Wall.fus");
    this._walls = $S00().Construct();
    this._firstFrame = true;
    this.aPressed = false;
    this.dPressed = false;
    this.setPlayerId(id);
    if ((arg_7B_1 = $T05().$l$g9__19_0) === null) {
      arg_7B_1 = $T05().$l$g9__19_0 = $T01().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$l_ctor$gb__19_0", $S01(), false, false));
    }
    this._cycleSNC = $S02().CallStatic($T07(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T08(), "FindNodes", null, this._cycle.Children, arg_7B_1));
    var expr_91 = this._cycleSNC;
    this._cycleTransform = (
      (expr_91 !== null)
         ? $T09().GetTransform(expr_91, 0)
         : null)
    ;
    var arg_CE_0 = this._cycle.Children;
    if ((arg_CE_1 = $T05().$l$g9__19_1) === null) {
      arg_CE_1 = $T05().$l$g9__19_1 = $T01().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$l_ctor$gb__19_1", $S04(), false, false));
    }
    var expr_D8 = $S02().CallStatic($T07(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T08(), "FindNodes", null, arg_CE_0, arg_CE_1));
    this._cycleWheelR = (
      (expr_D8 !== null)
         ? $T09().GetTransform(expr_D8, 0)
         : null)
    ;
    var arg_115_0 = this._cycle.Children;
    if ((arg_115_1 = $T05().$l$g9__19_2) === null) {
      arg_115_1 = $T05().$l$g9__19_2 = $T01().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$l_ctor$gb__19_2", $S05(), false, false));
    }
    var expr_11F = $S02().CallStatic($T07(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T08(), "FindNodes", null, arg_115_0, arg_115_1));
    this._cycleWheelL = (
      (expr_11F !== null)
         ? $T09().GetTransform(expr_11F, 0)
         : null)
    ;
    if ((arg_15C_1 = $T05().$l$g9__19_3) === null) {
      arg_15C_1 = $T05().$l$g9__19_3 = $T01().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$l_ctor$gb__19_3", $S06(), false, false));
    }
    this._wallSNC = $S02().CallStatic($T07(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T08(), "FindNodes", null, this._wall.Children, arg_15C_1));
    this.setSpeed(5);
    if ((id | 0) !== 1) {
      if ((id | 0) !== 2) {
        $S07().CallStatic($T0B(), "WriteLine", null, "ACHTUNG: Spieler 3 aufw\xe4rts haben keine Keys zugeordnet.");
        this.setColor($S08().Construct(0.2, 0.2, 0.2));
      } else {
        this.input_keys = new ($T0D())($T0E().Left, $T0E().Right);
        this.setColor($S08().Construct(0, 1, 0));
      }
    } else {
      this.input_keys = new ($T0D())($T0E().A, $T0E().D);
      this.setColor($S08().Construct(0, 0.9, 1));
    }
  }; 

  function Cycle_collision () {
    $S07().CallStatic($T0B(), "WriteLine", null, "collision");
    this.setSpeed(0);
  }; 

  function Cycle_getColor () {
    return this.color;
  }; 

  function Cycle_getCycle () {
    return this.cycle;
  }; 

  function Cycle_getPlayerId () {
    return this.player_id;
  }; 

  function Cycle_getPlayerName () {
    return this.player_name;
  }; 

  function Cycle_getPosition () {
    return this.position;
  }; 

  function Cycle_getSpeed () {
    return this.speed;
  }; 

  function Cycle_getWall (x, z) {
    var sceneNodeContainer = new ($T06())();
    sceneNodeContainer.Name = "wall";
    sceneNodeContainer.Components = $S09().Construct();
    var transformComponent = new ($T10())();
    transformComponent.Translation = $S08().Construct(+x, 0, +z);
    transformComponent.Scale = $S08().Construct(1, 1, 1);
    $S0A().CallVirtual("Add", null, sceneNodeContainer.Components, transformComponent);
    var arg_77_0 = sceneNodeContainer.Components;
    var expr_6A = this._wallSNC;
    $S0A().CallVirtual("Add", null, arg_77_0, (
        (expr_6A !== null)
           ? $T09().GetMesh(expr_6A, 0)
           : null)
    );
    $S0B().CallVirtual("Add", null, this._wall.Children, sceneNodeContainer);
    $S0B().CallVirtual("Add", null, this._walls, sceneNodeContainer);
    return $T09().GetTransform($S0C().CallStatic($T07(), "Last$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], this._walls), 0);
  }; 

  function Cycle_prepareWall (cycleYaw) {
    if (+this._cycleWall.Translation.y === -150) {
      this._cycleWall.Translation.y = 0;
    }
    var flag2 = (+cycleYaw < (1.57079637 + 0.1)) && 
    (+cycleYaw > (1.57079637 - 0.1));
    if (flag2) {
      var expr_65_cp_0_cp_0 = this._cycleWall;
      expr_65_cp_0_cp_0.Translation.x = +expr_65_cp_0_cp_0.Translation.x + +((+this.getSpeed() / 2));
      this._cycleWall.Scale.x = +this._cycleWall.Scale.x - +this.getSpeed();
    } else {
      var flag3 = (+cycleYaw > -0.1) && 
      (+cycleYaw < 0.1);
      if (flag3) {
        var expr_C3_cp_0_cp_0 = this._cycleWall;
        expr_C3_cp_0_cp_0.Translation.z = +expr_C3_cp_0_cp_0.Translation.z + +((+this.getSpeed() / 2));
        this._cycleWall.Scale.z = +this._cycleWall.Scale.z - +this.getSpeed();
      } else {
        var flag4 = (+cycleYaw < (-1.57079637 + 0.1)) && 
        (+cycleYaw > (-1.57079637 - 0.1));
        if (flag4) {
          var expr_12E_cp_0_cp_0 = this._cycleWall;
          expr_12E_cp_0_cp_0.Translation.x = +expr_12E_cp_0_cp_0.Translation.x - +((+this.getSpeed() / 2));
          this._cycleWall.Scale.x = +this._cycleWall.Scale.x - +this.getSpeed();
        } else {
          var flag5 = ((+cycleYaw > (3.14159274 - 0.1)) && 
            (+cycleYaw < (3.14159274 + 0.1))) || 
          ((+cycleYaw > (-3.14159274 - 0.1)) && 
            (+cycleYaw < (-3.14159274 + 0.1)));
          if (flag5) {
            var expr_1AD_cp_0_cp_0 = this._cycleWall;
            expr_1AD_cp_0_cp_0.Translation.z = +expr_1AD_cp_0_cp_0.Translation.z - +((+this.getSpeed() / 2));
            this._cycleWall.Scale.z = +this._cycleWall.Scale.z - +this.getSpeed();
          }
        }
      }
    }
  }; 

  function Cycle_renderAFrame (_renderer, $exception) {
    var firstFrame = this._firstFrame;
    if (firstFrame) {
      this._cycleTransform.Scale.x = 30;
      this._cycleTransform.Scale.y = 30;
      this._cycleTransform.Scale.z = 30;
    }
    var flag = false;
    var num = +this._cycleTransform.Rotation.y;
    var key = $T16().get_Keyboard().GetKey((this.input_keys).getKeyLeft());
    if (key) {
      if (!this.aPressed) {
        num -= 1.57079637;
        flag = true;
      }
      this.aPressed = true;
    } else {
      this.aPressed = false;
    }
    var key2 = $T16().get_Keyboard().GetKey((this.input_keys).getKeyRight());
    if (key2) {
      if (!this.dPressed) {
        num += 1.57079637;
        flag = true;
      }
      this.dPressed = true;
    } else {
      this.dPressed = false;
    }
    num = +$T17().NormRot(num);
    this.setPosition($T0C().op_Addition(this._cycleTransform.Translation.MemberwiseClone(), $S0D().CallStatic($T0C(), "op_Multiply", null, $S08().Construct(Math.fround(Math.sin(num)), 0, Math.fround(Math.cos(num))), this.getSpeed())).MemberwiseClone());
    this._cycleTransform.Rotation = $S08().Construct(0, num, 0);
    this._cycleTransform.Translation = this.getPosition().MemberwiseClone();
    this._cycleWheelR.Rotation = $T0C().op_Addition(this._cycleWheelR.Rotation.MemberwiseClone(), $S08().Construct((+this.getSpeed() * 0.008), 0, 0));
    this._cycleWheelL.Rotation = $T0C().op_Addition(this._cycleWheelL.Rotation.MemberwiseClone(), $S08().Construct((+this.getSpeed() * 0.008), 0, 0));
    var num2 = ((Math.floor((this.getPosition().x + 0.5))) | 0);
    var num3 = ((Math.floor((this.getPosition().z + 0.5))) | 0);
    try {
      var flag4 = +$T17()._mapMirror.Get(num2, num3) === 0;
      if (flag4) {
        $T17()._mapMirror.Set(num2, num3, +(this.getPlayerId()));
      } else {
        this.collision();
      }
    } catch ($exception) {
      if ($T1B().$Is($exception)) {
        this.collision();
      } else {
        throw $exception;
      }
    }
    var flag5 = flag || 
    this._firstFrame;
    if (flag5) {
      this._cycleWall = this.getWall(num2, num3);
    }
    this.prepareWall(num);
    $S0E().CallVirtual("Traverse", null, _renderer, this._cycle.Children);
    $S0E().CallVirtual("Traverse", null, _renderer, this._wall.Children);
    var firstFrame2 = this._firstFrame;
    if (firstFrame2) {
      this._firstFrame = false;
    }
  }; 

  function Cycle_setColor (color) {
    this.color = color.MemberwiseClone();
    var materialComponent = new ($T1D())();
    materialComponent.Diffuse = new ($T1E())();
    materialComponent.Diffuse.Color = color.MemberwiseClone();
    var materialComponent2 = new ($T1D())();
    materialComponent2.Diffuse = new ($T1E())();
    materialComponent2.Diffuse.Color = $S08().Construct((+color.x * 0.8), (+color.y * 0.8), (+color.z * 0.8));
    var materialComponent3 = new ($T1D())();
    materialComponent3.Diffuse = new ($T1E())();
    materialComponent3.Diffuse.Color = $S08().Construct((+color.x * 0.6), (+color.y * 0.6), (+color.z * 0.6));
    ((this._cycleSNC.Children).get_Item(0).Components).set_Item(1, materialComponent2);
    ((this._cycleSNC.Children).get_Item(1).Components).set_Item(1, materialComponent3);
    (this._wallSNC.Components).set_Item(1, materialComponent);
  }; 

  function Cycle_setCycle (cycle) {
    this.cycle = cycle;
  }; 

  function Cycle_setPlayerId (id) {
    this.player_id = (id | 0);
  }; 

  function Cycle_setPlayerName (name) {
    this.player_name = name;
  }; 

  function Cycle_setPosition (position) {
    this.position = position.MemberwiseClone();
  }; 

  function Cycle_setSpeed (speed) {
    this.speed = +speed;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Cycle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      Cycle__ctor
    );

    $.Method({Static:false, Public:false}, "collision", 
      JSIL.MethodSignature.Void, 
      Cycle_collision
    );

    $.Method({Static:false, Public:true }, "getColor", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.Math.Core.float3")), 
      Cycle_getColor
    );

    $.Method({Static:false, Public:true }, "getCycle", 
      JSIL.MethodSignature.Return($asm07.TypeRef("Fusee.Serialization.TransformComponent")), 
      Cycle_getCycle
    );

    $.Method({Static:false, Public:true }, "getPlayerId", 
      JSIL.MethodSignature.Return($.Int32), 
      Cycle_getPlayerId
    );

    $.Method({Static:false, Public:true }, "getPlayerName", 
      JSIL.MethodSignature.Return($.String), 
      Cycle_getPlayerName
    );

    $.Method({Static:false, Public:true }, "getPosition", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.Math.Core.float3")), 
      Cycle_getPosition
    );

    $.Method({Static:false, Public:true }, "getSpeed", 
      JSIL.MethodSignature.Return($.Single), 
      Cycle_getSpeed
    );

    $.Method({Static:false, Public:false}, "getWall", 
      new JSIL.MethodSignature($asm07.TypeRef("Fusee.Serialization.TransformComponent"), [$.Int32, $.Int32]), 
      Cycle_getWall
    );

    $.Method({Static:false, Public:false}, "prepareWall", 
      JSIL.MethodSignature.Action($.Single), 
      Cycle_prepareWall
    );

    $.Method({Static:false, Public:true }, "renderAFrame", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.FuFiCycles.Core.Renderer")), 
      Cycle_renderAFrame
    );

    $.Method({Static:false, Public:true }, "setColor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Math.Core.float3")), 
      Cycle_setColor
    );

    $.Method({Static:false, Public:true }, "setCycle", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.TransformComponent")), 
      Cycle_setCycle
    );

    $.Method({Static:false, Public:false}, "setPlayerId", 
      JSIL.MethodSignature.Action($.Int32), 
      Cycle_setPlayerId
    );

    $.Method({Static:false, Public:true }, "setPlayerName", 
      JSIL.MethodSignature.Action($.String), 
      Cycle_setPlayerName
    );

    $.Method({Static:false, Public:true }, "setPosition", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Math.Core.float3")), 
      Cycle_setPosition
    );

    $.Method({Static:false, Public:true }, "setSpeed", 
      JSIL.MethodSignature.Action($.Single), 
      Cycle_setSpeed
    );

    $.Field({Static:false, Public:false}, "player_id", $.Int32);

    $.Field({Static:false, Public:false}, "player_name", $.String);

    $.Field({Static:false, Public:false}, "position", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "speed", $.Single);

    $.Field({Static:false, Public:false}, "color", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "cycle", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:true }, "input_keys", $asm09.TypeRef("Fusee.FuFiCycles.Core.InputKeys"));

    $.Field({Static:false, Public:false}, "_cycle", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_wall", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_cycleSNC", $asm07.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:false}, "_cycleTransform", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_cycleWheelR", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_cycleWheelL", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_wallSNC", $asm07.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:false}, "_cycleWall", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_walls", $asm14.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:false, Public:false}, "_firstFrame", $.Boolean);

    $.Field({Static:false, Public:false}, "aPressed", $.Boolean);

    $.Field({Static:false, Public:false}, "dPressed", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Cycle+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$l_ctor$gb__19_0 (c) {
    return c.Name == "cycle";
  }; 

  function $l$gc_$l_ctor$gb__19_1 (c) {
    return c.Name == "wheel_back";
  }; 

  function $l$gc_$l_ctor$gb__19_2 (c) {
    return c.Name == "wheel_front";
  }; 

  function $l$gc_$l_ctor$gb__19_3 (c) {
    return c.Name == "wall";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Cycle+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__19_0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__19_0
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__19_1", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__19_1
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__19_2", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__19_2
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__19_3", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__19_3
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__19_0", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__19_1", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__19_2", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__19_3", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.FuFiCycles.Core.InputKeys */ 

(function InputKeys$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };


  function InputKeys__ctor (left, right) {
    this.setKeyLeft(left);
    this.setKeyRight(right);
  }; 

  function InputKeys_getKeyLeft () {
    return this.key_left;
  }; 

  function InputKeys_getKeyRight () {
    return this.key_right;
  }; 

  function InputKeys_setKeyLeft (input_key) {
    this.key_left = input_key;
  }; 

  function InputKeys_setKeyRight (input_key) {
    this.key_right = input_key;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.InputKeys", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm03.TypeRef("Fusee.Engine.Common.KeyCodes")]), 
      InputKeys__ctor
    );

    $.Method({Static:false, Public:true }, "getKeyLeft", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyLeft
    );

    $.Method({Static:false, Public:true }, "getKeyRight", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyRight
    );

    $.Method({Static:false, Public:true }, "setKeyLeft", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyLeft
    );

    $.Method({Static:false, Public:true }, "setKeyRight", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyRight
    );

    $.Field({Static:false, Public:false}, "key_left", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));

    $.Field({Static:false, Public:false}, "key_right", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Renderer */ 

(function Renderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm07.Fusee.Serialization.MeshComponent, $asm04.Fusee.Engine.Core.Mesh))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm03.Fusee.Engine.Common.ITexture))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm04.Fusee.Engine.Core.ShaderEffect))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.Fusee.Xene.CollapsingStateStack$b1.Of($asm06.Fusee.Math.Core.float4x4))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectPassDeclaration))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectPassDeclaration)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderStateSet)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm03.Fusee.Engine.Common.Cull)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectParameterDeclaration)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffect)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm04.Fusee.Engine.Core.Mesh)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm03.Fusee.Engine.Common.ITexture)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm07.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm03.TypeRef("Fusee.Engine.Common.ITexture")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };


  function Renderer__ctor (rc) {
    this._meshes = $S00().Construct();
    this._textures = $S01().Construct();
    this._shaderEffects = $S02().Construct();
    this._model = new ($T04())(4);
    $T05().prototype._ctor.call(this);
    this.RC = rc;
    this.LookupTexture("Leaves.jpg");
    this.LookupTexture("Sphere.jpg");
    var arg_1FF_0 = this._shaderEffects;
    var expr_65 = JSIL.Array.New($T07(), 1);
    var effectPassDeclaration = new ($T07())();
    effectPassDeclaration.VS = $T09().Get$b1($T08())("VertexShader.vert");
    effectPassDeclaration.PS = $T09().Get$b1($T08())("PixelShader.frag");
    var expr_98 = new ($T0A())();
    expr_98.set_ZEnable(true);
    expr_98.set_CullMode($T0B().Counterclockwise);
    effectPassDeclaration.StateSet = expr_98;
    expr_65[0] = effectPassDeclaration.MemberwiseClone();
    var expr_B9 = JSIL.Array.New($T0D(), 7);
    var effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "albedo";
    effectParameterDeclaration.Value = $T0E().One.MemberwiseClone();
    expr_B9[0] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "shininess";
    effectParameterDeclaration.Value = $T0F().$Box(1);
    expr_B9[1] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "specfactor";
    effectParameterDeclaration.Value = $T0F().$Box(1);
    expr_B9[2] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "speccolor";
    effectParameterDeclaration.Value = $T0E().Zero.MemberwiseClone();
    expr_B9[3] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "ambientcolor";
    effectParameterDeclaration.Value = $T0E().Zero.MemberwiseClone();
    expr_B9[4] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "texture";
    effectParameterDeclaration.Value = (this._textures).get_Item("Leaves.jpg");
    expr_B9[5] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "texmix";
    effectParameterDeclaration.Value = $T0F().$Box(0);
    expr_B9[6] = effectParameterDeclaration.MemberwiseClone();
    arg_1FF_0.set_Item("effect1", new ($T10())(expr_65, $T11().$Cast(expr_B9)));
    var arg_3B0_0 = this._shaderEffects;
    var expr_216 = JSIL.Array.New($T07(), 1);
    effectPassDeclaration = new ($T07())();
    effectPassDeclaration.VS = $T09().Get$b1($T08())("VertexShader2.vert");
    effectPassDeclaration.PS = $T09().Get$b1($T08())("PixelShader2.frag");
    var expr_249 = new ($T0A())();
    expr_249.set_ZEnable(true);
    expr_249.set_CullMode($T0B().Counterclockwise);
    effectPassDeclaration.StateSet = expr_249;
    expr_216[0] = effectPassDeclaration.MemberwiseClone();
    var expr_26A = JSIL.Array.New($T0D(), 7);
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "albedo";
    effectParameterDeclaration.Value = $T0E().One.MemberwiseClone();
    expr_26A[0] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "shininess";
    effectParameterDeclaration.Value = $T0F().$Box(1);
    expr_26A[1] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "specfactor";
    effectParameterDeclaration.Value = $T0F().$Box(1);
    expr_26A[2] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "speccolor";
    effectParameterDeclaration.Value = $T0E().Zero.MemberwiseClone();
    expr_26A[3] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "ambientcolor";
    effectParameterDeclaration.Value = $T0E().Zero.MemberwiseClone();
    expr_26A[4] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "texture";
    effectParameterDeclaration.Value = (this._textures).get_Item("Sphere.jpg");
    expr_26A[5] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0D())();
    effectParameterDeclaration.Name = "texmix";
    effectParameterDeclaration.Value = $T0F().$Box(0);
    expr_26A[6] = effectParameterDeclaration.MemberwiseClone();
    arg_3B0_0.set_Item("effect2", new ($T10())(expr_216, $T11().$Cast(expr_26A)));
    ((this._shaderEffects).get_Item("effect1")).AttachToContext(this.RC);
    ((this._shaderEffects).get_Item("effect2")).AttachToContext(this.RC);
    this.ShaderEffect = (this._shaderEffects).get_Item("effect2");
  }; 

  function Renderer_InitState () {
    (this._model).Clear();
    (this._model).set_Tos($T12().Identity.MemberwiseClone());
  }; 

  function Renderer_LookupMesh (mc) {
    var mesh = new JSIL.BoxedVariable(null);
    var flag = !(this._meshes).TryGetValue(mc, /* ref */ mesh);
    if (flag) {
      var expr_1C = new ($T14())();
      expr_1C.set_Vertices(mc.Vertices);
      expr_1C.set_Normals(mc.Normals);
      expr_1C.set_UVs(mc.UVs);
      expr_1C.set_Triangles(mc.Triangles);
      mesh.set(expr_1C);
      (this._meshes).set_Item(mc, mesh.get());
    }
    return mesh.get();
  }; 

  function Renderer_LookupTexture (textureName) {
    var value = new JSIL.BoxedVariable(null);
    var imageData = $T09().Get$b1($T17())(textureName).MemberwiseClone();
    var flag = !(this._textures).TryGetValue(textureName, /* ref */ value);
    if (flag) {
      value.set((this.RC).CreateTexture(imageData.MemberwiseClone(), false));
      (this._textures).set_Item(textureName, value.get());
    }
    return imageData;
  }; 

  function Renderer_OnMaterial (material) {
    var hasDiffuse = material.get_HasDiffuse();
    if (hasDiffuse) {
      (this.ShaderEffect).SetEffectParam("albedo", material.Diffuse.Color.MemberwiseClone());
      var flag = (material.Diffuse.Texture == "Leaves.jpg");
      if (flag) {
        (this.ShaderEffect).SetEffectParam("texture", (this._textures).get_Item("Leaves.jpg"));
        (this.ShaderEffect).SetEffectParam("texmix", $T0F().$Box(1));
      } else {
        (this.ShaderEffect).SetEffectParam("texmix", $T0F().$Box(0));
      }
    } else {
      (this.ShaderEffect).SetEffectParam("albedo", $T0E().Zero.MemberwiseClone());
    }
    var hasSpecular = material.get_HasSpecular();
    if (hasSpecular) {
      (this.ShaderEffect).SetEffectParam("shininess", material.Specular.Shininess);
      (this.ShaderEffect).SetEffectParam("specfactor", material.Specular.Intensity);
      (this.ShaderEffect).SetEffectParam("speccolor", material.Specular.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("shininess", $T19().$Box(0));
      (this.ShaderEffect).SetEffectParam("specfactor", $T19().$Box(0));
      (this.ShaderEffect).SetEffectParam("speccolor", $T0E().Zero.MemberwiseClone());
    }
    var hasEmissive = material.get_HasEmissive();
    if (hasEmissive) {
      (this.ShaderEffect).SetEffectParam("ambientcolor", material.Emissive.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("ambientcolor", $T0E().Zero.MemberwiseClone());
    }
  }; 

  function Renderer_OnMesh (mesh) {
    var shaderEffect = new JSIL.BoxedVariable(null);
    (this.ShaderEffect).RenderMesh(this.LookupMesh(mesh));
    var flag = (this._shaderEffects).TryGetValue(this.SceneVisitor$CurrentNode$value.Name, /* ref */ shaderEffect);
    if (flag) {
      (shaderEffect.get()).RenderMesh(this.LookupMesh(mesh));
    } else {
      (this.ShaderEffect).RenderMesh(this.LookupMesh(mesh));
    }
  }; 

  function Renderer_OnTransform (xform) {
    this._model.Tos = $S03().CallStatic($T12(), "op_Multiply", null, this._model.Tos.MemberwiseClone(), $T1B().Matrix(xform).MemberwiseClone()).MemberwiseClone();
    (this.RC.ModelView = $S03().CallStatic($T12(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PopState () {
    (this._model).Pop();
    (this.RC.ModelView = $S03().CallStatic($T12(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PushState () {
    (this._model).Push();
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Xene.SceneVisitor"), 
      Name: "Fusee.FuFiCycles.Core.Renderer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.RenderContext")), 
      Renderer__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      Renderer_InitState
    );

    $.Method({Static:false, Public:false}, "LookupMesh", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.Mesh"), [$asm07.TypeRef("Fusee.Serialization.MeshComponent")]), 
      Renderer_LookupMesh
    );

    $.Method({Static:false, Public:false}, "LookupTexture", 
      new JSIL.MethodSignature($asm00.TypeRef("Fusee.Base.Common.ImageData"), [$.String]), 
      Renderer_LookupTexture
    );

    $.Method({Static:false, Public:false}, "OnMaterial", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MaterialComponent")), 
      Renderer_OnMaterial
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnMesh", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MeshComponent")), 
      Renderer_OnMesh
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnTransform", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.TransformComponent")), 
      Renderer_OnTransform
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      Renderer_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      Renderer_PushState
    );

    $.Field({Static:false, Public:true }, "ShaderEffect", $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect"));

    $.Field({Static:false, Public:true }, "RC", $asm04.TypeRef("Fusee.Engine.Core.RenderContext"));

    $.Field({Static:false, Public:true }, "View", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_meshes", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]));

    $.Field({Static:false, Public:false}, "_textures", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm03.TypeRef("Fusee.Engine.Common.ITexture")]));

    $.Field({Static:false, Public:true }, "_shaderEffects", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]));

    $.Field({Static:false, Public:false}, "_model", $asm0B.TypeRef("Fusee.Xene.CollapsingStateStack`1", [$asm06.TypeRef("Fusee.Math.Core.float4x4")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.FuFiCycles */ 

(function FuFiCycles$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.FuFiCycles.Core.Cycle))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm06.Fusee.Math.Core.float3, $asm14.System.Int32))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.Fusee.FuFiCycles.Core.Renderer)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.FuFiCycles.Core.Cycle)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.Fusee.Math.Core.float4)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Math)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.Fusee.Math.Core.M)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.FuFiCycles.Core.Cycle")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("Fusee.Math.Core.float3"), $asm14.TypeRef("System.Int32")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.FuFiCycles.Core.Cycle")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function FuFiCycles__ctor () {
    this.cycles = $S00().Construct();
    this._cyclePositions = $S01().Construct();
    this._mapSize = 0;
    $T02().prototype._ctor.call(this);
  }; 

  function FuFiCycles_Init () {
    this._scene = $T04().Get$b1($T03())("Land.fus");
    this._sceneScale = $S02().CallStatic($T05(), "CreateScale", null, 0.04).MemberwiseClone();
    this._renderer = new ($T06())(this.RenderCanvas$RC$value);
    $S03().CallVirtual("Add", null, this.cycles, new ($T07())(1));
    this._mapSize = 5000;
    $thisType._mapMirror = JSIL.MultidimensionalArray.New($T08(), [0, this._mapSize, 0, this._mapSize]);
    (this.RenderCanvas$RC$value.ClearColor = $S04().Construct(1, 1, 1, 1));
  }; 

  function FuFiCycles_NormRot (rot) {

    for (; +rot > 3.14159274; rot -= 6.28318548) {
    }

    for (; +rot < -3.14159274; rot += 6.28318548) {
    }
    return rot;
  }; 

  function FuFiCycles_RenderAFrame () {
    (this.RenderCanvas$RC$value).Clear($T0B().$Flags("Color", "Depth"));
    var flag = (+$T0E().get_Keyboard().get_LeftRightAxis() !== 0) || 
    (+$T0E().get_Keyboard().get_UpDownAxis() !== 0);
    if (flag) {
      this._keys = true;
    }
    var num = Math.fround($T0F().Exp(-0.8 * +$T10().get_DeltaTime()));
    var keys = this._keys;
    if (keys) {
      $thisType._angleVelHorz = (-7 * +$T0E().get_Keyboard().get_LeftRightAxis()) * 0.002;
      $thisType._angleVelVert = (-7 * +$T0E().get_Keyboard().get_UpDownAxis()) * 0.002;
    } else {
      $thisType._angleVelHorz = +$thisType._angleVelHorz * num;
      $thisType._angleVelVert = +$thisType._angleVelVert * num;
    }
    $thisType._zoom = +$thisType._zoom + +$thisType._zoomVel;
    if (+$thisType._zoom < 80) {
      $thisType._zoom = 80;
    }
    if (+$thisType._zoom > 2000) {
      $thisType._zoom = 2000;
    }
    $thisType._angleHorz = +$thisType._angleHorz + +$thisType._angleVelHorz;
    $thisType._angleHorz = +$S05().CallStatic($T11(), "MinAngle", null, $thisType._angleHorz);
    $thisType._angleVert = +$thisType._angleVert + +$thisType._angleVelVert;
    $thisType._angleVert = +$S06().CallStatic($T11(), "Clamp", null, $thisType._angleVert, -1.57079637, 1.57079637);
    $thisType._angleRoll = +$S05().CallStatic($T11(), "MinAngle", null, $thisType._angleRoll);
    var right = $S07().CallStatic($T05(), "op_Multiply", null, 
      $S07().CallStatic($T05(), "op_Multiply", null, 
        $T05().CreateRotationZ($thisType._angleRoll).MemberwiseClone(), 
        $T05().CreateRotationX($thisType._angleVert).MemberwiseClone()
      ).MemberwiseClone(), 
      $T05().CreateRotationY($thisType._angleHorz).MemberwiseClone()
    ).MemberwiseClone();
    var left = $T05().LookAt(
      0, 
      20, 
      -$thisType._zoom, 
      0, 
      0, 
      0, 
      0, 
      1, 
      0
    );
    this._renderer.View = $S07().CallStatic($T05(), "op_Multiply", null, 
      $S07().CallStatic($T05(), "op_Multiply", null, $S07().CallStatic($T05(), "op_Multiply", null, left.MemberwiseClone(), right.MemberwiseClone()).MemberwiseClone(), this._sceneScale.MemberwiseClone()).MemberwiseClone(), 
      $T05().CreateTranslation($T12().op_UnaryNegation($S08().Construct(((this.cycles).get_Item(0)).getPosition().x, ((this.cycles).get_Item(0)).getPosition().y, ((this.cycles).get_Item(0)).getPosition().z)).MemberwiseClone()).MemberwiseClone()
    ).MemberwiseClone();
    var left2 = $T05().CreateTranslation(
      +(((2 * +$thisType._offset.x) / +(this.get_Width()))), 
      +(((-2 * +$thisType._offset.y) / +(this.get_Height()))), 
      0
    ).MemberwiseClone();
    (this.RenderCanvas$RC$value.Projection = $S07().CallStatic($T05(), "op_Multiply", null, left2.MemberwiseClone(), this._projection.MemberwiseClone()).MemberwiseClone());
    $S09().CallVirtual("Traverse", null, this._renderer, this._scene.Children);

    for (var i = 0; i < ((this.cycles).get_Count() | 0); i = ((i + 1) | 0)) {
      ((this.cycles).get_Item(i)).renderAFrame(this._renderer);
    }
    this.Present();
  }; 

  function FuFiCycles_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspect = +((+(this.get_Width()) / +(this.get_Height())));
    this._projection = $T05().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000).MemberwiseClone();
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.FuFiCycles.Core.FuFiCycles", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      FuFiCycles__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_Init
    );

    $.Method({Static:true , Public:true }, "NormRot", 
      new JSIL.MethodSignature($.Single, [$.Single]), 
      FuFiCycles_NormRot
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_Resize
    );

    $.Field({Static:false, Public:false}, "cycles", $asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.FuFiCycles.Core.Cycle")]));

    $.Field({Static:true , Public:false}, "_angleHorz", $.Single, 0);

    $.Field({Static:true , Public:false}, "_angleVert", $.Single, -0.104719758);

    $.Field({Static:true , Public:false}, "_angleVelHorz", $.Single);

    $.Field({Static:true , Public:false}, "_angleVelVert", $.Single);

    $.Field({Static:true , Public:false}, "_angleRoll", $.Single);

    $.Field({Static:true , Public:false}, "_angleRollInit", $.Single);

    $.Field({Static:true , Public:false}, "_zoomVel", $.Single);

    $.Field({Static:true , Public:false}, "_zoom", $.Single);

    $.Field({Static:true , Public:false}, "_offset", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Field({Static:true , Public:false}, "_offsetInit", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Constant({Static:true , Public:false}, "RotationSpeed", $.Single, 7);

    $.Constant({Static:true , Public:false}, "Damping", $.Single, 0.8);

    $.Field({Static:false, Public:false}, "_scene", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneScale", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_projection", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_twoTouchRepeated", $.Boolean);

    $.Field({Static:false, Public:false}, "_keys", $.Boolean);

    $.Field({Static:false, Public:false}, "_cyclePositions", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("Fusee.Math.Core.float3"), $.Int32]));

    $.Field({Static:false, Public:false}, "_mapSize", $.Int32);

    $.Field({Static:true , Public:true }, "_mapMirror", $jsilcore.TypeRef("System.Array", [$.Single, JSIL.ArrayDimensionParameter(2)]));

    $.Field({Static:false, Public:false}, "_renderer", $asm09.TypeRef("Fusee.FuFiCycles.Core.Renderer"));


    function FuFiCycles__cctor () {
      $thisType._offset = new $asm06.Fusee.Math.Core.float2();
      $thisType._offsetInit = new $asm06.Fusee.Math.Core.float2();
      $thisType._angleHorz = 0;
      $thisType._angleVert = -0.104719758;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FuFiCycles__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

