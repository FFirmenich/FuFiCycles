/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm06 = JSIL.DeclareAssembly("Fusee.FuFiCycles.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.FuFiCycles");
JSIL.DeclareNamespace("Fusee.FuFiCycles.Core");
/* class Fusee.FuFiCycles.Core.KeyboardKeys */ 

(function KeyboardKeys$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm03.Fusee.Engine.Common.KeyCodes, $asm06.Fusee.FuFiCycles.Core.KeyboardKey))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.KeyboardKey)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm03.Fusee.Engine.Common.KeyCodes, $asm06.Fusee.FuFiCycles.Core.KeyboardKey))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.Collections.Generic.KeyValuePair$b2.Of($asm03.Fusee.Engine.Common.KeyCodes, $asm06.Fusee.FuFiCycles.Core.KeyboardKey))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm06.TypeRef("Fusee.FuFiCycles.Core.KeyboardKey")]), null))) ();
  };


  function KeyboardKeys__ctor () {
    this.keys = $S00().Construct();
    (this.keys).Add($T01().W, new ($T02())());
    (this.keys).Add($T01().A, new ($T02())());
    (this.keys).Add($T01().S, new ($T02())());
    (this.keys).Add($T01().D, new ($T02())());
    (this.keys).Add($T01().Up, new ($T02())());
    (this.keys).Add($T01().Left, new ($T02())());
    (this.keys).Add($T01().Down, new ($T02())());
    (this.keys).Add($T01().Right, new ($T02())());
  }; 

  function KeyboardKeys_renderAFrame () {
    var enumerator = $T00().prototype.GetEnumerator.call(this.keys);

    while ($T03().prototype.MoveNext.call(enumerator)) {
      var current = $T03().prototype.get_Current.call(enumerator).MemberwiseClone();
      var key = $T07().get_Keyboard().GetKey(current.get_Key());
      if (key) {
        if (!(current.get_Value()).isDown()) {
          (current.get_Value()).setPressed();
        }
      } else {
        (current.get_Value()).setNotDown();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.KeyboardKeys", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      KeyboardKeys__ctor
    );

    $.Method({Static:false, Public:true }, "renderAFrame", 
      JSIL.MethodSignature.Void, 
      KeyboardKeys_renderAFrame
    );

    $.Field({Static:false, Public:true }, "keys", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm06.TypeRef("Fusee.FuFiCycles.Core.KeyboardKey")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.KeyboardKey */ 

(function KeyboardKey$Members () {
  var $, $thisType;

  function KeyboardKey__ctor () {
    this.down = false;
    this.pressed = false;
  }; 

  function KeyboardKey_isDown () {
    return this.down;
  }; 

  function KeyboardKey_isPressed () {
    return this.pressed;
  }; 

  function KeyboardKey_setDown () {
    this.down = true;
  }; 

  function KeyboardKey_setNotDown () {
    this.down = false;
  }; 

  function KeyboardKey_setPressed () {
    this.pressed = true;
    this.setDown();
  }; 

  function KeyboardKey_setUnpressed () {
    this.pressed = false;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.KeyboardKey", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      KeyboardKey__ctor
    );

    $.Method({Static:false, Public:true }, "isDown", 
      JSIL.MethodSignature.Return($.Boolean), 
      KeyboardKey_isDown
    );

    $.Method({Static:false, Public:true }, "isPressed", 
      JSIL.MethodSignature.Return($.Boolean), 
      KeyboardKey_isPressed
    );

    $.Method({Static:false, Public:true }, "setDown", 
      JSIL.MethodSignature.Void, 
      KeyboardKey_setDown
    );

    $.Method({Static:false, Public:true }, "setNotDown", 
      JSIL.MethodSignature.Void, 
      KeyboardKey_setNotDown
    );

    $.Method({Static:false, Public:true }, "setPressed", 
      JSIL.MethodSignature.Void, 
      KeyboardKey_setPressed
    );

    $.Method({Static:false, Public:true }, "setUnpressed", 
      JSIL.MethodSignature.Void, 
      KeyboardKey_setUnpressed
    );

    $.Field({Static:false, Public:false}, "down", $.Boolean);

    $.Field({Static:false, Public:false}, "pressed", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Fusee.FuFiCycles.Core.Direction */ 

JSIL.MakeEnum(
  {
    FullName: "Fusee.FuFiCycles.Core.Direction", 
    BaseType: $asm14.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    FORWARD: 0, 
    RIGHT: 1, 
    BACKWARD: 2, 
    LEFT: 3, 
  }
);

/* class Fusee.FuFiCycles.Core.DirectionMethods */ 

(function DirectionMethods$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Direction)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Exception)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Exception"), [$asm14.TypeRef("System.String")]))) ();
  };


  function DirectionMethods_directionFromYaw (yaw) {
    var flag = (+yaw < (1.57079637 + 0.1)) && 
    (+yaw > (1.57079637 - 0.1));
    if (flag) {
      var result = $T02().RIGHT;
    } else {
      var flag2 = ((+yaw > -0.1) && 
        (+yaw < 0.1)) || 
      ((+yaw < (6.28318548 + 0.1)) && 
        (+yaw > (6.28318548 - 0.1)));
      if (flag2) {
        result = $T02().FORWARD;
      } else {
        var flag3 = ((+yaw < (-1.57079637 + 0.1)) && 
          (+yaw > (-1.57079637 - 0.1))) || 
        ((+yaw < (4.712389 + 0.1)) && 
          (+yaw > (4.712389 - 0.1)));
        if (flag3) {
          result = $T02().LEFT;
        } else {
          var flag4 = ((+yaw > (3.14159274 - 0.1)) && 
            (+yaw < (3.14159274 + 0.1))) || 
          ((+yaw > (-3.14159274 - 0.1)) && 
            (+yaw < (-3.14159274 + 0.1)));
          if (!flag4) {
            throw $S00().Construct("no direction for yaw found");
          }
          result = $T02().BACKWARD;
        }
      }
    }
    return result;
  }; 

  function DirectionMethods_getYaw (direction) {
    switch (direction.valueOf()) {
      case 0: 
        var result = 0;
        break;

      case 1: 
        result = 1.57079637;
        break;

      case 2: 
        result = 3.14159274;
        break;

      case 3: 
        result = -1.57079637;
        break;

      default: 
        throw $S00().Construct("no yaw for direction found");

    }
    return result;
  }; 

  JSIL.MakeStaticClass("Fusee.FuFiCycles.Core.DirectionMethods", false, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "directionFromYaw", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.FuFiCycles.Core.Direction"), [$.Single]), 
      DirectionMethods_directionFromYaw
    );

    $.Method({Static:true , Public:true }, "getYaw", 
      new JSIL.MethodSignature($.Single, [$asm06.TypeRef("Fusee.FuFiCycles.Core.Direction")]), 
      DirectionMethods_getYaw
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class Fusee.FuFiCycles.Core.Cycle */ 

(function Cycle$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Serialization.SceneContainer))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Cycle_$l$gc)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm09.Fusee.Serialization.TransformComponent)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm08.Fusee.Math.Core.float3)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm09.Fusee.Serialization.SceneComponentContainer)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0F.System.Diagnostics.Debug)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Direction)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.DirectionMethods)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Serialization.SceneComponentContainer")]), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm08.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), null))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.String")))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Direction")))) ();
  };


  function Cycle__ctor (id, instance) {
    var arg_58_1 = null, arg_249_1 = null, arg_29F_1 = null;
    this.collided = false;
    this.setId(id);
    this.setInstance(instance);
    var arg_58_0 = ((this.getInstance()).getSceneContainers()).get_Item("cycle").Children;
    if ((arg_58_1 = $T05().$l$g9__9_0) === null) {
      arg_58_1 = $T05().$l$g9__9_0 = $T02().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$l_ctor$gb__9_0", $S00(), false, false));
    }
    var sceneNodeContainer = $S01().CallStatic($T07(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T08(), "FindNodes", null, arg_58_0, arg_58_1));
    this.sceneNodeContainer = new ($T06())();
    this.sceneNodeContainer.Name = (JSIL.ConcatString("cycle", $T00().$Box(this.getId())));
    this.sceneNodeContainer.Components = $S03().Construct();
    var transformComponent = new ($T0B())();
    transformComponent.Name = (JSIL.ConcatString("tc", $T00().$Box(this.getId())));
    transformComponent.Rotation = $S04().Construct(0, 0, 0);
    transformComponent.Scale = $T0D().GetTransform(sceneNodeContainer, 0).Scale.MemberwiseClone();
    transformComponent.Translation = $S04().Construct(0, 0, 0);
    $S05().CallVirtual("Add", null, this.sceneNodeContainer.Components, transformComponent);
    $S05().CallVirtual("Add", null, this.sceneNodeContainer.Components, $T0D().GetMesh(sceneNodeContainer, 0));
    this.sceneNodeContainer.Children = $S06().Construct();

    for (var i = 0; i < ((sceneNodeContainer.Children).get_Count() | 0); i = ((i + 1) | 0)) {
      var sceneNodeContainer2 = new ($T06())();
      sceneNodeContainer2.Name = (JSIL.ConcatString("child", $T00().$Box(i)));
      sceneNodeContainer2.Components = $S03().Construct();

      for (var j = 0; j < (((sceneNodeContainer.Children).get_Item(i).Components).get_Count() | 0); j = ((j + 1) | 0)) {
        var sceneComponentContainer = ((sceneNodeContainer.Children).get_Item(i).Components).get_Item(j);
        sceneComponentContainer.Name = (JSIL.ConcatString("comp", $T00().$Box(i), $T00().$Box(j)));
        $S05().CallVirtual("Add", null, sceneNodeContainer2.Components, sceneComponentContainer);
      }
      $S07().CallVirtual("Add", null, this.sceneNodeContainer.Children, sceneNodeContainer2);
    }
    var arg_249_0 = ((this.getInstance()).getSceneContainers()).get_Item("cycle").Children;
    if ((arg_249_1 = $T05().$l$g9__9_1) === null) {
      arg_249_1 = $T05().$l$g9__9_1 = $T02().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$l_ctor$gb__9_1", $S08(), false, false));
    }
    var expr_253 = $S01().CallStatic($T07(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T08(), "FindNodes", null, arg_249_0, arg_249_1));
    this.frontwheel = (
      (expr_253 !== null)
         ? $T0D().GetTransform(expr_253, 0)
         : null)
    ;
    var arg_29F_0 = ((this.getInstance()).getSceneContainers()).get_Item("cycle").Children;
    if ((arg_29F_1 = $T05().$l$g9__9_2) === null) {
      arg_29F_1 = $T05().$l$g9__9_2 = $T02().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$l_ctor$gb__9_2", $S09(), false, false));
    }
    var expr_2A9 = $S01().CallStatic($T07(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T08(), "FindNodes", null, arg_29F_0, arg_29F_1));
    this.backwheel = (
      (expr_2A9 !== null)
         ? $T0D().GetTransform(expr_2A9, 0)
         : null)
    ;
    this.scale();
    $S07().CallVirtual("Add", null, ((this.getInstance()).getSceneContainers()).get_Item("cycle").Children, this.getSNC());
    this.setSpeed(30);
    this.setCyclePosition();
  }; 

  function Cycle_getBackWheel () {
    return this.backwheel;
  }; 

  function Cycle_getDirection () {
    return this.direction;
  }; 

  function Cycle_getFrontWheel () {
    return this.frontwheel;
  }; 

  function Cycle_getId () {
    return this.id;
  }; 

  function Cycle_getInstance () {
    return this.instance;
  }; 

  function Cycle_getPosition () {
    return this.position;
  }; 

  function Cycle_getSNC () {
    return this.sceneNodeContainer;
  }; 

  function Cycle_getSpeed () {
    return this.speed;
  }; 

  function Cycle_isCollided () {
    return this.collided;
  }; 

  function Cycle_scale () {
    $T0D().GetTransform(this.sceneNodeContainer, 0).Scale.x = 30;
    $T0D().GetTransform(this.sceneNodeContainer, 0).Scale.y = 30;
    $T0D().GetTransform(this.sceneNodeContainer, 0).Scale.z = 30;
  }; 

  function Cycle_setCollided () {
    $S0A().CallStatic($T10(), "WriteLine", null, JSIL.ConcatString("cycle", $T00().$Box(this.getId()), " kollidiert"));
    this.collided = true;
    this.setSpeed(0);
  }; 

  function Cycle_setCyclePosition () {
    var num = (this.getId() | 0);
    if (num !== 1) {
      if (num !== 2) {
        $S0A().CallStatic($T10(), "WriteLine", null, "ACHTUNG: Spieler 3 aufw\xe4rts haben keine Positionen zugeordnet.");
      } else {
        this.setPosition($S04().Construct(+(((((this.getInstance()).getMapSize() | 0) / 2) | 0) - 100), 0, +(((this.getInstance()).getMapSize() | 0) - 100)));
        $S0B().CallVirtual("setDirection", null, this, $T11().BACKWARD);
      }
    } else {
      this.setPosition($S04().Construct(+(((((this.getInstance()).getMapSize() | 0) / 2) | 0) + 100), 0, 100));
      $S0B().CallVirtual("setDirection", null, this, $T11().FORWARD);
    }
  }; 

  function Cycle_setDirection$00 (direction) {
    this.direction = direction;
    $T0D().GetTransform(this.getSNC(), 0).Rotation = $S04().Construct(0, $T12().getYaw(direction), 0);
  }; 

  function Cycle_setDirection$01 (yaw) {
    $S0B().CallVirtual("setDirection", null, this, $T12().directionFromYaw(yaw));
  }; 

  function Cycle_setId (id) {
    this.id = (id | 0);
  }; 

  function Cycle_setInstance (instance) {
    this.instance = instance;
  }; 

  function Cycle_setPosition (position) {
    $T0D().GetTransform(this.getSNC(), 0).Translation = position.MemberwiseClone();
    this.position = position.MemberwiseClone();
  }; 

  function Cycle_setSpeed (speed) {
    this.speed = +speed;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Cycle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles")]), 
      Cycle__ctor
    );

    $.Method({Static:false, Public:true }, "getBackWheel", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Serialization.TransformComponent")), 
      Cycle_getBackWheel
    );

    $.Method({Static:false, Public:true }, "getDirection", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.Direction")), 
      Cycle_getDirection
    );

    $.Method({Static:false, Public:true }, "getFrontWheel", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Serialization.TransformComponent")), 
      Cycle_getFrontWheel
    );

    $.Method({Static:false, Public:true }, "getId", 
      JSIL.MethodSignature.Return($.Int32), 
      Cycle_getId
    );

    $.Method({Static:false, Public:true }, "getInstance", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles")), 
      Cycle_getInstance
    );

    $.Method({Static:false, Public:true }, "getPosition", 
      JSIL.MethodSignature.Return($asm08.TypeRef("Fusee.Math.Core.float3")), 
      Cycle_getPosition
    );

    $.Method({Static:false, Public:true }, "getSNC", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      Cycle_getSNC
    );

    $.Method({Static:false, Public:true }, "getSpeed", 
      JSIL.MethodSignature.Return($.Single), 
      Cycle_getSpeed
    );

    $.Method({Static:false, Public:true }, "isCollided", 
      JSIL.MethodSignature.Return($.Boolean), 
      Cycle_isCollided
    );

    $.Method({Static:false, Public:false}, "scale", 
      JSIL.MethodSignature.Void, 
      Cycle_scale
    );

    $.Method({Static:false, Public:true }, "setCollided", 
      JSIL.MethodSignature.Void, 
      Cycle_setCollided
    );

    $.Method({Static:false, Public:false}, "setCyclePosition", 
      JSIL.MethodSignature.Void, 
      Cycle_setCyclePosition
    );

    $.Method({Static:false, Public:true }, "setDirection", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Direction")), 
      Cycle_setDirection$00
    );

    $.Method({Static:false, Public:true }, "setDirection", 
      JSIL.MethodSignature.Action($.Single), 
      Cycle_setDirection$01
    );

    $.Method({Static:false, Public:true }, "setId", 
      JSIL.MethodSignature.Action($.Int32), 
      Cycle_setId
    );

    $.Method({Static:false, Public:true }, "setInstance", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles")), 
      Cycle_setInstance
    );

    $.Method({Static:false, Public:true }, "setPosition", 
      JSIL.MethodSignature.Action($asm08.TypeRef("Fusee.Math.Core.float3")), 
      Cycle_setPosition
    );

    $.Method({Static:false, Public:true }, "setSpeed", 
      JSIL.MethodSignature.Action($.Single), 
      Cycle_setSpeed
    );

    $.Field({Static:false, Public:false}, "sceneNodeContainer", $asm09.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:false}, "frontwheel", $asm09.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "backwheel", $asm09.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "instance", $asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles"));

    $.Field({Static:false, Public:false}, "id", $.Int32);

    $.Field({Static:false, Public:false}, "speed", $.Single);

    $.Field({Static:false, Public:false}, "position", $asm08.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "collided", $.Boolean);

    $.Field({Static:false, Public:false}, "direction", $asm06.TypeRef("Fusee.FuFiCycles.Core.Direction"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Cycle+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$l_ctor$gb__9_0 (c) {
    return c.Name == "cycle";
  }; 

  function $l$gc_$l_ctor$gb__9_1 (c) {
    return c.Name == "wheel_front";
  }; 

  function $l$gc_$l_ctor$gb__9_2 (c) {
    return c.Name == "wheel_back";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Cycle+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__9_0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__9_0
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__9_1", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__9_1
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__9_2", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__9_2
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__9_0", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__9_1", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__9_2", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.FuFiCycles.Core.Player */ 

(function Player$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Cycle)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Serialization.SceneContainer))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Player_$l$gc)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.Diagnostics.Debug)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm08.Fusee.Math.Core.float3)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.InputKeys)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm14.System.Exception)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm09.Fusee.Serialization.TransformComponent)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm09.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm09.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Renderer)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.KeyboardKey)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm03.Fusee.Engine.Common.KeyCodes, $asm06.Fusee.FuFiCycles.Core.KeyboardKey))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm08.Fusee.Math.Core.M)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm14.System.Math)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm14.System.Double)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize(System.Array.Of($asm14.System.Single, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm14.System.IndexOutOfRangeException)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm08.Fusee.Math.Core.float4x4)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.String")))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm08.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Exception"), [$asm14.TypeRef("System.String")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Serialization.SceneComponentContainer")]), null))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Single")))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float3"), [$asm08.TypeRef("Fusee.Math.Core.float3"), $asm14.TypeRef("System.Single")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function Player__ctor (id, instance) {
    var arg_75_1 = null;
    this._angleHorz = 0;
    this.setInstance(instance);
    this.setPlayerId(id);
    this.setCycle(new ($T03())(this.getPlayerId(), this.getInstance()));
    var arg_75_0 = ((this.getInstance()).getSceneContainers()).get_Item("wall").Children;
    if ((arg_75_1 = $T06().$l$g9__14_0) === null) {
      arg_75_1 = $T06().$l$g9__14_0 = $T02().New($T06().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.Player_$l$gc, "$l_ctor$gb__14_0", $S00(), false, false));
    }
    this._wallSNC = $S01().CallStatic($T08(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T09(), "FindNodes", null, arg_75_0, arg_75_1));
    if ((id | 0) !== 1) {
      if ((id | 0) !== 2) {
        $S03().CallStatic($T0A(), "WriteLine", null, "ACHTUNG: Spieler 3 aufw\xe4rts haben keine Keys zugeordnet.");
        this.setColor($S04().Construct(0.2, 0.2, 0.2));
      } else {
        this.input_keys = new ($T0C())($T0D().Left, $T0D().Right, $T0D().Up, $T0D().Down);
        this.setColor($S04().Construct(0, 1, 0));
      }
    } else {
      this.input_keys = new ($T0C())($T0D().A, $T0D().D, $T0D().W, $T0D().S);
      this.setColor($S04().Construct(0, 0.9, 1));
    }
    switch (((this.getCycle()).getDirection()).valueOf()) {
      case 0: 
        this._angleHorz = 0;
        break;

      case 1: 
        this._angleHorz = 1.57079637;
        break;

      case 2: 
        this._angleHorz = 3.14159274;
        break;

      case 3: 
        this._angleHorz = 4.712389;
        break;

      default: 
        throw $S05().Construct("no direction found");

    }
  }; 

  function Player_fixWallEdges () {
    switch (((this.getCycle()).getDirection()).valueOf()) {
      case 0: 
        var expr_59_cp_0_cp_0 = this._cycleWall;
        expr_59_cp_0_cp_0.Scale.z = +expr_59_cp_0_cp_0.Scale.z - (+$thisType.WALL_WIDTH * 2);
        break;

      case 1: 
        var expr_38_cp_0_cp_0 = this._cycleWall;
        expr_38_cp_0_cp_0.Scale.x = +expr_38_cp_0_cp_0.Scale.x - (+$thisType.WALL_WIDTH * 2);
        break;

      case 2: 
        var expr_9B_cp_0_cp_0 = this._cycleWall;
        expr_9B_cp_0_cp_0.Scale.z = +expr_9B_cp_0_cp_0.Scale.z - (+$thisType.WALL_WIDTH * 2);
        break;

      case 3: 
        var expr_7A_cp_0_cp_0 = this._cycleWall;
        expr_7A_cp_0_cp_0.Scale.x = +expr_7A_cp_0_cp_0.Scale.x - (+$thisType.WALL_WIDTH * 2);
        break;

    }
  }; 

  function Player_getColor () {
    return this.color;
  }; 

  function Player_getCycle () {
    return this.cycle;
  }; 

  function Player_getInputKeys () {
    return this.input_keys;
  }; 

  function Player_getInstance () {
    return this.instance;
  }; 

  function Player_getPlayerId () {
    return this.player_id;
  }; 

  function Player_getPlayerName () {
    return this.player_name;
  }; 

  function Player_getProjection () {
    return this.projection;
  }; 

  function Player_getWall (x, z, cycleYaw) {
    switch (((this.getCycle()).getDirection()).valueOf()) {
      case 0: 
        z = (((z | 0) - (((this.getCycle()).getSpeed()) | 0)) | 0);
        break;

      case 1: 
        x = (((x | 0) - (((this.getCycle()).getSpeed()) | 0)) | 0);
        break;

      case 2: 
        z = (((z | 0) + (((this.getCycle()).getSpeed()) | 0)) | 0);
        break;

      case 3: 
        x = (((x | 0) + (((this.getCycle()).getSpeed()) | 0)) | 0);
        break;

    }
    var sceneNodeContainer = new ($T07())();
    sceneNodeContainer.Name = (JSIL.ConcatString("wall", $T00().$Box(x), $T00().$Box(z)));
    sceneNodeContainer.Components = $S06().Construct();
    var transformComponent = new ($T0F())();
    transformComponent.Name = (JSIL.ConcatString("tc", $T00().$Box(x), $T00().$Box(z)));
    transformComponent.Rotation = $S04().Construct(0, 0, 0);
    transformComponent.Scale = $S04().Construct($thisType.WALL_WIDTH, $thisType.WALL_HEIGHT, $thisType.WALL_WIDTH);
    transformComponent.Translation = $S04().Construct(+x, 0, +z);
    $S07().CallVirtual("Add", null, sceneNodeContainer.Components, transformComponent);
    var arg_12A_0 = sceneNodeContainer.Components;
    var expr_11D = this._wallSNC;
    $S07().CallVirtual("Add", null, arg_12A_0, (
        (expr_11D !== null)
           ? $T13().GetMaterial(expr_11D, 0)
           : null)
    );
    var arg_149_0 = sceneNodeContainer.Components;
    var expr_13C = this._wallSNC;
    $S07().CallVirtual("Add", null, arg_149_0, (
        (expr_13C !== null)
           ? $T13().GetMesh(expr_13C, 0)
           : null)
    );
    $S08().CallVirtual("Add", null, ((this.getInstance()).getSceneContainers()).get_Item("wall").Children, sceneNodeContainer);
    var materialComponent = new ($T15())();
    materialComponent.Diffuse = new ($T16())();
    materialComponent.Diffuse.Color = this.getColor().MemberwiseClone();
    (sceneNodeContainer.Components).set_Item(1, materialComponent);
    return $T13().GetTransform(sceneNodeContainer, 0);
  }; 

  function Player_isKeyDown (key) {
    return $T18().get_Keyboard().GetKey(key);
  }; 

  function Player_prepareWall (cycleYaw) {
    if (+this._cycleWall.Translation.y === -150) {
      this._cycleWall.Translation.y = 0;
    }
    switch (((this.getCycle()).getDirection()).valueOf()) {
      case 0: 
        var expr_C0_cp_0_cp_0 = this._cycleWall;
        expr_C0_cp_0_cp_0.Translation.z = +expr_C0_cp_0_cp_0.Translation.z + +((+(this.getCycle()).getSpeed() / 2));
        this._cycleWall.Scale.z = +this._cycleWall.Scale.z - +(this.getCycle()).getSpeed();
        break;

      case 1: 
        var expr_6A_cp_0_cp_0 = this._cycleWall;
        expr_6A_cp_0_cp_0.Translation.x = +expr_6A_cp_0_cp_0.Translation.x + +((+(this.getCycle()).getSpeed() / 2));
        this._cycleWall.Scale.x = +this._cycleWall.Scale.x - +(this.getCycle()).getSpeed();
        break;

      case 2: 
        var expr_169_cp_0_cp_0 = this._cycleWall;
        expr_169_cp_0_cp_0.Translation.z = +expr_169_cp_0_cp_0.Translation.z - +((+(this.getCycle()).getSpeed() / 2));
        this._cycleWall.Scale.z = +this._cycleWall.Scale.z - +(this.getCycle()).getSpeed();
        break;

      case 3: 
        var expr_116_cp_0_cp_0 = this._cycleWall;
        expr_116_cp_0_cp_0.Translation.x = +expr_116_cp_0_cp_0.Translation.x - +((+(this.getCycle()).getSpeed() / 2));
        this._cycleWall.Scale.x = +this._cycleWall.Scale.x - +(this.getCycle()).getSpeed();
        break;

    }
  }; 

  function Player_renderAFrame (_renderer, $exception) {
    var flag = false;
    var num = +$T13().GetTransform((this.getCycle()).getSNC(), 0).Rotation.y;
    if (((this.getInstance().keyboardKeys.keys).get_Item((this.input_keys).getKeyLeft())).isPressed()) {
      ((this.getInstance().keyboardKeys.keys).get_Item((this.input_keys).getKeyLeft())).setUnpressed();
      this._angleHorz = +this._angleHorz + 1.57079637;
      num -= 1.57079637;
      num = +$T01().NormRot(num);
      flag = true;
      $S09().CallVirtual("setDirection", null, this.getCycle(), num);
    }
    if (((this.getInstance().keyboardKeys.keys).get_Item((this.input_keys).getKeyRight())).isPressed()) {
      ((this.getInstance().keyboardKeys.keys).get_Item((this.input_keys).getKeyRight())).setUnpressed();
      this._angleHorz = +this._angleHorz - 1.57079637;
      num += 1.57079637;
      num = +$T01().NormRot(num);
      flag = true;
      $S09().CallVirtual("setDirection", null, this.getCycle(), num);
    }
    this._angleHorz = +this._angleHorz + +this._angleVelHorz;
    this._angleHorz = +$S0A().CallStatic($T1D(), "MinAngle", null, this._angleHorz);
    (this.getCycle()).setPosition($T0B().op_Addition(
        $T13().GetTransform((this.getCycle()).getSNC(), 0).Translation.MemberwiseClone(), 
        $S0B().CallStatic($T0B(), "op_Multiply", null, $S04().Construct(Math.fround(Math.sin(num)), 0, Math.fround(Math.cos(num))), (this.getCycle()).getSpeed())
      ).MemberwiseClone());
    $T13().GetTransform((this.getCycle()).getSNC(), 0).Translation = (this.getCycle()).getPosition().MemberwiseClone();
    (this.getCycle()).getFrontWheel().Rotation = $T0B().op_Addition(
      (this.getCycle()).getFrontWheel().Rotation.MemberwiseClone(), 
      $S04().Construct((+(this.getCycle()).getSpeed() * 0.008), 0, 0)
    );
    (this.getCycle()).getBackWheel().Rotation = $T0B().op_Addition(
      (this.getCycle()).getBackWheel().Rotation.MemberwiseClone(), 
      $S04().Construct((+(this.getCycle()).getSpeed() * 0.008), 0, 0)
    );
    var num2 = ((Math.floor(((this.getCycle()).getPosition().x + 0.5))) | 0);
    var num3 = ((Math.floor(((this.getCycle()).getPosition().z + 0.5))) | 0);
    try {

      for (var num4 = 0; +num4 < +(this.getCycle()).getSpeed(); num4 = ((num4 + 1) | 0)) {
        var num5 = num2;
        var num6 = num3;
        switch (((this.getCycle()).getDirection()).valueOf()) {
          case 0: 
            num6 = ((num6 - num4) | 0);
            break;

          case 1: 
            num5 = ((num5 - num4) | 0);
            break;

          case 2: 
            num6 = ((num6 + num4) | 0);
            break;

          case 3: 
            num5 = ((num5 + num4) | 0);
            break;

        }
        var flag4 = +$T01()._mapMirror.Get(num5, num6) === 0;
        if (flag4) {
          $T01()._mapMirror.Set(num5, num6, +(this.getPlayerId()));
        } else {
          (this.getCycle()).setCollided();
        }
      }
    } catch ($exception) {
      if ($T21().$Is($exception)) {
        (this.getCycle()).setCollided();
        $S03().CallStatic($T0A(), "WriteLine", null, ($exception).get_Message());
      } else {
        throw $exception;
      }
    }
    var flag5 = flag || 
    this.getInstance()._firstFrame;
    if (flag5) {
      this._cycleWall = this.getWall(num2, num3, num);
      this.fixWallEdges();
    }
    this.prepareWall(num);
    this.renderView(_renderer);
  }; 

  function Player_renderView (_renderer) {
    $S0C().CallVirtual("Traverse", null, _renderer, ((this.getInstance()).getSceneContainers()).get_Item("cycle").Children);
    $S0C().CallVirtual("Traverse", null, _renderer, ((this.getInstance()).getSceneContainers()).get_Item("wall").Children);
  }; 

  function Player_resize () {
    var playerId = (this.getPlayerId() | 0);
    if (playerId !== 1) {
      if (playerId === 2) {
        ((this.getInstance()).getRC()).Viewport(
          ((((this.getInstance()).get_Width() | 0) / 2) | 0), 
          0, 
          ((((this.getInstance()).get_Width() | 0) / 2) | 0), 
          (this.getInstance()).get_Height()
        );
      }
    } else {
      ((this.getInstance()).getRC()).Viewport(
        0, 
        0, 
        ((((this.getInstance()).get_Width() | 0) / 2) | 0), 
        (this.getInstance()).get_Height()
      );
    }
    var aspect = +((+((((this.getInstance()).get_Width() | 0) / 2 | 0)) / +((this.getInstance()).get_Height())));
    this.setProjection($T25().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000).MemberwiseClone());
  }; 

  function Player_setColor (color) {
    this.color = color.MemberwiseClone();
    var materialComponent = new ($T15())();
    materialComponent.Diffuse = new ($T16())();
    materialComponent.Diffuse.Color = $S04().Construct((+color.x * 0.8), (+color.y * 0.8), (+color.z * 0.8));
    var materialComponent2 = new ($T15())();
    materialComponent2.Diffuse = new ($T16())();
    materialComponent2.Diffuse.Color = $S04().Construct((+color.x * 0.6), (+color.y * 0.6), (+color.z * 0.6));
    (((this.getCycle()).getSNC().Children).get_Item(0).Components).set_Item(1, materialComponent);
    (((this.getCycle()).getSNC().Children).get_Item(1).Components).set_Item(1, materialComponent2);
  }; 

  function Player_setCycle (cycle) {
    this.cycle = cycle;
  }; 

  function Player_setInstance (instance) {
    this.instance = instance;
  }; 

  function Player_setPlayerId (id) {
    this.player_id = (id | 0);
  }; 

  function Player_setPlayerName (name) {
    this.player_name = name;
  }; 

  function Player_setProjection (projection) {
    this.projection = projection.MemberwiseClone();
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Player", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles")]), 
      Player__ctor
    );

    $.Method({Static:false, Public:false}, "fixWallEdges", 
      JSIL.MethodSignature.Void, 
      Player_fixWallEdges
    );

    $.Method({Static:false, Public:true }, "getColor", 
      JSIL.MethodSignature.Return($asm08.TypeRef("Fusee.Math.Core.float3")), 
      Player_getColor
    );

    $.Method({Static:false, Public:true }, "getCycle", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.Cycle")), 
      Player_getCycle
    );

    $.Method({Static:false, Public:true }, "getInputKeys", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.InputKeys")), 
      Player_getInputKeys
    );

    $.Method({Static:false, Public:true }, "getInstance", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles")), 
      Player_getInstance
    );

    $.Method({Static:false, Public:true }, "getPlayerId", 
      JSIL.MethodSignature.Return($.Int32), 
      Player_getPlayerId
    );

    $.Method({Static:false, Public:true }, "getPlayerName", 
      JSIL.MethodSignature.Return($.String), 
      Player_getPlayerName
    );

    $.Method({Static:false, Public:true }, "getProjection", 
      JSIL.MethodSignature.Return($asm08.TypeRef("Fusee.Math.Core.float4x4")), 
      Player_getProjection
    );

    $.Method({Static:false, Public:false}, "getWall", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Serialization.TransformComponent"), [
          $.Int32, $.Int32, 
          $.Single
        ]), 
      Player_getWall
    );

    $.Method({Static:false, Public:false}, "isKeyDown", 
      new JSIL.MethodSignature($.Boolean, [$asm03.TypeRef("Fusee.Engine.Common.KeyCodes")]), 
      Player_isKeyDown
    );

    $.Method({Static:false, Public:false}, "prepareWall", 
      JSIL.MethodSignature.Action($.Single), 
      Player_prepareWall
    );

    $.Method({Static:false, Public:true }, "renderAFrame", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Renderer")), 
      Player_renderAFrame
    );

    $.Method({Static:false, Public:true }, "renderView", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Renderer")), 
      Player_renderView
    );

    $.Method({Static:false, Public:true }, "resize", 
      JSIL.MethodSignature.Void, 
      Player_resize
    );

    $.Method({Static:false, Public:true }, "setColor", 
      JSIL.MethodSignature.Action($asm08.TypeRef("Fusee.Math.Core.float3")), 
      Player_setColor
    );

    $.Method({Static:false, Public:true }, "setCycle", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Cycle")), 
      Player_setCycle
    );

    $.Method({Static:false, Public:true }, "setInstance", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles")), 
      Player_setInstance
    );

    $.Method({Static:false, Public:false}, "setPlayerId", 
      JSIL.MethodSignature.Action($.Int32), 
      Player_setPlayerId
    );

    $.Method({Static:false, Public:true }, "setPlayerName", 
      JSIL.MethodSignature.Action($.String), 
      Player_setPlayerName
    );

    $.Method({Static:false, Public:true }, "setProjection", 
      JSIL.MethodSignature.Action($asm08.TypeRef("Fusee.Math.Core.float4x4")), 
      Player_setProjection
    );

    $.Field({Static:false, Public:false}, "player_id", $.Int32);

    $.Field({Static:false, Public:false}, "player_name", $.String);

    $.Field({Static:false, Public:false}, "color", $asm08.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "cycle", $asm06.TypeRef("Fusee.FuFiCycles.Core.Cycle"));

    $.Field({Static:false, Public:true }, "input_keys", $asm06.TypeRef("Fusee.FuFiCycles.Core.InputKeys"));

    $.Field({Static:false, Public:false}, "instance", $asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles"));

    $.Field({Static:false, Public:true }, "projection", $asm08.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_wallSNC", $asm09.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:false}, "_cycleTransform", $asm09.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_cycleWall", $asm09.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:true }, "_angleHorz", $.Single);

    $.Field({Static:false, Public:true }, "_angleVelHorz", $.Single);

    $.Field({Static:true , Public:true }, "WALL_WIDTH", $.Single, 20);

    $.Field({Static:true , Public:true }, "WALL_HEIGHT", $.Single, 0.5);


    function Player__cctor () {
      $thisType.WALL_WIDTH = 20;
      $thisType.WALL_HEIGHT = 0.5;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Player__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Player+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$l_ctor$gb__14_0 (c) {
    return c.Name == "wall";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Player+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__14_0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__14_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__14_0", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.FuFiCycles.Core.InputKeys */ 

(function InputKeys$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };


  function InputKeys__ctor (left, right, up, down) {
    this.setKeyLeft(left);
    this.setKeyRight(right);
    this.setKeyUp(up);
    this.setKeyDown(down);
  }; 

  function InputKeys_getKeyDown () {
    return this.down;
  }; 

  function InputKeys_getKeyLeft () {
    return this.left;
  }; 

  function InputKeys_getKeyRight () {
    return this.right;
  }; 

  function InputKeys_getKeyUp () {
    return this.up;
  }; 

  function InputKeys_setKeyDown (input_key) {
    this.down = input_key;
  }; 

  function InputKeys_setKeyLeft (input_key) {
    this.left = input_key;
  }; 

  function InputKeys_setKeyRight (input_key) {
    this.right = input_key;
  }; 

  function InputKeys_setKeyUp (input_key) {
    this.up = input_key;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.InputKeys", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), 
          $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm03.TypeRef("Fusee.Engine.Common.KeyCodes")
        ]), 
      InputKeys__ctor
    );

    $.Method({Static:false, Public:true }, "getKeyDown", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyDown
    );

    $.Method({Static:false, Public:true }, "getKeyLeft", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyLeft
    );

    $.Method({Static:false, Public:true }, "getKeyRight", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyRight
    );

    $.Method({Static:false, Public:true }, "getKeyUp", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyUp
    );

    $.Method({Static:false, Public:true }, "setKeyDown", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyDown
    );

    $.Method({Static:false, Public:true }, "setKeyLeft", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyLeft
    );

    $.Method({Static:false, Public:true }, "setKeyRight", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyRight
    );

    $.Method({Static:false, Public:true }, "setKeyUp", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyUp
    );

    $.Field({Static:false, Public:false}, "left", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));

    $.Field({Static:false, Public:false}, "right", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));

    $.Field({Static:false, Public:false}, "up", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));

    $.Field({Static:false, Public:false}, "down", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Renderer */ 

(function Renderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm09.Fusee.Serialization.MeshComponent, $asm04.Fusee.Engine.Core.Mesh))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm03.Fusee.Engine.Common.ITexture))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm04.Fusee.Engine.Core.ShaderEffect))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.Fusee.Xene.CollapsingStateStack$b1.Of($asm08.Fusee.Math.Core.float4x4))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectPassDeclaration))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectPassDeclaration)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderStateSet)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectParameterDeclaration)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm08.Fusee.Math.Core.float3)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffect)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm08.Fusee.Math.Core.float4x4)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm09.Fusee.Serialization.MeshComponent)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm04.Fusee.Engine.Core.Mesh)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm03.Fusee.Engine.Common.ITexture)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm09.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm09.Fusee.Serialization.TransformComponent)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm03.TypeRef("Fusee.Engine.Common.ITexture")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float4x4"), [$asm08.TypeRef("Fusee.Math.Core.float4x4"), $asm08.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };


  function Renderer__ctor (instance) {
    this._meshes = $S00().Construct();
    this._textures = $S01().Construct();
    this._shaderEffects = $S02().Construct();
    this._model = new ($T04())(4);
    $T05().prototype._ctor.call(this);
    this.setInstance(instance);
    this.LookupTexture("Sphere.jpg");
    var arg_1EE_0 = this._shaderEffects;
    var expr_5A = JSIL.Array.New($T07(), 1);
    var effectPassDeclaration = new ($T07())();
    effectPassDeclaration.VS = (this.getInstance()).getVertexShader();
    effectPassDeclaration.PS = (this.getInstance()).getPixelShader();
    var expr_8F = new ($T08())();
    expr_8F.set_ZEnable(true);
    effectPassDeclaration.StateSet = expr_8F;
    expr_5A[0] = effectPassDeclaration.MemberwiseClone();
    var expr_A8 = JSIL.Array.New($T0A(), 7);
    var effectParameterDeclaration = new ($T0A())();
    effectParameterDeclaration.Name = "albedo";
    effectParameterDeclaration.Value = $T0B().One.MemberwiseClone();
    expr_A8[0] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0A())();
    effectParameterDeclaration.Name = "shininess";
    effectParameterDeclaration.Value = $T0C().$Box(1);
    expr_A8[1] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0A())();
    effectParameterDeclaration.Name = "specfactor";
    effectParameterDeclaration.Value = $T0C().$Box(1);
    expr_A8[2] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0A())();
    effectParameterDeclaration.Name = "speccolor";
    effectParameterDeclaration.Value = $T0B().Zero.MemberwiseClone();
    expr_A8[3] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0A())();
    effectParameterDeclaration.Name = "ambientcolor";
    effectParameterDeclaration.Value = $T0B().Zero.MemberwiseClone();
    expr_A8[4] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0A())();
    effectParameterDeclaration.Name = "texture";
    effectParameterDeclaration.Value = (this._textures).get_Item("Sphere.jpg");
    expr_A8[5] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0A())();
    effectParameterDeclaration.Name = "texmix";
    effectParameterDeclaration.Value = $T0C().$Box(0);
    expr_A8[6] = effectParameterDeclaration.MemberwiseClone();
    arg_1EE_0.set_Item("effect2", new ($T0D())(expr_5A, $T0E().$Cast(expr_A8)));
    ((this._shaderEffects).get_Item("effect2")).AttachToContext((this.getInstance()).getRC());
    this.ShaderEffect = (this._shaderEffects).get_Item("effect2");
  }; 

  function Renderer_getInstance () {
    return this.instance;
  }; 

  function Renderer_InitState () {
    (this._model).Clear();
    (this._model).set_Tos($T0F().Identity.MemberwiseClone());
  }; 

  function Renderer_LookupMesh (mc) {
    var mesh = new JSIL.BoxedVariable(null);
    var flag = !(this._meshes).TryGetValue(mc, /* ref */ mesh);
    if (flag) {
      var expr_1C = new ($T11())();
      expr_1C.set_Vertices(mc.Vertices);
      expr_1C.set_Normals(mc.Normals);
      expr_1C.set_UVs(mc.UVs);
      expr_1C.set_Triangles(mc.Triangles);
      mesh.set(expr_1C);
      (this._meshes).set_Item(mc, mesh.get());
    }
    return mesh.get();
  }; 

  function Renderer_LookupTexture (textureName) {
    var value = new JSIL.BoxedVariable(null);
    var imageData = $T16().Get$b1($T15())(textureName).MemberwiseClone();
    var flag = !(this._textures).TryGetValue(textureName, /* ref */ value);
    if (flag) {
      value.set(((this.getInstance()).getRC()).CreateTexture(imageData.MemberwiseClone(), false));
      (this._textures).set_Item(textureName, value.get());
    }
    return imageData;
  }; 

  function Renderer_OnMaterial (material) {
    var hasDiffuse = material.get_HasDiffuse();
    if (hasDiffuse) {
      (this.ShaderEffect).SetEffectParam("albedo", material.Diffuse.Color.MemberwiseClone());
      var flag = (material.Diffuse.Texture == "Leaves.jpg");
      if (flag) {
        (this.ShaderEffect).SetEffectParam("texture", (this._textures).get_Item("Leaves.jpg"));
        (this.ShaderEffect).SetEffectParam("texmix", $T0C().$Box(1));
      } else {
        (this.ShaderEffect).SetEffectParam("texmix", $T0C().$Box(0));
      }
    } else {
      (this.ShaderEffect).SetEffectParam("albedo", $T0B().Zero.MemberwiseClone());
    }
    var hasSpecular = material.get_HasSpecular();
    if (hasSpecular) {
      (this.ShaderEffect).SetEffectParam("shininess", material.Specular.Shininess);
      (this.ShaderEffect).SetEffectParam("specfactor", material.Specular.Intensity);
      (this.ShaderEffect).SetEffectParam("speccolor", material.Specular.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("shininess", $T0C().$Box(0));
      (this.ShaderEffect).SetEffectParam("specfactor", $T0C().$Box(0));
      (this.ShaderEffect).SetEffectParam("speccolor", $T0B().Zero.MemberwiseClone());
    }
    var hasEmissive = material.get_HasEmissive();
    if (hasEmissive) {
      (this.ShaderEffect).SetEffectParam("ambientcolor", material.Emissive.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("ambientcolor", $T0B().Zero.MemberwiseClone());
    }
  }; 

  function Renderer_OnMesh (mesh) {
    var shaderEffect = new JSIL.BoxedVariable(null);
    (this.ShaderEffect).RenderMesh(this.LookupMesh(mesh));
    var flag = (this._shaderEffects).TryGetValue(this.SceneVisitor$CurrentNode$value.Name, /* ref */ shaderEffect);
    if (flag) {
      (shaderEffect.get()).RenderMesh(this.LookupMesh(mesh));
    } else {
      (this.ShaderEffect).RenderMesh(this.LookupMesh(mesh));
    }
  }; 

  function Renderer_OnTransform (xform) {
    this._model.Tos = $S03().CallStatic($T0F(), "op_Multiply", null, this._model.Tos.MemberwiseClone(), $T1A().Matrix(xform).MemberwiseClone()).MemberwiseClone();
    ((this.getInstance()).getRC().ModelView = $S03().CallStatic($T0F(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PopState () {
    (this._model).Pop();
    ((this.getInstance()).getRC().ModelView = $S03().CallStatic($T0F(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PushState () {
    (this._model).Push();
  }; 

  function Renderer_setInstance (instance) {
    this.instance = instance;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Xene.SceneVisitor"), 
      Name: "Fusee.FuFiCycles.Core.Renderer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles")), 
      Renderer__ctor
    );

    $.Method({Static:false, Public:true }, "getInstance", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles")), 
      Renderer_getInstance
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      Renderer_InitState
    );

    $.Method({Static:false, Public:false}, "LookupMesh", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.Mesh"), [$asm09.TypeRef("Fusee.Serialization.MeshComponent")]), 
      Renderer_LookupMesh
    );

    $.Method({Static:false, Public:false}, "LookupTexture", 
      new JSIL.MethodSignature($asm00.TypeRef("Fusee.Base.Common.ImageData"), [$.String]), 
      Renderer_LookupTexture
    );

    $.Method({Static:false, Public:false}, "OnMaterial", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Serialization.MaterialComponent")), 
      Renderer_OnMaterial
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnMesh", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Serialization.MeshComponent")), 
      Renderer_OnMesh
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnTransform", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Serialization.TransformComponent")), 
      Renderer_OnTransform
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      Renderer_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      Renderer_PushState
    );

    $.Method({Static:false, Public:true }, "setInstance", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles")), 
      Renderer_setInstance
    );

    $.Field({Static:false, Public:true }, "instance", $asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles"));

    $.Field({Static:false, Public:true }, "ShaderEffect", $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect"));

    $.Field({Static:false, Public:true }, "View", $asm08.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_meshes", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]));

    $.Field({Static:false, Public:false}, "_textures", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm03.TypeRef("Fusee.Engine.Common.ITexture")]));

    $.Field({Static:false, Public:true }, "_shaderEffects", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]));

    $.Field({Static:false, Public:false}, "_model", $asm0B.TypeRef("Fusee.Xene.CollapsingStateStack`1", [$asm08.TypeRef("Fusee.Math.Core.float4x4")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.FuFiCycles */ 

(function FuFiCycles$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm06.Fusee.FuFiCycles.Core.Player))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Serialization.SceneContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Serialization.SceneContainer)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm08.Fusee.Math.Core.float3, $asm14.System.Int32))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.KeyboardKeys)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm08.Fusee.Math.Core.float4x4)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Renderer)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Player)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles_$l$gc)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm08.Fusee.Math.Core.float4)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm08.Fusee.Math.Core.float3)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm14.System.Math)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm08.Fusee.Math.Core.M)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Cycle)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.FuFiCycles.Core.Player")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm09.TypeRef("Fusee.Serialization.SceneContainer")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm08.TypeRef("Fusee.Math.Core.float3"), $asm14.TypeRef("System.Int32")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float4x4"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("Fusee.FuFiCycles.Core.Player")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm08.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float4x4"), [$asm08.TypeRef("Fusee.Math.Core.float4x4"), $asm08.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function FuFiCycles__ctor () {
    this.players = $S00().Construct();
    this.vertexShader = $T02().Get$b1($T01())("VertexShader2.vert");
    this.pixelShader = $T02().Get$b1($T01())("PixelShader2.frag");
    this.sceneContainers = $S01().Construct();
    this.land = $T02().Get$b1($T04())("Land.fus");
    this.landLines = $T02().Get$b1($T04())("Land_Lines.fus");
    this._cycle = $T02().Get$b1($T04())("Cycle.fus");
    this._wall = $T02().Get$b1($T04())("Wall.fus");
    this._cyclePositions = $S02().Construct();
    this._angleVert = -0.104719758;
    this._firstFrame = true;
    this._mapSize = 0;
    $T06().prototype._ctor.call(this);
  }; 

  function FuFiCycles_getMapSize () {
    return this._mapSize;
  }; 

  function FuFiCycles_getPixelShader () {
    return this.pixelShader;
  }; 

  function FuFiCycles_getRC () {
    return this.RenderCanvas$RC$value;
  }; 

  function FuFiCycles_getSceneContainers () {
    return this.sceneContainers;
  }; 

  function FuFiCycles_getVertexShader () {
    return this.vertexShader;
  }; 

  function FuFiCycles_Init () {
    var arg_103_1 = null;
    this.keyboardKeys = new ($T08())();
    (this.sceneContainers).Add("land", this.land);
    (this.sceneContainers).Add("landLines", this.landLines);
    (this.sceneContainers).Add("cycle", this._cycle);
    (this.sceneContainers).Add("wall", this._wall);
    this._sceneScale = $S03().CallStatic($T09(), "CreateScale", null, 0.04).MemberwiseClone();
    this._mapSize = 16000;
    $thisType._mapMirror = JSIL.MultidimensionalArray.New($T0A(), [0, this._mapSize, 0, this._mapSize]);
    this._renderer = new ($T0B())(this);
    var num = 2;

    for (var i = 0; i < num; i = ((i + 1) | 0)) {
      $S04().CallVirtual("Add", null, this.players, new ($T0D())(((i + 1) | 0), this));
    }
    var arg_103_0 = this._cycle.Children;
    if ((arg_103_1 = $T0F().$l$g9__25_0) === null) {
      arg_103_1 = $T0F().$l$g9__25_0 = $T07().New($T0F().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.FuFiCycles_$l$gc, "$lInit$gb__25_0", $S05(), false, false));
    }
    (this._cycle.Children).Remove($S06().CallStatic($T12(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S07().CallStatic($T13(), "FindNodes", null, arg_103_0, arg_103_1)));
    (this.RenderCanvas$RC$value.ClearColor = $S08().Construct(1, 1, 1, 1));
  }; 

  function FuFiCycles_NormRot (rot) {

    for (; +rot > 3.14159274; rot -= 6.28318548) {
    }

    for (; +rot < -3.14159274; rot += 6.28318548) {
    }
    return rot;
  }; 

  function FuFiCycles_RenderAFrame () {
    var $hoisted00 = new ($T16())();
    (this.RenderCanvas$RC$value).Clear($T17().$Flags("Color", "Depth"));
    (this.keyboardKeys).renderAFrame();
    var num = Math.fround($T18().Exp(0.10000000149011612));
    this._zoom = 150;
    this._angleVert = +this._angleVert + +this._angleVelVert;
    this._angleVert = +$S09().CallStatic($T19(), "Clamp", null, this._angleVert, -1.57079637, 1.57079637);
    this._angleRoll = +$S0A().CallStatic($T19(), "MinAngle", null, this._angleRoll);

    for (var i = 0; i < ((this.players).get_Count() | 0); i = ((i + 1) | 0)) {
      var right = $S0B().CallStatic($T09(), "op_Multiply", null, 
        $S0B().CallStatic($T09(), "op_Multiply", null, 
          $T09().CreateRotationZ(this._angleRoll).MemberwiseClone(), 
          $T09().CreateRotationX(this._angleVert).MemberwiseClone()
        ).MemberwiseClone(), 
        $T09().CreateRotationY((this.players).get_Item(i)._angleHorz).MemberwiseClone()
      ).MemberwiseClone();
      var left = $T09().LookAt(
        0, 
        20, 
        -this._zoom, 
        0, 
        0, 
        0, 
        0, 
        1, 
        0
      );
      var left2 = $T09().CreateTranslation(
        +(((2 * +$thisType._offset.x) / +(this.get_Width()))), 
        +(((-2 * +$thisType._offset.y) / +(this.get_Height()))), 
        0
      ).MemberwiseClone();
      (this.RenderCanvas$RC$value.Projection = $S0B().CallStatic($T09(), "op_Multiply", null, left2.MemberwiseClone(), ((this.players).get_Item(i)).getProjection().MemberwiseClone()).MemberwiseClone());
      this._renderer.View = $S0B().CallStatic($T09(), "op_Multiply", null, 
        $S0B().CallStatic($T09(), "op_Multiply", null, $S0B().CallStatic($T09(), "op_Multiply", null, left.MemberwiseClone(), right.MemberwiseClone()).MemberwiseClone(), this._sceneScale.MemberwiseClone()).MemberwiseClone(), 
        $T09().CreateTranslation($T16().op_UnaryNegation(($hoisted00._ctor(
                (((this.players).get_Item(i)).getCycle()).getPosition().x, 
                (((this.players).get_Item(i)).getCycle()).getPosition().y, 
                (((this.players).get_Item(i)).getCycle()).getPosition().z
              ), 
              $hoisted00)).MemberwiseClone()).MemberwiseClone()
      ).MemberwiseClone();
      var playerId = (((this.players).get_Item(i)).getPlayerId() | 0);
      if (playerId !== 1) {
        if (playerId === 2) {
          (this.RenderCanvas$RC$value).Viewport(
            (((this.get_Width() | 0) / 2) | 0), 
            0, 
            (((this.get_Width() | 0) / 2) | 0), 
            this.get_Height()
          );
        }
      } else {
        (this.RenderCanvas$RC$value).Viewport(
          0, 
          0, 
          (((this.get_Width() | 0) / 2) | 0), 
          this.get_Height()
        );
      }
      ((this.players).get_Item(i)).renderAFrame(this._renderer);
      $S0C().CallVirtual("Traverse", null, this._renderer, (this.sceneContainers).get_Item("landLines").Children);
    }
    var sHOW_MINIMAP = $thisType.SHOW_MINIMAP;
    if (sHOW_MINIMAP) {
      (this.RenderCanvas$RC$value.Projection = $T09().CreateOrthographic(+((this._mapSize | 0) * 2), +((this._mapSize | 0) * 2), 0.01, 20).MemberwiseClone());
      this._renderer.View = $S0B().CallStatic($T09(), "op_Multiply", null, 
        $T09().CreateRotationX(-1.57079637).MemberwiseClone(), 
        $T09().CreateTranslation(0, -10, 0).MemberwiseClone()
      ).MemberwiseClone();
      (this.RenderCanvas$RC$value).Viewport(
        (((((this.get_Width() | 0) / 2) | 0) - (((this.get_Width() | 0) / 4) | 0)) | 0), 
        (((this.get_Height() | 0) - (((this.get_Width() | 0) / 3) | 0)) | 0), 
        (((this.get_Width() | 0) / 3) | 0), 
        (((this.get_Width() | 0) / 3) | 0)
      );

      for (var j = 0; j < ((this.players).get_Count() | 0); j = ((j + 1) | 0)) {
        ((this.players).get_Item(j)).renderView(this._renderer);
      }
      $S0C().CallVirtual("Traverse", null, this._renderer, (this.sceneContainers).get_Item("land").Children);
    }
    this.Present();
    var firstFrame = this._firstFrame;
    if (firstFrame) {
      this._firstFrame = false;
    }
  }; 

  function FuFiCycles_Resize () {

    for (var i = 0; i < ((this.players).get_Count() | 0); i = ((i + 1) | 0)) {
      ((this.players).get_Item(i)).resize();
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.FuFiCycles.Core.FuFiCycles", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      FuFiCycles__ctor
    );

    $.Method({Static:false, Public:true }, "getMapSize", 
      JSIL.MethodSignature.Return($.Int32), 
      FuFiCycles_getMapSize
    );

    $.Method({Static:false, Public:true }, "getPixelShader", 
      JSIL.MethodSignature.Return($.String), 
      FuFiCycles_getPixelShader
    );

    $.Method({Static:false, Public:true }, "getRC", 
      JSIL.MethodSignature.Return($asm04.TypeRef("Fusee.Engine.Core.RenderContext")), 
      FuFiCycles_getRC
    );

    $.Method({Static:false, Public:true }, "getSceneContainers", 
      JSIL.MethodSignature.Return($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm09.TypeRef("Fusee.Serialization.SceneContainer")])), 
      FuFiCycles_getSceneContainers
    );

    $.Method({Static:false, Public:true }, "getVertexShader", 
      JSIL.MethodSignature.Return($.String), 
      FuFiCycles_getVertexShader
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_Init
    );

    $.Method({Static:true , Public:true }, "NormRot", 
      new JSIL.MethodSignature($.Single, [$.Single]), 
      FuFiCycles_NormRot
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_Resize
    );

    $.Field({Static:true , Public:true }, "SHOW_MINIMAP", $.Boolean, true);

    $.Field({Static:false, Public:true }, "keyboardKeys", $asm06.TypeRef("Fusee.FuFiCycles.Core.KeyboardKeys"));

    $.Field({Static:false, Public:false}, "players", $asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.FuFiCycles.Core.Player")]));

    $.Field({Static:false, Public:false}, "vertexShader", $.String);

    $.Field({Static:false, Public:false}, "pixelShader", $.String);

    $.Field({Static:false, Public:false}, "sceneContainers", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm09.TypeRef("Fusee.Serialization.SceneContainer")]));

    $.Field({Static:false, Public:false}, "land", $asm09.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "landLines", $asm09.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:true }, "_sceneScale", $asm08.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_cycle", $asm09.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_wall", $asm09.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_cyclePositions", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm08.TypeRef("Fusee.Math.Core.float3"), $.Int32]));

    $.Field({Static:false, Public:false}, "_renderer", $asm06.TypeRef("Fusee.FuFiCycles.Core.Renderer"));

    $.Field({Static:false, Public:true }, "_angleVert", $.Single);

    $.Field({Static:false, Public:true }, "_angleVelVert", $.Single);

    $.Field({Static:false, Public:true }, "_angleRoll", $.Single);

    $.Field({Static:false, Public:true }, "_angleRollInit", $.Single);

    $.Field({Static:false, Public:true }, "_zoom", $.Single);

    $.Field({Static:true , Public:false}, "_offset", $asm08.TypeRef("Fusee.Math.Core.float2"));

    $.Field({Static:true , Public:false}, "_offsetInit", $asm08.TypeRef("Fusee.Math.Core.float2"));

    $.Constant({Static:true , Public:true }, "RotationSpeed", $.Single, 7);

    $.Constant({Static:true , Public:false}, "Damping", $.Single, 8);

    $.Field({Static:false, Public:true }, "_firstFrame", $.Boolean);

    $.Field({Static:false, Public:false}, "_mapSize", $.Int32);

    $.Field({Static:true , Public:true }, "_mapMirror", $jsilcore.TypeRef("System.Array", [$.Single, JSIL.ArrayDimensionParameter(2)]));


    function FuFiCycles__cctor () {
      $thisType._offset = new $asm08.Fusee.Math.Core.float2();
      $thisType._offsetInit = new $asm08.Fusee.Math.Core.float2();
      $thisType.SHOW_MINIMAP = true;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FuFiCycles__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

/* class Fusee.FuFiCycles.Core.FuFiCycles+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lInit$gb__25_0 (c) {
    return c.Name == "cycle";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.FuFiCycles+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__25_0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__25_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__25_0", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

