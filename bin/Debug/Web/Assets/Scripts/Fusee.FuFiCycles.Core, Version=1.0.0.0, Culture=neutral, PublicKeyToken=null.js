/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm06 = JSIL.DeclareAssembly("Fusee.FuFiCycles.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.FuFiCycles");
JSIL.DeclareNamespace("Fusee.FuFiCycles.Core");
/* class Fusee.FuFiCycles.Core.GameSettings */ 

(function GameSettings$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm06.Fusee.FuFiCycles.Core.Match))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm08.Fusee.Math.Core.float4x4)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.FuFiCycles.Core.Match")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float4x4"), [$asm14.TypeRef("System.Single")]))) ();
  };


  JSIL.MakeStaticClass("Fusee.FuFiCycles.Core.GameSettings", true, [], function ($ib) {
    $ = $ib;

    $.Field({Static:true , Public:true }, "INSTANCE", $asm06.TypeRef("Fusee.FuFiCycles.Core.FuFiCycles"));

    $.Field({Static:true , Public:true }, "MATCHS", $asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.FuFiCycles.Core.Match")]));

    $.Field({Static:true , Public:true }, "SHOW_MINIMAP", $.Boolean, true);

    $.Field({Static:true , Public:true }, "PLAYER_QUANTITY", $.Byte, 2);

    $.Field({Static:true , Public:true }, "MAP_SIZE", $.UInt16);

    $.Field({Static:true , Public:true }, "SCENE_SCALE", $asm08.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:true , Public:true }, "SHOWMENU", $.Boolean, true);

    $.Field({Static:true , Public:true }, "IS_WEB", $.Boolean, false);


    function GameSettings__cctor () {
      $thisType.SCENE_SCALE = new $asm08.Fusee.Math.Core.float4x4();
      $thisType.MATCHS = $S00().Construct();
      $thisType.SHOW_MINIMAP = true;
      $thisType.PLAYER_QUANTITY = 2;
      $thisType.SCENE_SCALE = $S01().CallStatic($T01(), "CreateScale", null, 0.04).MemberwiseClone();
      $thisType.SHOWMENU = true;
      $thisType.IS_WEB = false;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      GameSettings__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.GUIMenu */ 

(function GUIMenu$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm08.Fusee.Math.Core.float4)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GameSettings)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIHandler)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIImage)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIPanel)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm04.Fusee.Engine.Core.FontMap)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.Fusee.Base.Core.Font)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButton)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm14.System.Collections.ObjectModel.Collection$b1.Of($asm04.Fusee.Engine.Core.GUI.GUIElement))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButtonHandler)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm14.System.NotImplementedException)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButtonEventArgs)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm03.Fusee.Engine.Common.CursorType)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm08.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIElement")))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIImage"), [
        $asm00.TypeRef("Fusee.Base.Common.ImageData"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIPanel"), [
        $asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.FontMap"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), [
        $asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.FontMap"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.NotImplementedException"), null))) ();
  };


  function GUIMenu__ctor () {
    this.score = 0;
    this.continueButtonActive = false;
    this.guiHandler = $S01().Construct();
    (this.guiHandler).AttachToContext($T02().INSTANCE.getRC());
    $S02().CallVirtual("Add", null, this.guiHandler, $S03().Construct($T07().Get$b1($T06())("MenuBackground.jpg").MemberwiseClone(), 0, 0, -5, $T02().INSTANCE.get_Width(), $T02().INSTANCE.get_Height()));
    this.panel = $S04().Construct("PAUSE", new ($T09())($T02().INSTANCE.roboto, $T02().INSTANCE.roboto.get_PixelHeight(), null), $thisType.paddingV, $thisType.paddingH, $thisType.panelWidth, $thisType.panelHeight);
    (this.panel.PanelColor = $thisType.panelcolor.MemberwiseClone());
    $S02().CallVirtual("Add", null, this.guiHandler, this.panel);
    this.addContinueButton();
    this.addNewMatchButton();
    this.addExitButton();
  }; 

  function GUIMenu_activateContinueButton () {
    (this.continueButton.ButtonColor = $thisType.buttonColor.MemberwiseClone());
    this.continueButtonActive = true;
  }; 

  function GUIMenu_addContinueButton () {
    this.continueButton = $S05().Construct("CONTINUE", new ($T09())($T02().INSTANCE.roboto, $T02().INSTANCE.roboto.get_PixelHeight(), null), ((($thisType.panelCenterH | 0) - ((($thisType.panelWidth | 0) / 4) | 0)) | 0), ((Math.imul((this.panel.ChildElements).get_Count(), 200) + 250) | 0), ((($thisType.panelWidth | 0) / 2) | 0), 100);
    (this.continueButton.ButtonColor = $S00().Construct($thisType.grey.x, $thisType.grey.y, $thisType.grey.z, 0.8));
    (this.continueButton.BorderColor = $thisType.grey.MemberwiseClone());
    (this.continueButton).set_BorderWidth(2);
    (this.continueButton).add_OnGUIButtonEnter($T0D().New(this, null, new JSIL.MethodPointerInfo($thisType, "continueButton_OnGUIButtonEnter", $S06(), false, false)));
    (this.continueButton).add_OnGUIButtonLeave($T0D().New(this, null, new JSIL.MethodPointerInfo($thisType, "continueButton_OnGUIButtonLeave", $S07(), false, false)));
    (this.continueButton).add_OnGUIButtonDown($T0D().New(this, null, new JSIL.MethodPointerInfo($thisType, "continueButton_OnGUIButtonDown", $S08(), false, false)));
    (this.panel.ChildElements).Add(this.continueButton);
    (this.guiHandler).Refresh();
  }; 

  function GUIMenu_addExitButton () {
    this.exitButton = $S05().Construct("EXIT", new ($T09())($T02().INSTANCE.roboto, $T02().INSTANCE.roboto.get_PixelHeight(), null), ((($thisType.panelCenterH | 0) - ((($thisType.panelWidth | 0) / 4) | 0)) | 0), ((Math.imul((this.panel.ChildElements).get_Count(), 200) + 250) | 0), ((($thisType.panelWidth | 0) / 2) | 0), 100);
    (this.exitButton.ButtonColor = $thisType.buttonColor.MemberwiseClone());
    (this.exitButton.BorderColor = $thisType.grey.MemberwiseClone());
    (this.exitButton).set_BorderWidth(2);
    (this.exitButton).add_OnGUIButtonEnter($T0D().New(this, null, new JSIL.MethodPointerInfo($thisType, "exitButton_OnGUIButtonEnter", $S09(), false, false)));
    (this.exitButton).add_OnGUIButtonLeave($T0D().New(this, null, new JSIL.MethodPointerInfo($thisType, "exitButton_OnGUIButtonLeave", $S0A(), false, false)));
    (this.exitButton).add_OnGUIButtonDown($T0D().New(this, null, new JSIL.MethodPointerInfo($thisType, "exitButton_OnGUIButtonDown", $S0B(), false, false)));
    (this.panel.ChildElements).Add(this.exitButton);
    (this.guiHandler).Refresh();
  }; 

  function GUIMenu_addNewMatchButton () {
    this.newMatchButton = $S05().Construct("NEW MATCH", new ($T09())($T02().INSTANCE.roboto, $T02().INSTANCE.roboto.get_PixelHeight(), null), ((($thisType.panelCenterH | 0) - ((($thisType.panelWidth | 0) / 4) | 0)) | 0), ((Math.imul((this.panel.ChildElements).get_Count(), 200) + 250) | 0), ((($thisType.panelWidth | 0) / 2) | 0), 100);
    (this.newMatchButton.ButtonColor = $thisType.buttonColor.MemberwiseClone());
    (this.newMatchButton.BorderColor = $thisType.grey.MemberwiseClone());
    (this.newMatchButton).set_BorderWidth(2);
    (this.newMatchButton).add_OnGUIButtonEnter($T0D().New(this, null, new JSIL.MethodPointerInfo($thisType, "newMatchButton_OnGUIButtonEnter", $S0C(), false, false)));
    (this.newMatchButton).add_OnGUIButtonLeave($T0D().New(this, null, new JSIL.MethodPointerInfo($thisType, "newMatchButton_OnGUIButtonLeave", $S0D(), false, false)));
    (this.newMatchButton).add_OnGUIButtonDown($T0D().New(this, null, new JSIL.MethodPointerInfo($thisType, "newMatchButton_OnGUIButtonDown", $S0E(), false, false)));
    (this.panel.ChildElements).Add(this.newMatchButton);
    (this.guiHandler).Refresh();
  }; 

  function GUIMenu_Clear () {
    throw $S0F().Construct();
  }; 

  function GUIMenu_continueButton_OnGUIButtonDown (sender, mea) {
    if (this.continueButtonActive) {
      $T02().INSTANCE.SetCursor($T10().Standard);
      $T02().SHOWMENU = false;
      $T02().INSTANCE.Resize();
    }
  }; 

  function GUIMenu_continueButton_OnGUIButtonEnter (sender, mea) {
    if (this.continueButtonActive) {
      $T02().INSTANCE.SetCursor($T10().Hand);
      (this.continueButton.ButtonColor = $thisType.buttonColorHover.MemberwiseClone());
    }
  }; 

  function GUIMenu_continueButton_OnGUIButtonLeave (sender, mea) {
    if (this.continueButtonActive) {
      $T02().INSTANCE.SetCursor($T10().Standard);
      (this.continueButton.ButtonColor = $thisType.buttonColor.MemberwiseClone());
    }
  }; 

  function GUIMenu_exitButton_OnGUIButtonDown (sender, mea) {
    $T02().INSTANCE.SetCursor($T10().Standard);
    $T02().INSTANCE.CloseGameWindow();
  }; 

  function GUIMenu_exitButton_OnGUIButtonEnter (sender, mea) {
    $T02().INSTANCE.SetCursor($T10().Hand);
    (this.exitButton.ButtonColor = $thisType.buttonColorHover.MemberwiseClone());
  }; 

  function GUIMenu_exitButton_OnGUIButtonLeave (sender, mea) {
    $T02().INSTANCE.SetCursor($T10().Standard);
    (this.exitButton.ButtonColor = $thisType.buttonColor.MemberwiseClone());
  }; 

  function GUIMenu_getGUIHandler () {
    return this.guiHandler;
  }; 

  function GUIMenu_newMatchButton_OnGUIButtonDown (sender, mea) {
    $T02().INSTANCE.SetCursor($T10().Standard);
    $T02().INSTANCE.newMatch();
    $T02().SHOWMENU = false;
    this.activateContinueButton();
    $T02().INSTANCE.Resize();
  }; 

  function GUIMenu_newMatchButton_OnGUIButtonEnter (sender, mea) {
    $T02().INSTANCE.SetCursor($T10().Hand);
    (this.newMatchButton.ButtonColor = $thisType.buttonColorHover.MemberwiseClone());
  }; 

  function GUIMenu_newMatchButton_OnGUIButtonLeave (sender, mea) {
    $T02().INSTANCE.SetCursor($T10().Standard);
    (this.newMatchButton.ButtonColor = $thisType.buttonColor.MemberwiseClone());
  }; 

  function GUIMenu_RenderGUI () {
    throw $S0F().Construct();
  }; 

  function GUIMenu_setViewport () {
    $T02().INSTANCE.getRC().Viewport(
      0, 
      0, 
      $T02().INSTANCE.get_Width(), 
      $T02().INSTANCE.get_Height()
    );
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.GUIMenu", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      GUIMenu__ctor
    );

    $.Method({Static:false, Public:true }, "activateContinueButton", 
      JSIL.MethodSignature.Void, 
      GUIMenu_activateContinueButton
    );

    $.Method({Static:false, Public:true }, "addContinueButton", 
      JSIL.MethodSignature.Void, 
      GUIMenu_addContinueButton
    );

    $.Method({Static:false, Public:false}, "addExitButton", 
      JSIL.MethodSignature.Void, 
      GUIMenu_addExitButton
    );

    $.Method({Static:false, Public:false}, "addNewMatchButton", 
      JSIL.MethodSignature.Void, 
      GUIMenu_addNewMatchButton
    );

    $.Method({Static:false, Public:false}, "Clear", 
      JSIL.MethodSignature.Void, 
      GUIMenu_Clear
    );

    $.Method({Static:false, Public:false}, "continueButton_OnGUIButtonDown", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      GUIMenu_continueButton_OnGUIButtonDown
    );

    $.Method({Static:false, Public:true }, "continueButton_OnGUIButtonEnter", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      GUIMenu_continueButton_OnGUIButtonEnter
    );

    $.Method({Static:false, Public:true }, "continueButton_OnGUIButtonLeave", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      GUIMenu_continueButton_OnGUIButtonLeave
    );

    $.Method({Static:false, Public:false}, "exitButton_OnGUIButtonDown", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      GUIMenu_exitButton_OnGUIButtonDown
    );

    $.Method({Static:false, Public:true }, "exitButton_OnGUIButtonEnter", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      GUIMenu_exitButton_OnGUIButtonEnter
    );

    $.Method({Static:false, Public:true }, "exitButton_OnGUIButtonLeave", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      GUIMenu_exitButton_OnGUIButtonLeave
    );

    $.Method({Static:false, Public:true }, "getGUIHandler", 
      JSIL.MethodSignature.Return($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler")), 
      GUIMenu_getGUIHandler
    );

    $.Method({Static:false, Public:false}, "newMatchButton_OnGUIButtonDown", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      GUIMenu_newMatchButton_OnGUIButtonDown
    );

    $.Method({Static:false, Public:true }, "newMatchButton_OnGUIButtonEnter", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      GUIMenu_newMatchButton_OnGUIButtonEnter
    );

    $.Method({Static:false, Public:true }, "newMatchButton_OnGUIButtonLeave", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      GUIMenu_newMatchButton_OnGUIButtonLeave
    );

    $.Method({Static:false, Public:false}, "RenderGUI", 
      JSIL.MethodSignature.Void, 
      GUIMenu_RenderGUI
    );

    $.Method({Static:false, Public:true }, "setViewport", 
      JSIL.MethodSignature.Void, 
      GUIMenu_setViewport
    );

    $.Field({Static:false, Public:true }, "guiHandler", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"));

    $.Field({Static:false, Public:true }, "panel", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIPanel"));

    $.Field({Static:false, Public:true }, "continueButton", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:true }, "newMatchButton", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:true }, "exitButton", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:false}, "_guiSubText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "_guiPointsText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "headline", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "_guiBackground", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIImage"));

    $.Field({Static:false, Public:true }, "score", $.Single);

    $.Field({Static:false, Public:false}, "continueButtonActive", $.Boolean);

    $.Field({Static:true , Public:false}, "grey", $asm08.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:true , Public:false}, "panelcolor", $asm08.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:true , Public:false}, "buttonColor", $asm08.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:true , Public:false}, "buttonColorHover", $asm08.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:true , Public:false}, "paddingV", $.Int32);

    $.Field({Static:true , Public:false}, "paddingH", $.Int32);

    $.Field({Static:true , Public:false}, "panelWidth", $.Int32);

    $.Field({Static:true , Public:false}, "panelHeight", $.Int32);

    $.Field({Static:true , Public:false}, "panelCenterH", $.Int32);


    function GUIMenu__cctor () {
      $thisType.grey = new $asm08.Fusee.Math.Core.float4();
      $thisType.panelcolor = new $asm08.Fusee.Math.Core.float4();
      $thisType.buttonColor = new $asm08.Fusee.Math.Core.float4();
      $thisType.buttonColorHover = new $asm08.Fusee.Math.Core.float4();
      $thisType.grey = $S00().Construct(0.3019608, 0.3019608, 0.3019608, 1);
      $thisType.panelcolor = $S00().Construct($thisType.grey.x, $thisType.grey.y, $thisType.grey.z, 0.6);
      $thisType.buttonColor = $S00().Construct(0, 0.6, 1, 0.9);
      $thisType.buttonColorHover = $S00().Construct(0, 0.6, 1, 1);
      $thisType.paddingV = ((($T02().INSTANCE.get_Width() | 0) / 10) | 0);
      $thisType.paddingH = ((($T02().INSTANCE.get_Height() | 0) / 10) | 0);
      $thisType.panelWidth = ((($T02().INSTANCE.get_Width() | 0) - Math.imul($thisType.paddingV, 2)) | 0);
      $thisType.panelHeight = ((($T02().INSTANCE.get_Height() | 0) - Math.imul($thisType.paddingH, 2)) | 0);
      $thisType.panelCenterH = ((((($T02().INSTANCE.get_Width() | 0) - Math.imul($thisType.paddingV, 2)) | 0) / 2) | 0);
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      GUIMenu__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Match */ 

(function Match$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm06.Fusee.FuFiCycles.Core.Player))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm06.Fusee.FuFiCycles.Core.Round))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Byte)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GameSettings)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Player)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Round)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm14.System.Exception)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.Diagnostics.Debug)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Serialization.SceneContainer))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm14.System.InvalidOperationException)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm14.System.GC)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Cycle)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.FuFiCycles.Core.Player")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.FuFiCycles.Core.Round")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Int32"), [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("Fusee.FuFiCycles.Core.Player")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.Object")))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.String")))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("Fusee.FuFiCycles.Core.Round")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Int32"), [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };


  function Match__ctor () {
    this.players = $S00().Construct();
    this.rounds = $S01().Construct();
    this.id = (((($S02().CallStatic($T03(), "Count$b1", [$thisType], $T04().MATCHS) | 0) + 1) | 0) & 0xFF);
    if ((this.getId() | 0) === 1) {
      $T04().INSTANCE.addSceneContainers();
      $T04().INSTANCE.setMapSize();
      $T04().INSTANCE.hideOriginalCycle();
    }
    this.addPlayers();
    this.newRound();
  }; 

  function Match_addPlayers () {

    for (var i = 0; i < ($T04().PLAYER_QUANTITY | 0); i = ((i + 1) | 0)) {
      $S03().CallVirtual("Add", null, this.players, new ($T07())((((i + 1) | 0) & 0xFF)));
    }
  }; 

  function Match_getCurrentRound () {
    return $S04().CallStatic($T03(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Round], this.rounds);
  }; 

  function Match_getId () {
    return this.id;
  }; 

  function Match_getPlayers () {
    return this.players;
  }; 

  function Match_newRound ($exception) {
    $S05().CallStatic($T0A(), "WriteLine", null, $T04().INSTANCE.getSceneContainers().get_Item("cycle").Children);
    try {
      ($S04().CallStatic($T03(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Round], this.rounds)).nullVars();
    } catch ($exception) {
      if ($T0C().$Is($exception)) {
        $S06().CallStatic($T0A(), "WriteLine", null, ($exception).get_StackTrace());
      } else {
        throw $exception;
      }
    }
    this.removePlayers();
    this.addPlayers();
    $T0D().Collect();
    $S07().CallVirtual("Add", null, this.rounds, new ($T08())());
    $T04().INSTANCE.Resize();
  }; 

  function Match_nullVars () {

    for (var i = 0; i < ($S08().CallStatic($T03(), "Count$b1", [$asm06.Fusee.FuFiCycles.Core.Round], this.rounds) | 0); i = ((i + 1) | 0)) {
      ($T03().ElementAt$b1($T08())(this.rounds, i)).nullVars();
    }
    this.players = null;
    this.rounds = null;
  }; 

  function Match_removePlayers () {

    for (var i = 0; i < ((this.getPlayers()).get_Count() | 0); i = ((i + 1) | 0)) {
      ($T04().INSTANCE.getSceneContainers().get_Item("cycle").Children).Remove((((this.getPlayers()).get_Item(i)).getCycle()).getSNC());
      (this.getPlayers()).set_Item(i, null);
    }
    (this.getPlayers()).Clear();
  }; 

  function Match_tick () {
    (this.getCurrentRound()).tick();
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Match", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Match__ctor
    );

    $.Method({Static:false, Public:false}, "addPlayers", 
      JSIL.MethodSignature.Void, 
      Match_addPlayers
    );

    $.Method({Static:false, Public:true }, "getCurrentRound", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.Round")), 
      Match_getCurrentRound
    );

    $.Method({Static:false, Public:true }, "getId", 
      JSIL.MethodSignature.Return($.Int32), 
      Match_getId
    );

    $.Method({Static:false, Public:true }, "getPlayers", 
      JSIL.MethodSignature.Return($asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.FuFiCycles.Core.Player")])), 
      Match_getPlayers
    );

    $.Method({Static:false, Public:true }, "newRound", 
      JSIL.MethodSignature.Void, 
      Match_newRound
    );

    $.Method({Static:false, Public:true }, "nullVars", 
      JSIL.MethodSignature.Void, 
      Match_nullVars
    );

    $.Method({Static:false, Public:true }, "removePlayers", 
      JSIL.MethodSignature.Void, 
      Match_removePlayers
    );

    $.Method({Static:false, Public:true }, "tick", 
      JSIL.MethodSignature.Void, 
      Match_tick
    );

    $.Field({Static:false, Public:false}, "id", $.Byte);

    $.Field({Static:false, Public:false}, "players", $asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.FuFiCycles.Core.Player")]));

    $.Field({Static:false, Public:false}, "rounds", $asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.FuFiCycles.Core.Round")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Round */ 

(function Round$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.TimeSpan)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.DateTime)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Byte)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Match)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GameSettings)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GUIIngame)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm06.Fusee.FuFiCycles.Core.Player))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Cycle)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Player)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm14.System.UInt16)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Serialization.SceneContainer))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm0D.TypeRef("System.Int32"), [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };


  function Round__ctor () {
    this.firstFrame = true;
    this.paused = true;
    this.absseconds = 0;
    this.tpsTemp = 0;
    this.tps = 0;
    this.second = ($T01().get_Now().get_TimeOfDay().get_Seconds() | 0);
    this.id = ($S00().CallStatic($T04(), "Count$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS) & 0xFF);
    this.mapMirror = JSIL.MultidimensionalArray.New($T02(), [0, $T05().MAP_SIZE, 0, $T05().MAP_SIZE]);
    $T05().INSTANCE.getIngameGui().addTimers();
  }; 

  function Round_allCyclesCollided () {

    for (var i = 0; i < ($S01().CallStatic($T04(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Count() | 0); i = ((i + 1) | 0)) {
      if (!(($S01().CallStatic($T04(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).getCycle()).isCollided()) {
        var result = false;
        return result;
      }
    }
    result = true;
    return result;
  }; 

  function Round_calcTps () {
    var flag = ($T01().get_Now().get_TimeOfDay().get_Seconds() | 0) !== (this.second | 0);
    if (flag) {
      this.newSecond();
    }
    this.tpsTemp = ((((this.tpsTemp | 0) + 1) >>> 0) & 0xFFFF);
  }; 

  function Round_getAbseconds () {
    return this.absseconds;
  }; 

  function Round_getFirstFrame () {
    return this.firstFrame;
  }; 

  function Round_getId () {
    return this.id;
  }; 

  function Round_getMapMirror () {
    return this.mapMirror;
  }; 

  function Round_getTps () {
    return this.tps;
  }; 

  function Round_isPaused () {
    return this.paused;
  }; 

  function Round_newSecond () {
    this.second = ($T01().get_Now().get_TimeOfDay().get_Seconds() | 0);
    this.tps = (this.tpsTemp | 0);
    this.tpsTemp = 0;
    this.absseconds = (((this.absseconds | 0) + 1) | 0);
    if (((this.getAbseconds() | 0) > 5) && this.isPaused()) {
      this.unpause();
    }
  }; 

  function Round_nullVars () {
    $T0E().prototype.RemoveRange.call($T05().INSTANCE.getSceneContainers().get_Item("wall").Children, 1, (((($T05().INSTANCE.getSceneContainers().get_Item("wall").Children).get_Count() | 0) - 1) | 0));
    this.mapMirror = null;
  }; 

  function Round_pause () {
    this.paused = true;
  }; 

  function Round_setNotFirstFrame () {
    this.firstFrame = false;
  }; 

  function Round_tick () {
    this.calcTps();
    if (!this.isPaused()) {
      if (this.getFirstFrame()) {
        var flag3 = true;

        for (var i = 0; i < ($S01().CallStatic($T04(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Count() | 0); i = ((i + 1) | 0)) {
          if (!($S01().CallStatic($T04(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).gotFirstWall()) {
            flag3 = false;
          }
          var flag5 = flag3;
          if (flag5) {
            this.setNotFirstFrame();
          }
        }
      }
      var flag6 = this.allCyclesCollided();
      if (flag6) {
        $S01().CallStatic($T04(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).newRound();
      }
    }
  }; 

  function Round_unpause () {
    this.paused = false;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Round", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Round__ctor
    );

    $.Method({Static:false, Public:false}, "allCyclesCollided", 
      JSIL.MethodSignature.Return($.Boolean), 
      Round_allCyclesCollided
    );

    $.Method({Static:false, Public:false}, "calcTps", 
      JSIL.MethodSignature.Void, 
      Round_calcTps
    );

    $.Method({Static:false, Public:true }, "getAbseconds", 
      JSIL.MethodSignature.Return($.Int32), 
      Round_getAbseconds
    );

    $.Method({Static:false, Public:true }, "getFirstFrame", 
      JSIL.MethodSignature.Return($.Boolean), 
      Round_getFirstFrame
    );

    $.Method({Static:false, Public:true }, "getId", 
      JSIL.MethodSignature.Return($.Int32), 
      Round_getId
    );

    $.Method({Static:false, Public:true }, "getMapMirror", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte, JSIL.ArrayDimensionParameter(2)])), 
      Round_getMapMirror
    );

    $.Method({Static:false, Public:true }, "getTps", 
      JSIL.MethodSignature.Return($.Int32), 
      Round_getTps
    );

    $.Method({Static:false, Public:true }, "isPaused", 
      JSIL.MethodSignature.Return($.Boolean), 
      Round_isPaused
    );

    $.Method({Static:false, Public:false}, "newSecond", 
      JSIL.MethodSignature.Void, 
      Round_newSecond
    );

    $.Method({Static:false, Public:true }, "nullVars", 
      JSIL.MethodSignature.Void, 
      Round_nullVars
    );

    $.Method({Static:false, Public:true }, "pause", 
      JSIL.MethodSignature.Void, 
      Round_pause
    );

    $.Method({Static:false, Public:false}, "setNotFirstFrame", 
      JSIL.MethodSignature.Void, 
      Round_setNotFirstFrame
    );

    $.Method({Static:false, Public:true }, "tick", 
      JSIL.MethodSignature.Void, 
      Round_tick
    );

    $.Method({Static:false, Public:true }, "unpause", 
      JSIL.MethodSignature.Void, 
      Round_unpause
    );

    $.Field({Static:false, Public:false}, "id", $.Byte);

    $.Field({Static:false, Public:false}, "mapMirror", $jsilcore.TypeRef("System.Array", [$.Byte, JSIL.ArrayDimensionParameter(2)]));

    $.Field({Static:false, Public:true }, "firstFrame", $.Boolean);

    $.Field({Static:false, Public:false}, "paused", $.Boolean);

    $.Field({Static:false, Public:false}, "absseconds", $.Int32);

    $.Field({Static:false, Public:false}, "tpsTemp", $.UInt16);

    $.Field({Static:false, Public:false}, "tps", $.UInt16);

    $.Field({Static:false, Public:false}, "second", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.GUIIngame */ 

(function GUIIngame$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm08.Fusee.Math.Core.float4)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIHandler)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GameSettings)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.Fusee.Base.Core.Font)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm04.Fusee.Engine.Core.FontMap)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIText)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIElement)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm14.System.NotImplementedException)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Round)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Match)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm14.System.Byte)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm04.Fusee.Engine.Core.GUI.GUIElement))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm08.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"), [
        $asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.FontMap"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIElement")))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.NotImplementedException"), null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };


  function GUIIngame__ctor () {
    this.score = 0;
    this.guiHandler = $S01().Construct();
    (this.guiHandler).AttachToContext($T03().INSTANCE.getRC());
    $T03().INSTANCE.roboto.set_UseKerning(true);
    this.fontMap1 = new ($T05())($T03().INSTANCE.roboto, 20, null);
    this.tps = $S02().Construct("TPS: 0", this.fontMap1, 50, 50);
    (this.tps.TextColor = $thisType.white.MemberwiseClone());
    $S03().CallVirtual("Add", null, this.guiHandler, this.tps);
  }; 

  function GUIIngame_AddPointsToScore () {
    (this.scorePlayer1).set_Text(JSIL.ConcatString("SCORE: ", $T09().$Box(this.score)));
    (this.guiHandler).Refresh();
  }; 

  function GUIIngame_addTimers () {
    this.timer1 = $S02().Construct("3", this.fontMap1, ((((($T03().INSTANCE.get_Width() | 0) / 4) | 0) - 5) | 0), ((((($T03().INSTANCE.get_Height() | 0) / 2) | 0) - 150) | 0));
    (this.timer1.TextColor = $thisType.white.MemberwiseClone());
    $S03().CallVirtual("Add", null, this.guiHandler, this.timer1);
    this.timer2 = $S02().Construct("3", this.fontMap1, ((Math.imul(((($T03().INSTANCE.get_Width() | 0) / 4) | 0), 3) - 5) | 0), ((((($T03().INSTANCE.get_Height() | 0) / 2) | 0) - 150) | 0));
    (this.timer2.TextColor = $thisType.white.MemberwiseClone());
    $S03().CallVirtual("Add", null, this.guiHandler, this.timer2);
  }; 

  function GUIIngame_Clear () {
    throw $S04().Construct();
  }; 

  function GUIIngame_getGUIHandler () {
    return this.guiHandler;
  }; 

  function GUIIngame_refresh () {
    (this.tps).set_Text(JSIL.ConcatString("TPS: ", $T0F().$Box($S05().CallStatic($T0E(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T03().MATCHS).getCurrentRound().getTps())));
    $T03().INSTANCE.getRC().Viewport(
      0, 
      0, 
      $T03().INSTANCE.get_Width(), 
      $T03().INSTANCE.get_Height()
    );
    if (($S05().CallStatic($T0E(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T03().MATCHS).getCurrentRound().getAbseconds() | 0) <= 5) {
      var b = (((6 - ($S05().CallStatic($T0E(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T03().MATCHS).getCurrentRound().getAbseconds() | 0)) | 0) & 0xFF);
      var flag2 = b > 5;
      if (flag2) {
        b = 5;
      }
      (this.timer1).set_Text((b).toString());
      (this.timer2).set_Text((b).toString());
    } else {
      (this.guiHandler).Remove(this.timer1);
      (this.guiHandler).Remove(this.timer2);
    }
    (this.guiHandler).Refresh();
  }; 

  function GUIIngame_RenderGUI () {
    throw $S04().Construct();
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.GUIIngame", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      GUIIngame__ctor
    );

    $.Method({Static:false, Public:true }, "AddPointsToScore", 
      JSIL.MethodSignature.Void, 
      GUIIngame_AddPointsToScore
    );

    $.Method({Static:false, Public:true }, "addTimers", 
      JSIL.MethodSignature.Void, 
      GUIIngame_addTimers
    );

    $.Method({Static:false, Public:false}, "Clear", 
      JSIL.MethodSignature.Void, 
      GUIIngame_Clear
    );

    $.Method({Static:false, Public:true }, "getGUIHandler", 
      JSIL.MethodSignature.Return($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler")), 
      GUIIngame_getGUIHandler
    );

    $.Method({Static:false, Public:true }, "refresh", 
      JSIL.MethodSignature.Void, 
      GUIIngame_refresh
    );

    $.Method({Static:false, Public:false}, "RenderGUI", 
      JSIL.MethodSignature.Void, 
      GUIIngame_RenderGUI
    );

    $.Field({Static:false, Public:true }, "guiHandler", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"));

    $.Field({Static:false, Public:true }, "menuButton", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:true }, "fontMap1", $asm04.TypeRef("Fusee.Engine.Core.FontMap"));

    $.Field({Static:false, Public:false}, "_guiSubText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "_guiPointsText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "scorePlayer1", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "scorePlayer2", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "tps", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "timer1", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "timer2", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "_guiBackground", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIImage"));

    $.Field({Static:false, Public:true }, "score", $.Single);

    $.Field({Static:true , Public:false}, "white", $asm08.TypeRef("Fusee.Math.Core.float4"));


    function GUIIngame__cctor () {
      $thisType.white = new $asm08.Fusee.Math.Core.float4();
      $thisType.white = $S00().Construct(1, 1, 1, 1);
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      GUIIngame__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.KeyboardKeys */ 

(function KeyboardKeys$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm03.Fusee.Engine.Common.KeyCodes, $asm06.Fusee.FuFiCycles.Core.KeyboardKey))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.KeyboardKey)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GameSettings)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm03.Fusee.Engine.Common.KeyCodes, $asm06.Fusee.FuFiCycles.Core.KeyboardKey))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm14.System.Collections.Generic.KeyValuePair$b2.Of($asm03.Fusee.Engine.Common.KeyCodes, $asm06.Fusee.FuFiCycles.Core.KeyboardKey))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm06.TypeRef("Fusee.FuFiCycles.Core.KeyboardKey")]), null))) ();
  };


  function KeyboardKeys__ctor () {
    this.keys = $S00().Construct();
    this.ingameKeys = $S00().Construct();
    this.menuKeys = $S00().Construct();
    (this.ingameKeys).Add($T01().W, new ($T02())());
    (this.ingameKeys).Add($T01().A, new ($T02())());
    (this.ingameKeys).Add($T01().S, new ($T02())());
    (this.ingameKeys).Add($T01().D, new ($T02())());
    (this.ingameKeys).Add($T01().Up, new ($T02())());
    (this.ingameKeys).Add($T01().Left, new ($T02())());
    (this.ingameKeys).Add($T01().Down, new ($T02())());
    (this.ingameKeys).Add($T01().Right, new ($T02())());
    (this.keys).Add($T01().Escape, new ($T02())());
  }; 

  function KeyboardKeys_renderAFrame () {
    this.renderKeys();
    var sHOWMENU = $T04().SHOWMENU;
    if (sHOWMENU) {
      this.renderMenuKeys();
    } else {
      this.renderIngameKeys();
    }
  }; 

  function KeyboardKeys_renderIngameKeys () {
    var enumerator = $T00().prototype.GetEnumerator.call(this.ingameKeys);

    while ($T05().prototype.MoveNext.call(enumerator)) {
      var current = $T05().prototype.get_Current.call(enumerator).MemberwiseClone();
      var key = $T08().get_Keyboard().GetKey(current.get_Key());
      if (key) {
        if (!(current.get_Value()).isDown()) {
          (current.get_Value()).setPressed();
        }
      } else {
        (current.get_Value()).setNotDown();
      }
    }
  }; 

  function KeyboardKeys_renderKeys () {
    var enumerator = $T00().prototype.GetEnumerator.call(this.keys);

    while ($T05().prototype.MoveNext.call(enumerator)) {
      var current = $T05().prototype.get_Current.call(enumerator).MemberwiseClone();
      var key = $T08().get_Keyboard().GetKey(current.get_Key());
      if (key) {
        if (!(current.get_Value()).isDown()) {
          (current.get_Value()).setPressed();
        }
      } else {
        (current.get_Value()).setNotDown();
      }
    }
  }; 

  function KeyboardKeys_renderMenuKeys () {
    var enumerator = $T00().prototype.GetEnumerator.call(this.menuKeys);

    while ($T05().prototype.MoveNext.call(enumerator)) {
      var current = $T05().prototype.get_Current.call(enumerator).MemberwiseClone();
      var key = $T08().get_Keyboard().GetKey(current.get_Key());
      if (key) {
        if (!(current.get_Value()).isDown()) {
          (current.get_Value()).setPressed();
        }
      } else {
        (current.get_Value()).setNotDown();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.KeyboardKeys", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      KeyboardKeys__ctor
    );

    $.Method({Static:false, Public:true }, "renderAFrame", 
      JSIL.MethodSignature.Void, 
      KeyboardKeys_renderAFrame
    );

    $.Method({Static:false, Public:true }, "renderIngameKeys", 
      JSIL.MethodSignature.Void, 
      KeyboardKeys_renderIngameKeys
    );

    $.Method({Static:false, Public:true }, "renderKeys", 
      JSIL.MethodSignature.Void, 
      KeyboardKeys_renderKeys
    );

    $.Method({Static:false, Public:true }, "renderMenuKeys", 
      JSIL.MethodSignature.Void, 
      KeyboardKeys_renderMenuKeys
    );

    $.Field({Static:false, Public:true }, "keys", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm06.TypeRef("Fusee.FuFiCycles.Core.KeyboardKey")]));

    $.Field({Static:false, Public:true }, "ingameKeys", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm06.TypeRef("Fusee.FuFiCycles.Core.KeyboardKey")]));

    $.Field({Static:false, Public:true }, "menuKeys", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm06.TypeRef("Fusee.FuFiCycles.Core.KeyboardKey")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.KeyboardKey */ 

(function KeyboardKey$Members () {
  var $, $thisType;

  function KeyboardKey__ctor () {
    this.down = false;
    this.pressed = false;
  }; 

  function KeyboardKey_isDown () {
    return this.down;
  }; 

  function KeyboardKey_isPressed () {
    return this.pressed;
  }; 

  function KeyboardKey_setDown () {
    this.down = true;
  }; 

  function KeyboardKey_setNotDown () {
    this.down = false;
  }; 

  function KeyboardKey_setPressed () {
    this.pressed = true;
    this.setDown();
  }; 

  function KeyboardKey_setUnpressed () {
    this.pressed = false;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.KeyboardKey", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      KeyboardKey__ctor
    );

    $.Method({Static:false, Public:true }, "isDown", 
      JSIL.MethodSignature.Return($.Boolean), 
      KeyboardKey_isDown
    );

    $.Method({Static:false, Public:true }, "isPressed", 
      JSIL.MethodSignature.Return($.Boolean), 
      KeyboardKey_isPressed
    );

    $.Method({Static:false, Public:true }, "setDown", 
      JSIL.MethodSignature.Void, 
      KeyboardKey_setDown
    );

    $.Method({Static:false, Public:true }, "setNotDown", 
      JSIL.MethodSignature.Void, 
      KeyboardKey_setNotDown
    );

    $.Method({Static:false, Public:true }, "setPressed", 
      JSIL.MethodSignature.Void, 
      KeyboardKey_setPressed
    );

    $.Method({Static:false, Public:true }, "setUnpressed", 
      JSIL.MethodSignature.Void, 
      KeyboardKey_setUnpressed
    );

    $.Field({Static:false, Public:false}, "down", $.Boolean);

    $.Field({Static:false, Public:false}, "pressed", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Fusee.FuFiCycles.Core.Direction */ 

JSIL.MakeEnum(
  {
    FullName: "Fusee.FuFiCycles.Core.Direction", 
    BaseType: $asm14.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    FORWARD: 0, 
    RIGHT: 1, 
    BACKWARD: 2, 
    LEFT: 3, 
  }
);

/* class Fusee.FuFiCycles.Core.DirectionMethods */ 

(function DirectionMethods$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Direction)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Exception)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Exception"), [$asm14.TypeRef("System.String")]))) ();
  };


  function DirectionMethods_directionFromYaw (yaw) {
    var flag = (+yaw < (1.57079637 + 0.1)) && 
    (+yaw > (1.57079637 - 0.1));
    if (flag) {
      var result = $T02().RIGHT;
    } else {
      var flag2 = ((+yaw > -0.1) && 
        (+yaw < 0.1)) || 
      ((+yaw < (6.28318548 + 0.1)) && 
        (+yaw > (6.28318548 - 0.1)));
      if (flag2) {
        result = $T02().FORWARD;
      } else {
        var flag3 = ((+yaw < (-1.57079637 + 0.1)) && 
          (+yaw > (-1.57079637 - 0.1))) || 
        ((+yaw < (4.712389 + 0.1)) && 
          (+yaw > (4.712389 - 0.1)));
        if (flag3) {
          result = $T02().LEFT;
        } else {
          var flag4 = ((+yaw > (3.14159274 - 0.1)) && 
            (+yaw < (3.14159274 + 0.1))) || 
          ((+yaw > (-3.14159274 - 0.1)) && 
            (+yaw < (-3.14159274 + 0.1)));
          if (!flag4) {
            throw $S00().Construct("no direction for yaw found");
          }
          result = $T02().BACKWARD;
        }
      }
    }
    return result;
  }; 

  function DirectionMethods_getYaw (direction) {
    switch (direction.valueOf()) {
      case 0: 
        var result = 0;
        break;

      case 1: 
        result = 1.57079637;
        break;

      case 2: 
        result = 3.14159274;
        break;

      case 3: 
        result = -1.57079637;
        break;

      default: 
        throw $S00().Construct("no yaw for direction found");

    }
    return result;
  }; 

  JSIL.MakeStaticClass("Fusee.FuFiCycles.Core.DirectionMethods", false, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "directionFromYaw", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.FuFiCycles.Core.Direction"), [$.Single]), 
      DirectionMethods_directionFromYaw
    );

    $.Method({Static:true , Public:true }, "getYaw", 
      new JSIL.MethodSignature($.Single, [$asm06.TypeRef("Fusee.FuFiCycles.Core.Direction")]), 
      DirectionMethods_getYaw
    )
      .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0D.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class Fusee.FuFiCycles.Core.Cycle */ 

(function Cycle$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Serialization.SceneContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GameSettings)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Cycle_$l$gc)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm09.Fusee.Serialization.TransformComponent)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm08.Fusee.Math.Core.float3)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm09.Fusee.Serialization.SceneComponentContainer)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.System.Diagnostics.Debug)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Direction)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.DirectionMethods)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Serialization.SceneComponentContainer")]), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm08.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), null))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.String")))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Direction")))) ();
  };


  function Cycle__ctor (id) {
    var arg_4F_1 = null;
    this.collided = false;
    this.setId(id);
    var arg_4F_0 = $T05().INSTANCE.getSceneContainers().get_Item("cycle").Children;
    if ((arg_4F_1 = $T06().$l$g9__8_0) === null) {
      arg_4F_1 = $T06().$l$g9__8_0 = $T01().New($T06().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$l_ctor$gb__8_0", $S00(), false, false));
    }
    var sceneNodeContainer = $S01().CallStatic($T08(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T09(), "FindNodes", null, arg_4F_0, arg_4F_1));
    this.sceneNodeContainer = new ($T07())();
    this.sceneNodeContainer.Name = (JSIL.ConcatString("cycle", $T00().$Box(this.getId())));
    this.sceneNodeContainer.Components = $S03().Construct();
    var transformComponent = new ($T0C())();
    transformComponent.Name = (JSIL.ConcatString("tc", $T00().$Box(this.getId())));
    transformComponent.Rotation = $S04().Construct(0, 0, 0);
    transformComponent.Scale = $T0E().GetTransform(sceneNodeContainer, 0).Scale.MemberwiseClone();
    transformComponent.Translation = $S04().Construct(0, 0, 0);
    $S05().CallVirtual("Add", null, this.sceneNodeContainer.Components, transformComponent);
    $S05().CallVirtual("Add", null, this.sceneNodeContainer.Components, $T0E().GetMesh(sceneNodeContainer, 0));
    this.sceneNodeContainer.Children = $S06().Construct();

    for (var i = 0; i < ((sceneNodeContainer.Children).get_Count() | 0); i = ((i + 1) | 0)) {
      var sceneNodeContainer2 = new ($T07())();
      sceneNodeContainer2.Name = (JSIL.ConcatString("child", $T00().$Box(i)));
      sceneNodeContainer2.Components = $S03().Construct();

      for (var j = 0; j < (((sceneNodeContainer.Children).get_Item(i).Components).get_Count() | 0); j = ((j + 1) | 0)) {
        var sceneComponentContainer = ((sceneNodeContainer.Children).get_Item(i).Components).get_Item(j);
        sceneComponentContainer.Name = (JSIL.ConcatString("comp", $T00().$Box(i), $T00().$Box(j)));
        $S05().CallVirtual("Add", null, sceneNodeContainer2.Components, sceneComponentContainer);
      }
      $S07().CallVirtual("Add", null, this.sceneNodeContainer.Children, sceneNodeContainer2);
    }
    this.createWheels();
    this.scale();
    $S07().CallVirtual("Add", null, $T05().INSTANCE.getSceneContainers().get_Item("cycle").Children, this.getSNC());
    this.setSpeed(50);
    this.setStartPosition();
  }; 

  function Cycle_createWheels () {
    var arg_39_1 = null, arg_7C_1 = null;
    var arg_39_0 = $T05().INSTANCE.getSceneContainers().get_Item("cycle").Children;
    if ((arg_39_1 = $T06().$l$g9__25_0) === null) {
      arg_39_1 = $T06().$l$g9__25_0 = $T01().New($T06().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$lcreateWheels$gb__25_0", $S08(), false, false));
    }
    var sncThis = $S01().CallStatic($T08(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T09(), "FindNodes", null, arg_39_0, arg_39_1));
    var arg_7C_0 = $T05().INSTANCE.getSceneContainers().get_Item("cycle").Children;
    if ((arg_7C_1 = $T06().$l$g9__25_1) === null) {
      arg_7C_1 = $T06().$l$g9__25_1 = $T01().New($T06().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.Cycle_$l$gc, "$lcreateWheels$gb__25_1", $S09(), false, false));
    }
    var sncThis2 = $S01().CallStatic($T08(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T09(), "FindNodes", null, arg_7C_0, arg_7C_1));
    var sceneNodeContainer = new ($T07())();
    sceneNodeContainer.Name = (JSIL.ConcatString("frontwheel", $T00().$Box(this.getId())));
    sceneNodeContainer.Components = $S03().Construct();
    this.frontwheel_tc = new ($T0C())();
    this.frontwheel_tc.Name = (JSIL.ConcatString("frontwheel_tc", $T00().$Box(this.getId())));
    this.frontwheel_tc.Rotation = $T0E().GetTransform(sncThis, 0).Rotation.MemberwiseClone();
    this.frontwheel_tc.Scale = $T0E().GetTransform(sncThis, 0).Scale.MemberwiseClone();
    this.frontwheel_tc.Translation = $T0E().GetTransform(sncThis, 0).Translation.MemberwiseClone();
    $S05().CallVirtual("Add", null, sceneNodeContainer.Components, this.frontwheel_tc);
    $S05().CallVirtual("Add", null, sceneNodeContainer.Components, $T0E().GetMesh(sncThis, 0));
    $S07().CallVirtual("Add", null, this.getSNC().Children, sceneNodeContainer);
    var sceneNodeContainer2 = new ($T07())();
    sceneNodeContainer2.Name = (JSIL.ConcatString("backwheel", $T00().$Box(this.getId())));
    sceneNodeContainer2.Components = $S03().Construct();
    this.backwheel_tc = new ($T0C())();
    this.backwheel_tc.Name = (JSIL.ConcatString("backwheel_tc", $T00().$Box(this.getId())));
    this.backwheel_tc.Rotation = $T0E().GetTransform(sncThis2, 0).Rotation.MemberwiseClone();
    this.backwheel_tc.Scale = $T0E().GetTransform(sncThis2, 0).Scale.MemberwiseClone();
    this.backwheel_tc.Translation = $T0E().GetTransform(sncThis2, 0).Translation.MemberwiseClone();
    $S05().CallVirtual("Add", null, sceneNodeContainer2.Components, this.backwheel_tc);
    $S05().CallVirtual("Add", null, sceneNodeContainer2.Components, $T0E().GetMesh(sncThis2, 0));
    $S07().CallVirtual("Add", null, this.getSNC().Children, sceneNodeContainer2);
  }; 

  function Cycle_getBackWheel () {
    return this.backwheel_tc;
  }; 

  function Cycle_getDirection () {
    return this.direction;
  }; 

  function Cycle_getFrontWheel () {
    return this.frontwheel_tc;
  }; 

  function Cycle_getId () {
    return this.id;
  }; 

  function Cycle_getPosition () {
    return this.position;
  }; 

  function Cycle_getSNC () {
    return this.sceneNodeContainer;
  }; 

  function Cycle_getSpeed () {
    return this.speed;
  }; 

  function Cycle_isCollided () {
    return this.collided;
  }; 

  function Cycle_scale () {
    $T0E().GetTransform(this.sceneNodeContainer, 0).Scale.x = 30;
    $T0E().GetTransform(this.sceneNodeContainer, 0).Scale.y = 30;
    $T0E().GetTransform(this.sceneNodeContainer, 0).Scale.z = 30;
  }; 

  function Cycle_setCollided () {
    $S0A().CallStatic($T11(), "WriteLine", null, JSIL.ConcatString("cycle", $T00().$Box(this.getId()), " kollidiert"));
    this.collided = true;
    this.setSpeed(0);
  }; 

  function Cycle_setDirection$00 (direction) {
    this.direction = direction;
    $T0E().GetTransform(this.getSNC(), 0).Rotation = $S04().Construct(0, $T13().getYaw(direction), 0);
  }; 

  function Cycle_setDirection$01 (yaw) {
    $S0B().CallVirtual("setDirection", null, this, $T13().directionFromYaw(yaw));
  }; 

  function Cycle_setId (id) {
    this.id = (id | 0);
  }; 

  function Cycle_setPosition (position) {
    $T0E().GetTransform(this.getSNC(), 0).Translation = position.MemberwiseClone();
    this.position = position.MemberwiseClone();
  }; 

  function Cycle_setSpeed (speed) {
    this.speed = (speed | 0);
  }; 

  function Cycle_setStartPosition () {
    var num2 = (this.getId() | 0);
    if (num2 !== 1) {
      if (num2 !== 2) {
        $S0A().CallStatic($T11(), "WriteLine", null, "ACHTUNG: Spieler 3 aufw\xe4rts haben keine Positionen zugeordnet.");
      } else {
        this.setPosition($S04().Construct(+(((($T05().MAP_SIZE | 0) / 2) >>> 0) - 160), 0, +(($T05().MAP_SIZE | 0) - (500 | 0))));
        $S0B().CallVirtual("setDirection", null, this, $T12().BACKWARD);
      }
    } else {
      this.setPosition($S04().Construct(+(((($T05().MAP_SIZE | 0) / 2) >>> 0) + 160), 0, +(500)));
      $S0B().CallVirtual("setDirection", null, this, $T12().FORWARD);
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Cycle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      Cycle__ctor
    );

    $.Method({Static:false, Public:false}, "createWheels", 
      JSIL.MethodSignature.Void, 
      Cycle_createWheels
    );

    $.Method({Static:false, Public:true }, "getBackWheel", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Serialization.TransformComponent")), 
      Cycle_getBackWheel
    );

    $.Method({Static:false, Public:true }, "getDirection", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.Direction")), 
      Cycle_getDirection
    );

    $.Method({Static:false, Public:true }, "getFrontWheel", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Serialization.TransformComponent")), 
      Cycle_getFrontWheel
    );

    $.Method({Static:false, Public:true }, "getId", 
      JSIL.MethodSignature.Return($.Int32), 
      Cycle_getId
    );

    $.Method({Static:false, Public:true }, "getPosition", 
      JSIL.MethodSignature.Return($asm08.TypeRef("Fusee.Math.Core.float3")), 
      Cycle_getPosition
    );

    $.Method({Static:false, Public:true }, "getSNC", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      Cycle_getSNC
    );

    $.Method({Static:false, Public:true }, "getSpeed", 
      JSIL.MethodSignature.Return($.Int32), 
      Cycle_getSpeed
    );

    $.Method({Static:false, Public:true }, "isCollided", 
      JSIL.MethodSignature.Return($.Boolean), 
      Cycle_isCollided
    );

    $.Method({Static:false, Public:false}, "scale", 
      JSIL.MethodSignature.Void, 
      Cycle_scale
    );

    $.Method({Static:false, Public:true }, "setCollided", 
      JSIL.MethodSignature.Void, 
      Cycle_setCollided
    );

    $.Method({Static:false, Public:true }, "setDirection", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Direction")), 
      Cycle_setDirection$00
    );

    $.Method({Static:false, Public:true }, "setDirection", 
      JSIL.MethodSignature.Action($.Single), 
      Cycle_setDirection$01
    );

    $.Method({Static:false, Public:true }, "setId", 
      JSIL.MethodSignature.Action($.Int32), 
      Cycle_setId
    );

    $.Method({Static:false, Public:true }, "setPosition", 
      JSIL.MethodSignature.Action($asm08.TypeRef("Fusee.Math.Core.float3")), 
      Cycle_setPosition
    );

    $.Method({Static:false, Public:true }, "setSpeed", 
      JSIL.MethodSignature.Action($.Int32), 
      Cycle_setSpeed
    );

    $.Method({Static:false, Public:false}, "setStartPosition", 
      JSIL.MethodSignature.Void, 
      Cycle_setStartPosition
    );

    $.Field({Static:false, Public:false}, "sceneNodeContainer", $asm09.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:false}, "frontwheel_tc", $asm09.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "backwheel_tc", $asm09.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "id", $.Int32);

    $.Field({Static:false, Public:false}, "speed", $.Int32);

    $.Field({Static:false, Public:false}, "position", $asm08.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "collided", $.Boolean);

    $.Field({Static:false, Public:false}, "direction", $asm06.TypeRef("Fusee.FuFiCycles.Core.Direction"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Cycle+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$l_ctor$gb__8_0 (c) {
    return c.Name == "cycle";
  }; 

  function $l$gc_$lcreateWheels$gb__25_0 (c) {
    return c.Name == "wheel_front";
  }; 

  function $l$gc_$lcreateWheels$gb__25_1 (c) {
    return c.Name == "wheel_back";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Cycle+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__8_0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__8_0
    );

    $.Method({Static:false, Public:false}, "$lcreateWheels$gb__25_0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lcreateWheels$gb__25_0
    );

    $.Method({Static:false, Public:false}, "$lcreateWheels$gb__25_1", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lcreateWheels$gb__25_1
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__8_0", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__25_0", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__25_1", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.FuFiCycles.Core.Player */ 

(function Player$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Byte)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Cycle)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Serialization.SceneContainer))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GameSettings)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Player_$l$gc)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Diagnostics.Debug)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm08.Fusee.Math.Core.float3)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.InputKeys)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Exception)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm14.System.Int16)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.KeyboardKey)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm03.Fusee.Engine.Common.KeyCodes, $asm06.Fusee.FuFiCycles.Core.KeyboardKey))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm14.System.Object)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm09.Fusee.Serialization.TransformComponent)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm09.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm09.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Renderer)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm08.Fusee.Math.Core.M)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Round)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Match)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm14.System.Math)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.DirectionMethods)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm14.System.Double)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize(System.Array.Of($asm14.System.Byte, JSIL.ArrayDimensionParameter(2)))) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm14.System.IndexOutOfRangeException)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm14.System.InvalidOperationException)) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm08.Fusee.Math.Core.float4x4)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.String")))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm08.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Exception"), [$asm14.TypeRef("System.String")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Single")))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Serialization.SceneComponentContainer")]), null))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float3"), [$asm08.TypeRef("Fusee.Math.Core.float3"), $asm14.TypeRef("System.Single")]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function Player__ctor (id) {
    var arg_75_1 = null;
    this._angleHorz = 0;
    this.ticksPerAngleChange = 10;
    this.firstWallDrawn = false;
    this.setPlayerId(id);
    this.setCycle(new ($T02())(this.getPlayerId()));
    var arg_75_0 = $T06().INSTANCE.getSceneContainers().get_Item("wall").Children;
    if ((arg_75_1 = $T07().$l$g9__15_0) === null) {
      arg_75_1 = $T07().$l$g9__15_0 = $T01().New($T07().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.Player_$l$gc, "$l_ctor$gb__15_0", $S00(), false, false));
    }
    this._wallSNC = $S01().CallStatic($T09(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T0A(), "FindNodes", null, arg_75_0, arg_75_1));
    if ((id | 0) !== 1) {
      if ((id | 0) !== 2) {
        $S03().CallStatic($T0B(), "WriteLine", null, "ACHTUNG: Spieler 3 aufw\xe4rts haben keine Keys zugeordnet.");
        this.setColor($S04().Construct(0.2, 0.2, 0.2));
      } else {
        this.input_keys = new ($T0D())($T0E().Left, $T0E().Right, $T0E().Up, $T0E().Down);
        this.setColor($S04().Construct(0, 1, 0));
      }
    } else {
      this.input_keys = new ($T0D())($T0E().A, $T0E().D, $T0E().W, $T0E().S);
      this.setColor($S04().Construct(0, 0.9, 1));
    }
    switch (((this.getCycle()).getDirection()).valueOf()) {
      case 0: 
        this._angleHorz = 0;
        break;

      case 1: 
        this._angleHorz = 1.57079637;
        break;

      case 2: 
        this._angleHorz = 3.14159274;
        break;

      case 3: 
        this._angleHorz = 4.712389;
        break;

      default: 
        throw $S05().Construct("no direction found");

    }
  }; 

  function Player_changeHorzAngle () {
    if ((this.horzAngleTicker | 0) > 0) {
      this._angleHorz = +this._angleHorz + +((1.57079637 / +(this.ticksPerAngleChange)));
      this.horzAngleTicker = (((((this.horzAngleTicker | 0) - 1) | 0) + 0x8000 & 0xFFFF) - 0x8000);
    }
    if ((this.horzAngleTicker | 0) < 0) {
      this._angleHorz = +this._angleHorz - +((1.57079637 / +(this.ticksPerAngleChange)));
      this.horzAngleTicker = (((((this.horzAngleTicker | 0) + 1) | 0) + 0x8000 & 0xFFFF) - 0x8000);
    }
  }; 

  function Player_checkForDirectionChange () {
    if ((this.getCycle()).isCollided()) {
      var result = false;
    } else {
      var flag2 = false;
      var num = +$T13().GetTransform((this.getCycle()).getSNC(), 0).Rotation.y;
      if (($T06().INSTANCE.keyboardKeys.ingameKeys.get_Item((this.input_keys).getKeyLeft())).isPressed()) {
        ($T06().INSTANCE.keyboardKeys.ingameKeys.get_Item((this.input_keys).getKeyLeft())).setUnpressed();
        this.horzAngleTicker = ((((this.horzAngleTicker | 0) + (this.ticksPerAngleChange | 0)) + 0x8000 & 0xFFFF) - 0x8000);
        num -= 1.57079637;
        num = +$T05().NormRot(num);
        flag2 = true;
        $S06().CallVirtual("setDirection", null, this.getCycle(), num);
      } else {
        if (($T06().INSTANCE.keyboardKeys.ingameKeys.get_Item((this.input_keys).getKeyRight())).isPressed()) {
          ($T06().INSTANCE.keyboardKeys.ingameKeys.get_Item((this.input_keys).getKeyRight())).setUnpressed();
          this.horzAngleTicker = ((((this.horzAngleTicker | 0) - (this.ticksPerAngleChange | 0)) + 0x8000 & 0xFFFF) - 0x8000);
          num += 1.57079637;
          num = +$T05().NormRot(num);
          flag2 = true;
          $S06().CallVirtual("setDirection", null, this.getCycle(), num);
        }
      }
      this.changeHorzAngle();
      result = flag2;
    }
    return result;
  }; 

  function Player_Finalize () {
    try {
      ($T06().INSTANCE.getSceneContainers().get_Item("cycle").Children).Remove((this.getCycle()).getSNC());
    } finally {
      $T17().prototype.Finalize.call(this);
    }
  }; 

  function Player_fixWallEdges () {
    switch (((this.getCycle()).getDirection()).valueOf()) {
      case 0: 
        var expr_59_cp_0_cp_0 = this._cycleWall;
        expr_59_cp_0_cp_0.Scale.z = +expr_59_cp_0_cp_0.Scale.z - (+$thisType.WALL_WIDTH * 2);
        break;

      case 1: 
        var expr_38_cp_0_cp_0 = this._cycleWall;
        expr_38_cp_0_cp_0.Scale.x = +expr_38_cp_0_cp_0.Scale.x - (+$thisType.WALL_WIDTH * 2);
        break;

      case 2: 
        var expr_9B_cp_0_cp_0 = this._cycleWall;
        expr_9B_cp_0_cp_0.Scale.z = +expr_9B_cp_0_cp_0.Scale.z - (+$thisType.WALL_WIDTH * 2);
        break;

      case 3: 
        var expr_7A_cp_0_cp_0 = this._cycleWall;
        expr_7A_cp_0_cp_0.Scale.x = +expr_7A_cp_0_cp_0.Scale.x - (+$thisType.WALL_WIDTH * 2);
        break;

    }
  }; 

  function Player_getColor () {
    return this.color;
  }; 

  function Player_getCycle () {
    return this.cycle;
  }; 

  function Player_getInputKeys () {
    return this.input_keys;
  }; 

  function Player_getPlayerId () {
    return this.player_id;
  }; 

  function Player_getPlayerName () {
    return this.player_name;
  }; 

  function Player_getProjection () {
    return this.projection;
  }; 

  function Player_getWall (x, z) {
    switch (((this.getCycle()).getDirection()).valueOf()) {
      case 0: 
        z = (((z | 0) - ((this.getCycle()).getSpeed() | 0)) | 0);
        break;

      case 1: 
        x = (((x | 0) - ((this.getCycle()).getSpeed() | 0)) | 0);
        break;

      case 2: 
        z = (((z | 0) + ((this.getCycle()).getSpeed() | 0)) | 0);
        break;

      case 3: 
        x = (((x | 0) + ((this.getCycle()).getSpeed() | 0)) | 0);
        break;

    }
    var sceneNodeContainer = new ($T08())();
    sceneNodeContainer.Name = (JSIL.ConcatString("wall", $T19().$Box(x), $T19().$Box(z)));
    sceneNodeContainer.Components = $S07().Construct();
    var transformComponent = new ($T18())();
    transformComponent.Name = (JSIL.ConcatString("tc", $T19().$Box(x), $T19().$Box(z)));
    transformComponent.Rotation = $S04().Construct(0, 0, 0);
    transformComponent.Scale = $S04().Construct($thisType.WALL_WIDTH, $thisType.WALL_HEIGHT, $thisType.WALL_WIDTH);
    transformComponent.Translation = $S04().Construct(+x, 0, +z);
    $S08().CallVirtual("Add", null, sceneNodeContainer.Components, transformComponent);
    var arg_126_0 = sceneNodeContainer.Components;
    var expr_119 = this._wallSNC;
    $S08().CallVirtual("Add", null, arg_126_0, (
        (expr_119 !== null)
           ? $T13().GetMaterial(expr_119, 0)
           : null)
    );
    var arg_145_0 = sceneNodeContainer.Components;
    var expr_138 = this._wallSNC;
    $S08().CallVirtual("Add", null, arg_145_0, (
        (expr_138 !== null)
           ? $T13().GetMesh(expr_138, 0)
           : null)
    );
    $S09().CallVirtual("Add", null, $T06().INSTANCE.getSceneContainers().get_Item("wall").Children, sceneNodeContainer);
    var materialComponent = new ($T1C())();
    materialComponent.Diffuse = new ($T1D())();
    materialComponent.Diffuse.Color = this.getColor().MemberwiseClone();
    (sceneNodeContainer.Components).set_Item(1, materialComponent);
    return $T13().GetTransform(sceneNodeContainer, 0);
  }; 

  function Player_gotFirstWall () {
    return this.firstWallDrawn;
  }; 

  function Player_isKeyDown (key) {
    return $T1F().get_Keyboard().GetKey(key);
  }; 

  function Player_prepareWall () {
    if (this._cycleWall !== null) {
      if (+this._cycleWall.Translation.y === -150) {
        this._cycleWall.Translation.y = 0;
      }
      switch (((this.getCycle()).getDirection()).valueOf()) {
        case 0: 
          var expr_D1_cp_0_cp_0 = this._cycleWall;
          expr_D1_cp_0_cp_0.Translation.z = +expr_D1_cp_0_cp_0.Translation.z + +((((this.getCycle()).getSpeed() | 0) / 2 | 0));
          this._cycleWall.Scale.z = +this._cycleWall.Scale.z - +((this.getCycle()).getSpeed());
          break;

        case 1: 
          var expr_7D_cp_0_cp_0 = this._cycleWall;
          expr_7D_cp_0_cp_0.Translation.x = +expr_7D_cp_0_cp_0.Translation.x + +((((this.getCycle()).getSpeed() | 0) / 2 | 0));
          this._cycleWall.Scale.x = +this._cycleWall.Scale.x - +((this.getCycle()).getSpeed());
          break;

        case 2: 
          var expr_176_cp_0_cp_0 = this._cycleWall;
          expr_176_cp_0_cp_0.Translation.z = +expr_176_cp_0_cp_0.Translation.z - +((((this.getCycle()).getSpeed() | 0) / 2 | 0));
          this._cycleWall.Scale.z = +this._cycleWall.Scale.z - +((this.getCycle()).getSpeed());
          break;

        case 3: 
          var expr_125_cp_0_cp_0 = this._cycleWall;
          expr_125_cp_0_cp_0.Translation.x = +expr_125_cp_0_cp_0.Translation.x - +((((this.getCycle()).getSpeed() | 0) / 2 | 0));
          this._cycleWall.Scale.x = +this._cycleWall.Scale.x - +((this.getCycle()).getSpeed());
          break;

      }
    }
  }; 

  function Player_renderAFrame (_renderer, $exception) {
    var flag = this.checkForDirectionChange();
    this._angleHorz = +$S0A().CallStatic($T21(), "MinAngle", null, this._angleHorz);
    if (!$S0B().CallStatic($T09(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T06().MATCHS).getCurrentRound().isPaused()) {
      (this.getCycle()).setPosition($T0C().op_Addition(
          $T13().GetTransform((this.getCycle()).getSNC(), 0).Translation.MemberwiseClone(), 
          $S0C().CallStatic($T0C(), "op_Multiply", null, 
            $S04().Construct(Math.fround(Math.sin($T25().getYaw((this.getCycle()).getDirection()))), 0, Math.fround(Math.cos($T25().getYaw((this.getCycle()).getDirection())))), 
            +((this.getCycle()).getSpeed())
          )
        ).MemberwiseClone());
      (this.getCycle()).getFrontWheel().Rotation = $T0C().op_Addition(
        (this.getCycle()).getFrontWheel().Rotation.MemberwiseClone(), 
        $S04().Construct((+((this.getCycle()).getSpeed()) * 0.008), 0, 0)
      );
      (this.getCycle()).getBackWheel().Rotation = $T0C().op_Addition(
        (this.getCycle()).getBackWheel().Rotation.MemberwiseClone(), 
        $S04().Construct((+((this.getCycle()).getSpeed()) * 0.008), 0, 0)
      );
      var num = ((Math.floor(((this.getCycle()).getPosition().x + 0.5))) | 0);
      var num2 = ((Math.floor(((this.getCycle()).getPosition().z + 0.5))) | 0);
      try {

        for (var i = 0; i < ((this.getCycle()).getSpeed() | 0); i = ((i + 1) | 0)) {
          var num3 = num;
          var num4 = num2;
          switch (((this.getCycle()).getDirection()).valueOf()) {
            case 0: 
              num4 = ((num4 - i) | 0);
              break;

            case 1: 
              num3 = ((num3 - i) | 0);
              break;

            case 2: 
              num4 = ((num4 + i) | 0);
              break;

            case 3: 
              num3 = ((num3 + i) | 0);
              break;

          }
          var flag3 = ($S0B().CallStatic($T09(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T06().MATCHS).getCurrentRound().getMapMirror().Get(num3, num4) | 0) === 0;
          if (flag3) {
            $S0B().CallStatic($T09(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T06().MATCHS).getCurrentRound().getMapMirror().Set(num3, num4, this.getPlayerId());
          } else {
            (this.getCycle()).setCollided();
          }
        }
      } catch ($exception) {
        if ($T28().$Is($exception)) {
          (this.getCycle()).setCollided();
          $S03().CallStatic($T0B(), "WriteLine", null, ($exception).get_Message());
        } else {
          throw $exception;
        }
      }
      var flag4 = flag || 
      $S0B().CallStatic($T09(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T06().MATCHS).getCurrentRound().getFirstFrame();
      if (flag4) {
        this._cycleWall = this.getWall(num, num2);
        this.fixWallEdges();
        this.firstWallDrawn = true;
      }
      this.prepareWall();
    }
    this.renderView(_renderer);
  }; 

  function Player_renderView (_renderer, $exception) {
    try {
      $S0D().CallVirtual("Traverse", null, _renderer, $T06().INSTANCE.getSceneContainers().get_Item("cycle").Children);
    } catch ($exception) {
      if ($T2A().$Is($exception)) {
        $S03().CallStatic($T0B(), "WriteLine", null, ($exception).get_StackTrace());
      } else {
        throw $exception;
      }
    }
    $S0D().CallVirtual("Traverse", null, _renderer, $T06().INSTANCE.getSceneContainers().get_Item("wall").Children);
  }; 

  function Player_resize () {
    var aspect = +((+((($T06().INSTANCE.get_Width() | 0) / 2 | 0)) / +($T06().INSTANCE.get_Height())));
    this.setProjection($T2C().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000).MemberwiseClone());
  }; 

  function Player_setColor (color) {
    this.color = color.MemberwiseClone();
    var materialComponent = new ($T1C())();
    materialComponent.Diffuse = new ($T1D())();
    materialComponent.Diffuse.Color = $S04().Construct((+color.x * 0.8), (+color.y * 0.8), (+color.z * 0.8));
    var materialComponent2 = new ($T1C())();
    materialComponent2.Diffuse = new ($T1D())();
    materialComponent2.Diffuse.Color = $S04().Construct((+color.x * 0.6), (+color.y * 0.6), (+color.z * 0.6));
    (((this.getCycle()).getSNC().Children).get_Item(0).Components).set_Item(1, materialComponent);
    (((this.getCycle()).getSNC().Children).get_Item(1).Components).set_Item(1, materialComponent2);
  }; 

  function Player_setCycle (cycle) {
    this.cycle = cycle;
  }; 

  function Player_setPlayerId (id) {
    this.player_id = (id | 0);
  }; 

  function Player_setPlayerName (name) {
    this.player_name = name;
  }; 

  function Player_setProjection (projection) {
    this.projection = projection.MemberwiseClone();
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Player", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Byte), 
      Player__ctor
    );

    $.Method({Static:false, Public:false}, "changeHorzAngle", 
      JSIL.MethodSignature.Void, 
      Player_changeHorzAngle
    );

    $.Method({Static:false, Public:true }, "checkForDirectionChange", 
      JSIL.MethodSignature.Return($.Boolean), 
      Player_checkForDirectionChange
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void, 
      Player_Finalize
    )
      .Overrides($asm14.TypeRef("System.Object"), "Finalize");

    $.Method({Static:false, Public:false}, "fixWallEdges", 
      JSIL.MethodSignature.Void, 
      Player_fixWallEdges
    );

    $.Method({Static:false, Public:true }, "getColor", 
      JSIL.MethodSignature.Return($asm08.TypeRef("Fusee.Math.Core.float3")), 
      Player_getColor
    );

    $.Method({Static:false, Public:true }, "getCycle", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.Cycle")), 
      Player_getCycle
    );

    $.Method({Static:false, Public:true }, "getInputKeys", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.InputKeys")), 
      Player_getInputKeys
    );

    $.Method({Static:false, Public:true }, "getPlayerId", 
      JSIL.MethodSignature.Return($.Byte), 
      Player_getPlayerId
    );

    $.Method({Static:false, Public:true }, "getPlayerName", 
      JSIL.MethodSignature.Return($.String), 
      Player_getPlayerName
    );

    $.Method({Static:false, Public:true }, "getProjection", 
      JSIL.MethodSignature.Return($asm08.TypeRef("Fusee.Math.Core.float4x4")), 
      Player_getProjection
    );

    $.Method({Static:false, Public:false}, "getWall", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Serialization.TransformComponent"), [$.Int32, $.Int32]), 
      Player_getWall
    );

    $.Method({Static:false, Public:true }, "gotFirstWall", 
      JSIL.MethodSignature.Return($.Boolean), 
      Player_gotFirstWall
    );

    $.Method({Static:false, Public:false}, "isKeyDown", 
      new JSIL.MethodSignature($.Boolean, [$asm03.TypeRef("Fusee.Engine.Common.KeyCodes")]), 
      Player_isKeyDown
    );

    $.Method({Static:false, Public:false}, "prepareWall", 
      JSIL.MethodSignature.Void, 
      Player_prepareWall
    );

    $.Method({Static:false, Public:true }, "renderAFrame", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Renderer")), 
      Player_renderAFrame
    );

    $.Method({Static:false, Public:true }, "renderView", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Renderer")), 
      Player_renderView
    );

    $.Method({Static:false, Public:true }, "resize", 
      JSIL.MethodSignature.Void, 
      Player_resize
    );

    $.Method({Static:false, Public:true }, "setColor", 
      JSIL.MethodSignature.Action($asm08.TypeRef("Fusee.Math.Core.float3")), 
      Player_setColor
    );

    $.Method({Static:false, Public:true }, "setCycle", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.Cycle")), 
      Player_setCycle
    );

    $.Method({Static:false, Public:false}, "setPlayerId", 
      JSIL.MethodSignature.Action($.Byte), 
      Player_setPlayerId
    );

    $.Method({Static:false, Public:true }, "setPlayerName", 
      JSIL.MethodSignature.Action($.String), 
      Player_setPlayerName
    );

    $.Method({Static:false, Public:true }, "setProjection", 
      JSIL.MethodSignature.Action($asm08.TypeRef("Fusee.Math.Core.float4x4")), 
      Player_setProjection
    );

    $.Field({Static:false, Public:false}, "player_id", $.Byte);

    $.Field({Static:false, Public:false}, "player_name", $.String);

    $.Field({Static:false, Public:false}, "color", $asm08.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "cycle", $asm06.TypeRef("Fusee.FuFiCycles.Core.Cycle"));

    $.Field({Static:false, Public:true }, "input_keys", $asm06.TypeRef("Fusee.FuFiCycles.Core.InputKeys"));

    $.Field({Static:false, Public:true }, "projection", $asm08.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_wallSNC", $asm09.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:false}, "_cycleTransform", $asm09.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_cycleWall", $asm09.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:true }, "_angleHorz", $.Single);

    $.Field({Static:false, Public:false}, "horzAngleTicker", $.Int16);

    $.Field({Static:false, Public:false}, "ticksPerAngleChange", $.Byte);

    $.Field({Static:false, Public:false}, "firstWallDrawn", $.Boolean);

    $.Field({Static:true , Public:true }, "WALL_WIDTH", $.Single, 20);

    $.Field({Static:true , Public:true }, "WALL_HEIGHT", $.Single, 0.5);


    function Player__cctor () {
      $thisType.WALL_WIDTH = 20;
      $thisType.WALL_HEIGHT = 0.5;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Player__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Player+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$l_ctor$gb__15_0 (c) {
    return c.Name == "wall";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.Player+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__15_0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__15_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__15_0", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.FuFiCycles.Core.InputKeys */ 

(function InputKeys$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };


  function InputKeys__ctor (left, right, up, down) {
    this.setKeyLeft(left);
    this.setKeyRight(right);
    this.setKeyUp(up);
    this.setKeyDown(down);
  }; 

  function InputKeys_getKeyDown () {
    return this.down;
  }; 

  function InputKeys_getKeyLeft () {
    return this.left;
  }; 

  function InputKeys_getKeyRight () {
    return this.right;
  }; 

  function InputKeys_getKeyUp () {
    return this.up;
  }; 

  function InputKeys_setKeyDown (input_key) {
    this.down = input_key;
  }; 

  function InputKeys_setKeyLeft (input_key) {
    this.left = input_key;
  }; 

  function InputKeys_setKeyRight (input_key) {
    this.right = input_key;
  }; 

  function InputKeys_setKeyUp (input_key) {
    this.up = input_key;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.InputKeys", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), 
          $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"), $asm03.TypeRef("Fusee.Engine.Common.KeyCodes")
        ]), 
      InputKeys__ctor
    );

    $.Method({Static:false, Public:true }, "getKeyDown", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyDown
    );

    $.Method({Static:false, Public:true }, "getKeyLeft", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyLeft
    );

    $.Method({Static:false, Public:true }, "getKeyRight", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyRight
    );

    $.Method({Static:false, Public:true }, "getKeyUp", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_getKeyUp
    );

    $.Method({Static:false, Public:true }, "setKeyDown", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyDown
    );

    $.Method({Static:false, Public:true }, "setKeyLeft", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyLeft
    );

    $.Method({Static:false, Public:true }, "setKeyRight", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyRight
    );

    $.Method({Static:false, Public:true }, "setKeyUp", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.Common.KeyCodes")), 
      InputKeys_setKeyUp
    );

    $.Field({Static:false, Public:false}, "left", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));

    $.Field({Static:false, Public:false}, "right", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));

    $.Field({Static:false, Public:false}, "up", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));

    $.Field({Static:false, Public:false}, "down", $asm03.TypeRef("Fusee.Engine.Common.KeyCodes"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.Renderer */ 

(function Renderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm09.Fusee.Serialization.MeshComponent, $asm04.Fusee.Engine.Core.Mesh))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm03.Fusee.Engine.Common.ITexture))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm04.Fusee.Engine.Core.ShaderEffect))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.Fusee.Xene.CollapsingStateStack$b1.Of($asm08.Fusee.Math.Core.float4x4))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectPassDeclaration))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectPassDeclaration)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderStateSet)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectParameterDeclaration)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm08.Fusee.Math.Core.float3)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffect)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GameSettings)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm08.Fusee.Math.Core.float4x4)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm09.Fusee.Serialization.MeshComponent)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm04.Fusee.Engine.Core.Mesh)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm03.Fusee.Engine.Common.ITexture)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm09.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm09.Fusee.Serialization.TransformComponent)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm03.TypeRef("Fusee.Engine.Common.ITexture")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float4x4"), [$asm08.TypeRef("Fusee.Math.Core.float4x4"), $asm08.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };


  function Renderer__ctor () {
    this._meshes = $S00().Construct();
    this._textures = $S01().Construct();
    this._shaderEffects = $S02().Construct();
    this._model = new ($T03())(4);
    this.vertexShader = $T05().Get$b1($T04())("VertexShader2.vert");
    this.pixelShader = $T05().Get$b1($T04())("PixelShader2.frag");
    $T06().prototype._ctor.call(this);
    this.LookupTexture("Sphere.jpg");
    var arg_1FC_0 = this._shaderEffects;
    var expr_72 = JSIL.Array.New($T08(), 1);
    var effectPassDeclaration = new ($T08())();
    effectPassDeclaration.VS = this.vertexShader;
    effectPassDeclaration.PS = this.pixelShader;
    var expr_9D = new ($T09())();
    expr_9D.set_ZEnable(true);
    effectPassDeclaration.StateSet = expr_9D;
    expr_72[0] = effectPassDeclaration.MemberwiseClone();
    var expr_B6 = JSIL.Array.New($T0B(), 7);
    var effectParameterDeclaration = new ($T0B())();
    effectParameterDeclaration.Name = "albedo";
    effectParameterDeclaration.Value = $T0C().One.MemberwiseClone();
    expr_B6[0] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0B())();
    effectParameterDeclaration.Name = "shininess";
    effectParameterDeclaration.Value = $T0D().$Box(1);
    expr_B6[1] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0B())();
    effectParameterDeclaration.Name = "specfactor";
    effectParameterDeclaration.Value = $T0D().$Box(1);
    expr_B6[2] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0B())();
    effectParameterDeclaration.Name = "speccolor";
    effectParameterDeclaration.Value = $T0C().Zero.MemberwiseClone();
    expr_B6[3] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0B())();
    effectParameterDeclaration.Name = "ambientcolor";
    effectParameterDeclaration.Value = $T0C().Zero.MemberwiseClone();
    expr_B6[4] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0B())();
    effectParameterDeclaration.Name = "texture";
    effectParameterDeclaration.Value = (this._textures).get_Item("Sphere.jpg");
    expr_B6[5] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0B())();
    effectParameterDeclaration.Name = "texmix";
    effectParameterDeclaration.Value = $T0D().$Box(0);
    expr_B6[6] = effectParameterDeclaration.MemberwiseClone();
    arg_1FC_0.set_Item("effect2", new ($T0E())(expr_72, $T0F().$Cast(expr_B6)));
    ((this._shaderEffects).get_Item("effect2")).AttachToContext($T11().INSTANCE.getRC());
    this.ShaderEffect = (this._shaderEffects).get_Item("effect2");
  }; 

  function Renderer_InitState () {
    (this._model).Clear();
    (this._model).set_Tos($T12().Identity.MemberwiseClone());
  }; 

  function Renderer_LookupMesh (mc) {
    var mesh = new JSIL.BoxedVariable(null);
    var flag = !(this._meshes).TryGetValue(mc, /* ref */ mesh);
    if (flag) {
      var expr_1C = new ($T14())();
      expr_1C.set_Vertices(mc.Vertices);
      expr_1C.set_Normals(mc.Normals);
      expr_1C.set_UVs(mc.UVs);
      expr_1C.set_Triangles(mc.Triangles);
      mesh.set(expr_1C);
      (this._meshes).set_Item(mc, mesh.get());
    }
    return mesh.get();
  }; 

  function Renderer_LookupTexture (textureName) {
    var value = new JSIL.BoxedVariable(null);
    var imageData = $T05().Get$b1($T17())(textureName).MemberwiseClone();
    var flag = !(this._textures).TryGetValue(textureName, /* ref */ value);
    if (flag) {
      value.set($T11().INSTANCE.getRC().CreateTexture(imageData.MemberwiseClone(), false));
      (this._textures).set_Item(textureName, value.get());
    }
    return imageData;
  }; 

  function Renderer_OnMaterial (material) {
    var hasDiffuse = material.get_HasDiffuse();
    if (hasDiffuse) {
      (this.ShaderEffect).SetEffectParam("albedo", material.Diffuse.Color.MemberwiseClone());
      var flag = (material.Diffuse.Texture == "Leaves.jpg");
      if (flag) {
        (this.ShaderEffect).SetEffectParam("texture", (this._textures).get_Item("Leaves.jpg"));
        (this.ShaderEffect).SetEffectParam("texmix", $T0D().$Box(1));
      } else {
        (this.ShaderEffect).SetEffectParam("texmix", $T0D().$Box(0));
      }
    } else {
      (this.ShaderEffect).SetEffectParam("albedo", $T0C().Zero.MemberwiseClone());
    }
    var hasSpecular = material.get_HasSpecular();
    if (hasSpecular) {
      (this.ShaderEffect).SetEffectParam("shininess", material.Specular.Shininess);
      (this.ShaderEffect).SetEffectParam("specfactor", material.Specular.Intensity);
      (this.ShaderEffect).SetEffectParam("speccolor", material.Specular.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("shininess", $T0D().$Box(0));
      (this.ShaderEffect).SetEffectParam("specfactor", $T0D().$Box(0));
      (this.ShaderEffect).SetEffectParam("speccolor", $T0C().Zero.MemberwiseClone());
    }
    var hasEmissive = material.get_HasEmissive();
    if (hasEmissive) {
      (this.ShaderEffect).SetEffectParam("ambientcolor", material.Emissive.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("ambientcolor", $T0C().Zero.MemberwiseClone());
    }
  }; 

  function Renderer_OnMesh (mesh) {
    var shaderEffect = new JSIL.BoxedVariable(null);
    (this.ShaderEffect).RenderMesh(this.LookupMesh(mesh));
    var flag = (this._shaderEffects).TryGetValue(this.SceneVisitor$CurrentNode$value.Name, /* ref */ shaderEffect);
    if (flag) {
      (shaderEffect.get()).RenderMesh(this.LookupMesh(mesh));
    } else {
      (this.ShaderEffect).RenderMesh(this.LookupMesh(mesh));
    }
  }; 

  function Renderer_OnTransform (xform) {
    this._model.Tos = $S03().CallStatic($T12(), "op_Multiply", null, this._model.Tos.MemberwiseClone(), $T1B().Matrix(xform).MemberwiseClone()).MemberwiseClone();
    ($T11().INSTANCE.getRC().ModelView = $S03().CallStatic($T12(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PopState () {
    (this._model).Pop();
    ($T11().INSTANCE.getRC().ModelView = $S03().CallStatic($T12(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PushState () {
    (this._model).Push();
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Xene.SceneVisitor"), 
      Name: "Fusee.FuFiCycles.Core.Renderer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Renderer__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      Renderer_InitState
    );

    $.Method({Static:false, Public:false}, "LookupMesh", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.Mesh"), [$asm09.TypeRef("Fusee.Serialization.MeshComponent")]), 
      Renderer_LookupMesh
    );

    $.Method({Static:false, Public:false}, "LookupTexture", 
      new JSIL.MethodSignature($asm00.TypeRef("Fusee.Base.Common.ImageData"), [$.String]), 
      Renderer_LookupTexture
    );

    $.Method({Static:false, Public:false}, "OnMaterial", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Serialization.MaterialComponent")), 
      Renderer_OnMaterial
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnMesh", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Serialization.MeshComponent")), 
      Renderer_OnMesh
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnTransform", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Serialization.TransformComponent")), 
      Renderer_OnTransform
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      Renderer_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      Renderer_PushState
    );

    $.Field({Static:false, Public:true }, "ShaderEffect", $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect"));

    $.Field({Static:false, Public:true }, "View", $asm08.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_meshes", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]));

    $.Field({Static:false, Public:false}, "_textures", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm03.TypeRef("Fusee.Engine.Common.ITexture")]));

    $.Field({Static:false, Public:true }, "_shaderEffects", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect")]));

    $.Field({Static:false, Public:false}, "_model", $asm0B.TypeRef("Fusee.Xene.CollapsingStateStack`1", [$asm08.TypeRef("Fusee.Math.Core.float4x4")]));

    $.Field({Static:false, Public:false}, "vertexShader", $.String);

    $.Field({Static:false, Public:false}, "pixelShader", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.FuFiCycles.Core.FuFiCycles */ 

(function FuFiCycles$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.Fusee.Base.Core.Font)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Serialization.SceneContainer))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Serialization.SceneContainer)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GameSettings)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.FuFiCycles_$l$gc)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.KeyboardKeys)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GUIIngame)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.GUIMenu)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm08.Fusee.Math.Core.M)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Renderer)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm08.Fusee.Math.Core.float4)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm14.System.Exception)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Match)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm14.System.InvalidOperationException)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm0F.System.Diagnostics.Debug)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm06.Fusee.FuFiCycles.Core.Match))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm08.Fusee.Math.Core.float4x4)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm06.Fusee.FuFiCycles.Core.Player))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Player)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm08.Fusee.Math.Core.float3)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.Cycle)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm14.System.Byte)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIHandler)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm09.Fusee.Serialization.MeshComponent)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm08.Fusee.Math.Core.AABBf)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm06.Fusee.FuFiCycles.Core.KeyboardKey)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm03.Fusee.Engine.Common.KeyCodes, $asm06.Fusee.FuFiCycles.Core.KeyboardKey))) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm09.TypeRef("Fusee.Serialization.SceneContainer")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm08.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.String")))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("Fusee.FuFiCycles.Core.Match")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float4x4"), [$asm08.TypeRef("Fusee.Math.Core.float4x4"), $asm08.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };


  function FuFiCycles__ctor () {
    this.roboto = $T01().Get$b1($T00())("Roboto-Light.ttf");
    this.sceneContainers = $S00().Construct();
    this._angleVert = -0.104719758;
    $T03().prototype._ctor.call(this);
  }; 

  function FuFiCycles_addSceneContainers () {
    (this.sceneContainers).Add("land", $T01().Get$b1($T04())("Land.fus"));
    (this.sceneContainers).Add("landLines", $T01().Get$b1($T04())("Land_Lines.fus"));
    (this.sceneContainers).Add("cycle", $T01().Get$b1($T04())("Cycle.fus"));
    (this.sceneContainers).Add("wall", $T01().Get$b1($T04())("Wall.fus"));
  }; 

  function FuFiCycles_enterFullscreen () {
    this.set_Fullscreen(true);
  }; 

  function FuFiCycles_enterMenu () {
    $T05().SHOWMENU = true;
  }; 

  function FuFiCycles_exitFullscreen () {
    this.set_Fullscreen(false);
  }; 

  function FuFiCycles_getIngameGui () {
    return this.ingameGui;
  }; 

  function FuFiCycles_getMenuGui () {
    return this.menuGui;
  }; 

  function FuFiCycles_getRC () {
    return this.RenderCanvas$RC$value;
  }; 

  function FuFiCycles_getSceneContainers () {
    return this.sceneContainers;
  }; 

  function FuFiCycles_hideOriginalCycle () {
    var arg_35_1 = null, arg_88_1 = null, arg_DE_1 = null;
    var arg_35_0 = (this.getSceneContainers()).get_Item("cycle").Children;
    if ((arg_35_1 = $T08().$l$g9__24_0) === null) {
      arg_35_1 = $T08().$l$g9__24_0 = $T06().New($T08().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.FuFiCycles_$l$gc, "$lhideOriginalCycle$gb__24_0", $S01(), false, false));
    }
    $T09().GetTransform($S02().CallStatic($T0B(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T0C(), "FindNodes", null, arg_35_0, arg_35_1)), 0).Translation.y = -500;
    var arg_88_0 = (this.getSceneContainers()).get_Item("cycle").Children;
    if ((arg_88_1 = $T08().$l$g9__24_1) === null) {
      arg_88_1 = $T08().$l$g9__24_1 = $T06().New($T08().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.FuFiCycles_$l$gc, "$lhideOriginalCycle$gb__24_1", $S04(), false, false));
    }
    $T09().GetTransform($S02().CallStatic($T0B(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T0C(), "FindNodes", null, arg_88_0, arg_88_1)), 0).Translation.z = +((($T05().MAP_SIZE | 0) / 2 >>> 0));
    var arg_DE_0 = (this.getSceneContainers()).get_Item("cycle").Children;
    if ((arg_DE_1 = $T08().$l$g9__24_2) === null) {
      arg_DE_1 = $T08().$l$g9__24_2 = $T06().New($T08().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.FuFiCycles_$l$gc, "$lhideOriginalCycle$gb__24_2", $S05(), false, false));
    }
    $T09().GetTransform($S02().CallStatic($T0B(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T0C(), "FindNodes", null, arg_DE_0, arg_DE_1)), 0).Translation.x = +((($T05().MAP_SIZE | 0) / 2 >>> 0));
  }; 

  function FuFiCycles_Init () {
    this.enterFullscreen();
    $T05().INSTANCE = this;
    this.keyboardKeys = new ($T0D())();
    this.setIngameGui(new ($T0E())());
    this.setMenuGui(new ($T0F())());
    this._angleRoll = +$S06().CallStatic($T10(), "MinAngle", null, this._angleRoll);
    this._renderer = new ($T11())();
    (this.RenderCanvas$RC$value.ClearColor = $S07().Construct(1, 1, 1, 1));
    var iS_WEB = $T05().IS_WEB;
    if (iS_WEB) {
      this.newMatch();
      $T05().SHOWMENU = false;
      (this.menuGui).activateContinueButton();
      $T05().INSTANCE.Resize();
    }
  }; 

  function FuFiCycles_newMatch ($exception) {
    try {
      $S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).nullVars();
    } catch ($exception) {
      if ($T17().$Is($exception)) {
        $S09().CallStatic($T18(), "WriteLine", null, ($exception).get_StackTrace());
      } else {
        throw $exception;
      }
    }
    $S0A().CallVirtual("Add", null, $T05().MATCHS, new ($T16())());
  }; 

  function FuFiCycles_NormRot (rot) {

    for (; +rot > 3.14159274; rot -= 6.28318548) {
    }

    for (; +rot < -3.14159274; rot += 6.28318548) {
    }
    return rot;
  }; 

  function FuFiCycles_RenderAFrame () {
    (this.RenderCanvas$RC$value).Clear($T1B().$Flags("Color", "Depth"));
    (this.keyboardKeys).renderAFrame();
    var sHOWMENU = $T05().SHOWMENU;
    if (sHOWMENU) {
      this.tickMenu();
    } else {
      this.tickIngame();
    }
    this.Present();
  }; 

  function FuFiCycles_renderMiniMap () {
    if ($T05().SHOW_MINIMAP) {
      (this.RenderCanvas$RC$value.Projection = $T1C().CreateOrthographic(+(($T05().MAP_SIZE | 0) * 2), +(($T05().MAP_SIZE | 0) * 2), 0.01, 20).MemberwiseClone());
      this._renderer.View = $S0B().CallStatic($T1C(), "op_Multiply", null, 
        $T1C().CreateRotationX(-1.57079637).MemberwiseClone(), 
        $T1C().CreateTranslation(0, -10, 0).MemberwiseClone()
      ).MemberwiseClone();
      (this.RenderCanvas$RC$value).Viewport(
        (((((this.get_Width() | 0) / 2) | 0) - (((this.get_Width() | 0) / 4) | 0)) | 0), 
        (((this.get_Height() | 0) - (((this.get_Width() | 0) / 3) | 0)) | 0), 
        (((this.get_Width() | 0) / 3) | 0), 
        (((this.get_Width() | 0) / 3) | 0)
      );

      for (var i = 0; i < ($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Count() | 0); i = ((i + 1) | 0)) {
        ($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).renderView(this._renderer);
      }
      $S0C().CallVirtual("Traverse", null, this._renderer, (this.sceneContainers).get_Item("land").Children);
    }
  }; 

  function FuFiCycles_renderPlayers () {
    var $hoisted00 = new ($T21())();

    for (var i = 0; i < ($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Count() | 0); i = ((i + 1) | 0)) {
      var right = $S0B().CallStatic($T1C(), "op_Multiply", null, 
        $S0B().CallStatic($T1C(), "op_Multiply", null, 
          $T1C().CreateRotationZ(this._angleRoll).MemberwiseClone(), 
          $T1C().CreateRotationX(this._angleVert).MemberwiseClone()
        ).MemberwiseClone(), 
        $T1C().CreateRotationY($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)._angleHorz).MemberwiseClone()
      ).MemberwiseClone();
      var left = $T1C().LookAt(
        0, 
        20, 
        +(-+100), 
        0, 
        0, 
        0, 
        0, 
        1, 
        0
      );
      var left2 = $T1C().CreateTranslation(
        +(((2 * +$thisType._offset.x) / +(this.get_Width()))), 
        +(((-2 * +$thisType._offset.y) / +(this.get_Height()))), 
        0
      ).MemberwiseClone();
      (this.RenderCanvas$RC$value.Projection = $S0B().CallStatic($T1C(), "op_Multiply", null, left2.MemberwiseClone(), ($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).getProjection().MemberwiseClone()).MemberwiseClone());
      this._renderer.View = $S0B().CallStatic($T1C(), "op_Multiply", null, 
        $S0B().CallStatic($T1C(), "op_Multiply", null, $S0B().CallStatic($T1C(), "op_Multiply", null, left.MemberwiseClone(), right.MemberwiseClone()).MemberwiseClone(), $T05().SCENE_SCALE.MemberwiseClone()).MemberwiseClone(), 
        $T1C().CreateTranslation($T21().op_UnaryNegation(($hoisted00._ctor(
                (($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).getCycle()).getPosition().x, 
                (($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).getCycle()).getPosition().y, 
                (($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).getCycle()).getPosition().z
              ), 
              $hoisted00)).MemberwiseClone()).MemberwiseClone()
      ).MemberwiseClone();
      var playerId = (($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).getPlayerId() | 0);
      if (playerId !== 1) {
        if (playerId === 2) {
          (this.RenderCanvas$RC$value).Viewport(
            (((this.get_Width() | 0) / 2) | 0), 
            0, 
            (((this.get_Width() | 0) / 2) | 0), 
            this.get_Height()
          );
        }
      } else {
        (this.RenderCanvas$RC$value).Viewport(
          0, 
          0, 
          (((this.get_Width() | 0) / 2) | 0), 
          this.get_Height()
        );
      }
      ($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).renderAFrame(this._renderer);
      $S0C().CallVirtual("Traverse", null, this._renderer, (this.sceneContainers).get_Item("landLines").Children);
    }
  }; 

  function FuFiCycles_Resize () {
    var sHOWMENU = $T05().SHOWMENU;
    if (sHOWMENU) {
      ((this.getMenuGui()).getGUIHandler()).Refresh();
    } else {

      for (var i = 0; i < ($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Count() | 0); i = ((i + 1) | 0)) {
        ($S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).getPlayers().get_Item(i)).resize();
      }
      ((this.getIngameGui()).getGUIHandler()).Refresh();
    }
  }; 

  function FuFiCycles_setIngameGui (ingameGui) {
    this.ingameGui = ingameGui;
  }; 

  function FuFiCycles_setMapSize () {
    var arg_35_1 = null;
    var arg_35_0 = (this.sceneContainers).get_Item("landLines").Children;
    if ((arg_35_1 = $T08().$l$g9__20_0) === null) {
      arg_35_1 = $T08().$l$g9__20_0 = $T06().New($T08().$l$g9, null, new JSIL.MethodPointerInfo($asm06.Fusee.FuFiCycles.Core.FuFiCycles_$l$gc, "$lsetMapSize$gb__20_0", $S0D(), false, false));
    }
    var expr_3F = $S02().CallStatic($T0B(), "First$b1", [$asm09.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T0C(), "FindNodes", null, arg_35_0, arg_35_1));
    var meshComponent = (
      (expr_3F !== null)
         ? $T09().GetMesh(expr_3F, 0)
         : null)
    ;
    $T05().MAP_SIZE = (((meshComponent.BoundingBox).get_Size().x) | 0);
  }; 

  function FuFiCycles_setMenuGui (menuGui) {
    this.menuGui = menuGui;
  }; 

  function FuFiCycles_tickIngame () {
    this.renderPlayers();
    this.renderMiniMap();
    (this.getIngameGui()).refresh();
    ((this.getIngameGui()).getGUIHandler()).RenderGUI();
    $S08().CallStatic($T0B(), "Last$b1", [$asm06.Fusee.FuFiCycles.Core.Match], $T05().MATCHS).tick();
    if (((this.keyboardKeys.keys).get_Item($T29().Escape)).isPressed()) {
      ((this.keyboardKeys.keys).get_Item($T29().Escape)).setUnpressed();
      this.enterMenu();
      (this.getMenuGui()).setViewport();
    }
  }; 

  function FuFiCycles_tickMenu () {
    ((this.getMenuGui()).getGUIHandler()).RenderGUI();
    if (((this.keyboardKeys.keys).get_Item($T29().Escape)).isPressed()) {
      ((this.keyboardKeys.keys).get_Item($T29().Escape)).setUnpressed();
      this.CloseGameWindow();
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.FuFiCycles.Core.FuFiCycles", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      FuFiCycles__ctor
    );

    $.Method({Static:false, Public:true }, "addSceneContainers", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_addSceneContainers
    );

    $.Method({Static:false, Public:false}, "enterFullscreen", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_enterFullscreen
    );

    $.Method({Static:false, Public:false}, "enterMenu", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_enterMenu
    );

    $.Method({Static:false, Public:false}, "exitFullscreen", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_exitFullscreen
    );

    $.Method({Static:false, Public:true }, "getIngameGui", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.GUIIngame")), 
      FuFiCycles_getIngameGui
    );

    $.Method({Static:false, Public:true }, "getMenuGui", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.FuFiCycles.Core.GUIMenu")), 
      FuFiCycles_getMenuGui
    );

    $.Method({Static:false, Public:true }, "getRC", 
      JSIL.MethodSignature.Return($asm04.TypeRef("Fusee.Engine.Core.RenderContext")), 
      FuFiCycles_getRC
    );

    $.Method({Static:false, Public:true }, "getSceneContainers", 
      JSIL.MethodSignature.Return($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm09.TypeRef("Fusee.Serialization.SceneContainer")])), 
      FuFiCycles_getSceneContainers
    );

    $.Method({Static:false, Public:true }, "hideOriginalCycle", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_hideOriginalCycle
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_Init
    );

    $.Method({Static:false, Public:true }, "newMatch", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_newMatch
    );

    $.Method({Static:true , Public:true }, "NormRot", 
      new JSIL.MethodSignature($.Single, [$.Single]), 
      FuFiCycles_NormRot
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_RenderAFrame
    );

    $.Method({Static:false, Public:false}, "renderMiniMap", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_renderMiniMap
    );

    $.Method({Static:false, Public:false}, "renderPlayers", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_renderPlayers
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_Resize
    );

    $.Method({Static:false, Public:true }, "setIngameGui", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.GUIIngame")), 
      FuFiCycles_setIngameGui
    );

    $.Method({Static:false, Public:true }, "setMapSize", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_setMapSize
    );

    $.Method({Static:false, Public:true }, "setMenuGui", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.FuFiCycles.Core.GUIMenu")), 
      FuFiCycles_setMenuGui
    );

    $.Method({Static:false, Public:true }, "tickIngame", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_tickIngame
    );

    $.Method({Static:false, Public:true }, "tickMenu", 
      JSIL.MethodSignature.Void, 
      FuFiCycles_tickMenu
    );

    $.Field({Static:false, Public:true }, "keyboardKeys", $asm06.TypeRef("Fusee.FuFiCycles.Core.KeyboardKeys"));

    $.Field({Static:false, Public:true }, "roboto", $asm01.TypeRef("Fusee.Base.Core.Font"));

    $.Field({Static:false, Public:false}, "ingameGui", $asm06.TypeRef("Fusee.FuFiCycles.Core.GUIIngame"));

    $.Field({Static:false, Public:false}, "menuGui", $asm06.TypeRef("Fusee.FuFiCycles.Core.GUIMenu"));

    $.Field({Static:false, Public:false}, "sceneContainers", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm09.TypeRef("Fusee.Serialization.SceneContainer")]));

    $.Field({Static:false, Public:false}, "_renderer", $asm06.TypeRef("Fusee.FuFiCycles.Core.Renderer"));

    $.Field({Static:false, Public:true }, "_angleVert", $.Single);

    $.Field({Static:false, Public:true }, "_angleRoll", $.Single);

    $.Field({Static:false, Public:true }, "_angleRollInit", $.Single);

    $.Field({Static:true , Public:false}, "_offset", $asm08.TypeRef("Fusee.Math.Core.float2"));

    $.Field({Static:true , Public:false}, "_offsetInit", $asm08.TypeRef("Fusee.Math.Core.float2"));


    function FuFiCycles__cctor () {
      $thisType._offset = new $asm08.Fusee.Math.Core.float2();
      $thisType._offsetInit = new $asm08.Fusee.Math.Core.float2();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FuFiCycles__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

/* class Fusee.FuFiCycles.Core.FuFiCycles+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lhideOriginalCycle$gb__24_0 (c) {
    return c.Name == "cycle";
  }; 

  function $l$gc_$lhideOriginalCycle$gb__24_1 (c) {
    return c.Name == "cycle";
  }; 

  function $l$gc_$lhideOriginalCycle$gb__24_2 (c) {
    return c.Name == "cycle";
  }; 

  function $l$gc_$lsetMapSize$gb__20_0 (c) {
    return c.Name == "Ground";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.FuFiCycles.Core.FuFiCycles+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lhideOriginalCycle$gb__24_0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lhideOriginalCycle$gb__24_0
    );

    $.Method({Static:false, Public:false}, "$lhideOriginalCycle$gb__24_1", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lhideOriginalCycle$gb__24_1
    );

    $.Method({Static:false, Public:false}, "$lhideOriginalCycle$gb__24_2", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lhideOriginalCycle$gb__24_2
    );

    $.Method({Static:false, Public:false}, "$lsetMapSize$gb__20_0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lsetMapSize$gb__20_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__20_0", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__24_0", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__24_1", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__24_2", $asm14.TypeRef("System.Predicate`1", [$asm09.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

